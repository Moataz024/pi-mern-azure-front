{"version":3,"file":"static/js/7248.1af199b1.chunk.js","mappings":"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","sources":["db/schedule.js","pages/Schedule.jsx","widgets/EventsCalendar/styles.js","widgets/EventsCalendar/ViewNavigator.jsx","widgets/EventsCalendar/Navigator.jsx","widgets/EventsCalendar/Event.jsx","widgets/EventsCalendar/index.jsx"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst schedule = [\r\n    {\r\n        name: 'UPS Marketing Event',\r\n        start: moment().set({hour: 9, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 10, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'marketing'\r\n    },\r\n    {\r\n        name: 'Hermes presentation',\r\n        start: moment().set({hour: 12, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 13, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'marketing'\r\n    },\r\n    {\r\n        name: 'Team meeting',\r\n        start: moment().set({hour: 16, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 18, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'workflow'\r\n    },\r\n    {\r\n        name: 'Medical checkup',\r\n        start: moment().set({hour: 11, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 12, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'health'\r\n    },\r\n    {\r\n        name: 'Dinner with friends',\r\n        start: moment().set({hour: 13, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 14, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'other'\r\n    },\r\n    {\r\n        name: 'Semi-annual review',\r\n        start: moment().set({hour: 20, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 22, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'workflow'\r\n    },\r\n]\r\n\r\nexport default schedule","// components\r\nimport PageHeader from '@layout/PageHeader';\r\nimport EventsCalendar from '@widgets/EventsCalendar';\r\n\r\nconst Schedule = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title=\"Schedule\" />\r\n            <EventsCalendar/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Schedule","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\nconst StyledEventsCalendar = styled.div`\r\n  .rbc-month-view,\r\n  .rbc-time-view,\r\n  .rbc-time-header {\r\n    border: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-off-range-bg,\r\n  .rbc-today {\r\n    background: transparent;\r\n  }\r\n\r\n  .rbc-header {\r\n    border-bottom: 1px solid var(--border);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: var(--heading-font);\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    color: var(--header);\r\n    font-weight: 600;\r\n\r\n    button {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .rbc-day-bg + .rbc-day-bg,\r\n  .rbc-header + .rbc-header,\r\n  .rbc-time-header-content,\r\n  .rbc-time-content > * + * > * {\r\n    border-left: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-time-content,\r\n  .rbc-time-content:first-of-type {\r\n    border-top: none;\r\n  }\r\n\r\n  .rbc-time-header.rbc-overflowing {\r\n    border-right: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-month-row + .rbc-month-row {\r\n    border-top: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-day-slot .rbc-time-slot {\r\n    border-top: 1px dashed var(--border);\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    border-bottom: 1px dashed var(--border);\r\n    position: relative;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .rbc-current-time-indicator {\r\n    background: ${theme('theme', {\r\n      light: 'var(--azure)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n  }\r\n\r\n  .rbc-time-gutter {\r\n    width: 68px;\r\n\r\n    .rbc-timeslot-group {\r\n      .rbc-time-slot {\r\n        &:first-of-type {\r\n          flex: 1;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            border-top: 1px dashed var(--border);\r\n            transform: translateY(-50%);\r\n            z-index: 1;\r\n          }\r\n\r\n          .rbc-label {\r\n            position: relative;\r\n            z-index: 2;\r\n            font-family: var(--heading-font);\r\n            font-size: 9px;\r\n            letter-spacing: 0.45px;\r\n            font-weight: 600;\r\n            color: var(--btn-text);\r\n            height: 20px;\r\n            width: 40px;\r\n            background: var(--widget);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            line-height: 11px;\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.day {\r\n    .rbc-day-slot .rbc-timeslot-group:first-of-type .rbc-time-slot:first-of-type {\r\n      border-top: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &.week {\r\n    .rbc-allday-cell,\r\n    .rbc-current-time-indicator{\r\n      display: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &.month .rbc-month-view {\r\n    min-height: 500px;\r\n\r\n    .rbc-date-cell {\r\n      padding: 4px 0 0 0;\r\n      text-align: center;\r\n\r\n      &.rbc-off-range {\r\n        opacity: .5;\r\n      }\r\n\r\n      &.rbc-now .rbc-button-link {\r\n        font-weight: 600;\r\n        color: ${theme('theme', {\r\n            light: 'var(--blue)',\r\n            dark: 'var(--accent)'\r\n        })};\r\n      }\r\n\r\n      .rbc-button-link {\r\n        font-size: 0.75rem;\r\n        font-family: var(--heading-font);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    // tablet portrait\r\n    @media screen and (min-width: 768px) {\r\n      min-height: 800px;\r\n\r\n      .rbc-date-cell {\r\n        text-align: right;\r\n        padding: 10px;\r\n      }\r\n    }\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 1200px;\r\n    }\r\n  }\r\n\r\n  .rbc-time-view {\r\n    flex: unset;\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    max-height: 40px;\r\n\r\n    .rbc-time-slot {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  .rbc-events-container {\r\n    margin: 0 !important;\r\n\r\n    .rbc-event {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n      border-radius: 0;\r\n\r\n      &-label {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .rbc-event {\r\n    padding: 0;\r\n    background: transparent !important;\r\n    border-radius: 0;\r\n    outline: none !important;\r\n  }\r\n\r\n  .rbc-show-more {\r\n    color: ${theme('theme', {\r\n      light: 'var(--blue)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n    background: transparent;\r\n    margin: 10px auto 0;\r\n  }\r\n\r\n  .rbc-row-segment {\r\n    min-height: 20px;\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  text-align: center;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    \r\n    &[dir=\"ltr\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-left: 68px;\r\n      }\r\n    }\r\n\r\n    &[dir=\"rtl\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-right: 68px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  width: 100%;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 300px;\r\n  }\r\n`;\r\n\r\nexport {StyledEventsCalendar, Navigation, Header}","// styled components\r\nimport {Navigation} from './styles';\r\n\r\n// components\r\nimport TabButton from '@ui/TabButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewNavigator = ({current, handler}) => {\r\n    return (\r\n        <Navigation className=\"tab-nav\">\r\n            <TabButton title=\"Month\" active={current === 'month'} onClick={() => handler('month')}/>\r\n            <TabButton title=\"Week\" active={current === 'week'} onClick={() => handler('week')}/>\r\n            <TabButton title=\"Day\" active={current === 'day'} onClick={() => handler('day')}/>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nViewNavigator.propTypes = {\r\n    current: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ViewNavigator","// styled components\r\nimport {Navigation} from './styles';\r\n\r\n// components\r\nimport TabButton from '@ui/TabButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navigator = ({date, handler}) => {\r\n    const handlePrev = () => handler('PREV', date);\r\n    const handleNext = () => handler('NEXT', date);\r\n\r\n    return (\r\n        <Navigation className=\"tab-nav\">\r\n            <TabButton title=\"Prev\" onClick={handlePrev}/>\r\n            <TabButton title=\"Today\" onClick={handler}/>\r\n            <TabButton title=\"Next\" onClick={handleNext}/>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Navigator","// styling\r\nimport styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\n// components\r\nimport TruncatedText from '@components/TruncatedText';\r\nimport Popup from '@components/Popup';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\nimport {useState} from 'react';\r\n\r\n// utils\r\nimport dayjs from 'dayjs';\r\n\r\nconst StyledEvent = styled.div`\r\n  background: rgba(0, 0, 0, 0.4);\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid transparent;\r\n  color: ${theme('theme', {\r\n    light: 'var(--text)',\r\n    dark: '#fff'\r\n  })};\r\n  position: relative;\r\n  min-height: 20px;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${theme('theme', {\r\n      light: '#f7f7f7',\r\n      dark: '#111312'\r\n    })};\r\n    mix-blend-mode: luminosity;\r\n  }\r\n\r\n  &.marketing {\r\n    border-color: var(--turquoise);\r\n    background: var(--turquoise);\r\n  }\r\n\r\n  &.workflow {\r\n    border-color: var(--azure);\r\n    background: var(--azure);\r\n  }\r\n\r\n  &.health {\r\n    border-color: var(--grass);\r\n    background: var(--grass);\r\n  }\r\n\r\n  &.other {\r\n    border-color: var(--accent);\r\n    background: var(--accent);\r\n  }\r\n  \r\n  &.week, &.month {\r\n    .text {\r\n      display: none;\r\n    }\r\n  }\r\n  \r\n  // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      &.week, &.month {\r\n        .text {\r\n            display: block;\r\n        }\r\n      }\r\n      \r\n      &.month {\r\n        min-height: 40px;\r\n      }\r\n    }\r\n`;\r\n\r\nconst Event = ({event, view}) => {\r\n    const [ref, {width}] = useMeasure();\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    const formattedDate = date => dayjs(date).format('HH:mm A');\r\n\r\n    const isEnded = dayjs(event.end).isBefore(dayjs());\r\n\r\n    return (\r\n        <>\r\n            <StyledEvent className={`${event.type} ${view} ${isEnded ? 'ended' : ''}`}\r\n                         ref={ref}\r\n                         onClick={view !== 'day' ? () => setPopupOpen(true) : null}\r\n            >\r\n                <TruncatedText className=\"text p-relative z-2\" text={event.name} lines={1} width={width}/>\r\n            </StyledEvent>\r\n            {\r\n                view !== 'day' &&\r\n                <Popup\r\n                    open={popupOpen}\r\n                    onClose={() => setPopupOpen(false)}>\r\n                    <div className=\"d-flex flex-column g-4\">\r\n                        <h3>{event.name}</h3>\r\n                        <span className=\"label h5\">\r\n                            {formattedDate(event.start)} - {formattedDate(event.end)}\r\n                        </span>\r\n                    </div>\r\n                </Popup>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event","// styles\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\n// styled components\r\nimport {StyledEventsCalendar, Header} from './styles';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport ViewNavigator from './ViewNavigator';\r\nimport Navigator from './Navigator';\r\nimport Event from './Event';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useWindowSize} from 'react-use';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\n\r\n// utils\r\nimport moment from 'moment';\r\n\r\n// events\r\nimport schedule from '@db/schedule';\r\n\r\nconst EventsCalendar = () => {\r\n    const {direction} = useThemeProvider();\r\n    const [currentView, setCurrentView] = useState('day');\r\n    const localizer = momentLocalizer(moment);\r\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\r\n    const [currentTime, setCurrentTime] = useState(moment().format('HH:mm'));\r\n    const {width} = useWindowSize();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentTime(moment().format('HH:mm'));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [currentTime]);\r\n\r\n    const handleNavigation = (action) => {\r\n        switch (action) {\r\n            case 'NEXT':\r\n                setCurrentDate(moment(currentDate).add(1, currentView).toDate());\r\n                break;\r\n            case 'PREV':\r\n                setCurrentDate(moment(currentDate).subtract(1, currentView).toDate());\r\n                break;\r\n            default:\r\n                setCurrentDate(moment().toDate());\r\n        }\r\n    }\r\n\r\n    const getWeek = (date) => {\r\n        const start = moment(date).startOf('week');\r\n        const end = moment(date).endOf('week');\r\n        return [start, end];\r\n    }\r\n\r\n    const getTitleFormat = () => {\r\n        switch (currentView) {\r\n            case 'month':\r\n                return 'MMMM YYYY';\r\n            case 'week':\r\n                return width < 768 ? 'DD.MM.YY' : 'DD MMMM YYYY';\r\n            case 'day':\r\n                return 'DD MMMM YYYY';\r\n            default:\r\n                return 'MMMM YYYY';\r\n        }\r\n    }\r\n\r\n    const getDayFormat = () => {\r\n        switch (true) {\r\n            case width < 768:\r\n                return 'D';\r\n            case width < 1600:\r\n                return 'ddd, D';\r\n            default:\r\n                return 'dddd D MMMM';\r\n        }\r\n    }\r\n\r\n    const config = {\r\n        as: Calendar,\r\n        className: currentView,\r\n        views: ['month', 'week', 'day'],\r\n        view: currentView,\r\n        date: currentDate,\r\n        localizer: localizer,\r\n        startAccessor: 'start',\r\n        endAccessor: 'end',\r\n        onNavigate: handleNavigation,\r\n        onView: setCurrentView,\r\n        min: moment().startOf('year').set({hour: 8, minute: 0}).toDate(),\r\n        max: moment().endOf('year').set({hour: 22, minute: 0}).toDate(),\r\n        step: 30,\r\n        events: schedule,\r\n        formats: {\r\n            timeGutterFormat: 'HH:mm',\r\n            dayFormat: getDayFormat(),\r\n        },\r\n        components: {\r\n            toolbar: ({date}) => <Header data-view={currentView} dir={direction}>\r\n                <Navigator date={date} handler={handleNavigation}/>\r\n                <h3 className=\"date\">\r\n                    {\r\n                        currentView === 'week' && getWeek(date).map((date, index) => {\r\n                                return (\r\n                                    <span key={index}>\r\n                                    {date.format(getTitleFormat(date))}\r\n                                        {index === 0 ? ' - ' : null}\r\n                                </span>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                    {\r\n                        currentView === 'month' && moment(date).format(getTitleFormat(date))\r\n                    }\r\n                    {\r\n                        currentView === 'day' && `${moment(date).format(getTitleFormat(date))}, ${currentTime}`\r\n                    }\r\n                </h3>\r\n                <ViewNavigator current={currentView} handler={setCurrentView}/>\r\n            </Header>,\r\n            event: ({event}) => <Event event={event} view={currentView}/>\r\n        },\r\n        selectable: currentView !== 'day',\r\n        messages: {\r\n            showMore: (total) => `+ ${total}`,\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Spring className=\"card h-fit card-padded\">\r\n            <StyledEventsCalendar {...config}/>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nexport default EventsCalendar"],"names":["name","start","moment","set","hour","minute","second","millisecond","toDate","end","allDay","type","Schedule","_jsxs","_Fragment","children","_jsx","PageHeader","title","EventsCalendar","StyledEventsCalendar","styled","div","withConfig","componentId","theme","light","dark","Header","Navigation","_ref","current","handler","className","TabButton","active","onClick","date","handlePrev","handleNext","StyledEvent","event","view","ref","width","useMeasure","popupOpen","setPopupOpen","useState","formattedDate","dayjs","format","isEnded","isBefore","concat","TruncatedText","text","lines","Popup","open","onClose","direction","useThemeProvider","currentView","setCurrentView","localizer","momentLocalizer","currentDate","setCurrentDate","currentTime","setCurrentTime","useWindowSize","useEffect","interval","setInterval","clearInterval","handleNavigation","action","add","subtract","getWeek","startOf","endOf","getTitleFormat","config","as","Calendar","views","startAccessor","endAccessor","onNavigate","onView","min","max","step","events","schedule","formats","timeGutterFormat","dayFormat","getDayFormat","components","toolbar","dir","Navigator","map","index","ViewNavigator","_ref2","Event","selectable","messages","showMore","total","Spring"],"sourceRoot":""}