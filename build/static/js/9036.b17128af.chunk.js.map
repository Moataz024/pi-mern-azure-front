{"version":3,"file":"static/js/9036.b17128af.chunk.js","mappings":"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","sources":["components/ProgressItem.jsx","components/TeamStatsCard.jsx","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","widgets/TournamentWidgets/TournamentReview/RatingStars.jsx","widgets/TournamentWidgets/TournamentReview/FollowButton.jsx","widgets/TournamentWidgets/TournamentReview/ReviewWidget.jsx","widgets/TournamentWidgets/TournamentReview/ItemInfo.jsx","widgets/TournamentWidgets/TournamentReview/TournamentsTeamSlider.jsx","pages/Tournament/TournamentReview.jsx","ui/GoalsStats.jsx","widgets/TeamStatsSlider.jsx"],"sourcesContent":["// components\r\nimport Progress from '@ui/Progress';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProgressItem = ({title, value, barColor, trackColor}) => {\r\n    return (\r\n        <div className=\"d-flex flex-column g-10\">\r\n            <h6 className=\"label lh-1\">{title}</h6>\r\n            <div className=\"progress-item__progress\">\r\n                <Progress\r\n                    value={value}\r\n                    barColor={barColor}\r\n                    trackColor={trackColor}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProgressItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    barColor: PropTypes.string,\r\n    trackColor: PropTypes.string,\r\n}\r\n\r\nexport default ProgressItem","// components\r\nimport TruncatedText from '@components/TruncatedText';\r\nimport GoalsStats from '@ui/GoalsStats';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\nimport {getClubInfo} from '@utils/helpers';\r\n\r\nconst TeamStatsCard = ({id, value}) => {\r\n    const [ref, {width}] = useMeasure();\r\n    const club = getClubInfo(id);\r\n\r\n    return (\r\n        <div className=\"card h-1 d-flex flex-column border-color-bottom\" style={{borderColor: `var(--${club.color})`}}>\r\n            <div className=\"d-flex flex-column align-items-start flex-1 g-14\"\r\n                 ref={ref}\r\n                 style={{padding: '30px 30px 22px'}}>\r\n                <img className=\"club-logo club-logo--md\" src={club.logo} alt={club.name}/>\r\n                <h3>\r\n                    <TruncatedText text={club.shortName} width={width}/>\r\n                </h3>\r\n            </div>\r\n            <div className=\"card_footer--sm\">\r\n                <GoalsStats goals={value}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTeamStatsCard.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TeamStatsCard","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","\r\nimport  React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport { useState } from 'react';\r\nexport default function BasicRating({selectedTournamentId}) {\r\n  \r\n  const [value, setValue] = useState(2);\r\n\r\n  const handleRatingChange = async (event, newValue) => {\r\n    setValue(newValue);\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Tournament/addRate/${selectedTournamentId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ rate: newValue }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add rate');\r\n      }\r\n      console.log('Rate added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding rate:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& > legend': { mt: 2 },\r\n      }}\r\n    >\r\n      <Rating\r\n        name=\"simple-controlled\"\r\n        value={value}\r\n        onChange={handleRatingChange}\r\n        \r\n      />\r\n     \r\n    </Box>\r\n  );\r\n}","import { useEffect, useState } from 'react';\r\n\r\nconst FollowButton = ({selectedTournamentId}) => {\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [tournament , setTournament]= useState();\r\n    const [tournamentid , setTournamentid]= useState();\r\n\r\n    useEffect(() => {\r\n        const fetchTournamentDetails = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch tournament details');\r\n                }\r\n                const tournamentData = await response.json();\r\n                setTournament(tournamentData);\r\n              \r\n            } catch (error) {\r\n                console.error('Error fetching tournament details:', error);\r\n            }\r\n        };\r\n    \r\n        fetchTournamentDetails();\r\n    }, [selectedTournamentId]);\r\n    const toggleFollow = async () => {\r\n       \r\n        if(selectedTournamentId){\r\n        try {\r\n           \r\n            const response = await fetch(`http://localhost:3000/Tournament/follow/${selectedTournamentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to follow/unfollow tournament');\r\n            }\r\n            setIsFollowing(!isFollowing);\r\n        } catch (error) {\r\n            console.error('Error following/unfollowing tournament:', error);\r\n        }\r\n    };\r\n\r\n    }\r\n    return (\r\n        <div >\r\n        <button style={{marginBottom : '15px'}} className='btn' onClick={toggleFollow}>\r\n            {isFollowing ? 'Unfollow' : 'Follow'}\r\n        </button>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default FollowButton;\r\n","\r\nimport Spring from '@components/Spring';\r\nimport LeagueHeader from '@components/LeagueHeader';\r\nimport ProgressItem from '@components/ProgressItem';\r\nimport AnimatedCount from '@components/AnimatedCount';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\nimport { useEffect , useState } from 'react';\r\nimport BasicRating from './RatingStars';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst ReviewWidget = ({selectedTournamentId}) => {\r\n    const {theme} = useThemeProvider();\r\n    \r\n\r\n\r\nconst [tournament ,setTournament] = useState();\r\nconst [count ,setcount] = useState();\r\nconst [tournamentrates ,settournamentrates] = useState();\r\n    useEffect(() => {\r\n        const fetchTournament = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch tournaments');\r\n                }\r\n                const data = await response.json();\r\n                console.log('Fetched tournament:', data);\r\n                setTournament(data);\r\n                settournamentrates(data.rating);\r\n                calculateAverage(data.rating);\r\n            } catch (error) {\r\n                console.error('Error fetching tournaments:', error);\r\n            }\r\n        };\r\n\r\n        fetchTournament();\r\n    }, []);\r\n\r\n\r\n\r\n    const calculateAverage = (rates) => {\r\n        let totalSum = 0;\r\n        let totalCount = 0;\r\n\r\n        for (const key in rates) {\r\n            totalSum += rates[key] * parseInt(key); \r\n            totalCount += rates[key];\r\n        }\r\n\r\n        const average = totalSum / totalCount;\r\n        setcount(average); \r\n    };\r\n    const getPercents = (tournamentrates) => {\r\n        let total = 0;\r\n        for (const key in tournamentrates) {\r\n            total += tournamentrates[key];\r\n        }\r\n        const result = {};\r\n        for (const key in tournamentrates) {\r\n            result[key] = (tournamentrates[key] / total) * 200;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    if (!tournament) {\r\n        return null ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Spring className=\"card d-flex flex-column justify-content-between g-20 card-padded\">\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n  \r\n        {tournament && (\r\n    <LeagueHeader img={tournament.logo} title={tournament.title} subtitle={tournament.TournamentType} />\r\n  )}\r\n  <div style={{ marginLeft: '50px' ,alignItems: 'center'}}>\r\n    <FollowButton  selectedTournamentId={tournament._id} />\r\n    <BasicRating  selectedTournamentId={tournament._id}/>\r\n  </div>\r\n  \r\n</div>\r\n            <AnimatedCount className=\"h1 large\" count={count} decimals={1} />\r\n            <div className=\"d-flex flex-column g-24\">\r\n                {\r\n                    Object.keys(tournamentrates).map((key, index) => (\r\n                        <ProgressItem\r\n                            key={index}\r\n                            title={key}\r\n                            value={getPercents(tournamentrates)[key]}\r\n                            barColor=\"accent\"\r\n                            trackColor={theme === 'light' ? 'body' : 'border'}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n        </Spring>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewWidget;","// components\r\nimport TruncatedText from '@components/TruncatedText';\r\nimport GoalsStats from '@ui/GoalsStats';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\n\r\nimport defaultLogo1 from \"../../../assets/Def1.png\";\r\nimport defaultLogo2 from \"../../../assets/Def2.png\";\r\nimport defaultLogo3 from \"../../../assets/Def3.png\";\r\nimport defaultLogo4 from \"../../../assets/Def4.png\";\r\nimport PropTypes from 'prop-types';\r\nimport {getClubInfo} from '@utils/helpers';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ItemInfo = ({id, value}) => {\r\n    const [ref, {width}] = useMeasure();\r\n    const club1 = getClubInfo(id);\r\n    const [club ,setClub] = useState();\r\n    useEffect(() => {\r\n        const fetchTeamDetails = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Team/getbyid/${id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch team details');\r\n                }\r\n                const tournamentData = await response.json();\r\n                setClub(tournamentData);\r\n                \r\n            } catch (error) {\r\n                console.error('Error fetching team details:', error);\r\n            }\r\n        };\r\n    \r\n        fetchTeamDetails();\r\n    }, [id])\r\n    \r\n    \r\n    \r\n    const getRandomDefaultLogo = () => {\r\n        const defaultLogos = [defaultLogo1, defaultLogo2, defaultLogo3, defaultLogo4];\r\n        const randomIndex = Math.floor(Math.random() * defaultLogos.length);\r\n        return defaultLogos[randomIndex];\r\n      };\r\n\r\n      const defaultLogos = [defaultLogo1, defaultLogo2, defaultLogo3, defaultLogo4];\r\n      const getDefaultLogo = () => {\r\n        const index = Math.abs(Math.random() * defaultLogos.length) // Hash code to get consistent index\r\n        return defaultLogos[index];\r\n    };\r\n    if(!club){\r\n        return null ;\r\n    }\r\n    return (\r\n        <div className=\"card h-1 d-flex flex-column border-color-bottom\" >\r\n            <div className=\"d-flex flex-column align-items-start flex-1 g-14\"\r\n                 ref={ref}\r\n                 style={{padding: '30px 30px 22px'}}>\r\n               {club.logo ? (\r\n                    <img className=\"club-logo club-logo--md\" src={club.logo} alt={club.name} />\r\n                ) : (\r\n                    <img className=\"club-logo club-logo--md\" src={getRandomDefaultLogo()} alt=\"Default Logo\" />\r\n                )}\r\n                <h3>\r\n                    <TruncatedText text={club.name} width={width}/>\r\n                    \r\n                </h3>\r\n            </div>\r\n            <div className=\"card_footer--sm\">\r\n                <GoalsStats goals={value}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nItemInfo.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ItemInfo;","// components\r\nimport Spring from '@components/Spring';\r\nimport TeamStatsCard from '@components/TeamStatsCard';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport {Autoplay} from 'swiper';\r\nimport SwiperControls from '@ui/SwiperControls';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\nimport axios from 'axios';\r\nimport ItemInfo from './ItemInfo';\r\nimport { Link } from 'react-router-dom';\r\nconst data = [\r\n    {id: 'arsenal', value: 10},\r\n    {id: 'chelsea', value: 12},\r\n    {id: 'mancity', value: 9},\r\n    {id: 'manunited', value: 7},\r\n    {id: 'liverpool', value: 18},\r\n    {id: 'fiorentina', value: 4},\r\n    {id: 'realmadrid', value: 10},\r\n    {id: 'juventus', value: 25}\r\n]\r\n\r\nconst TournamentTeamSlider = ({selectedTournamentId}) => {\r\n    const {direction} = useThemeProvider();\r\n    const [swiper, setSwiper] = useState(null);\r\n    const[tournament ,setTournament] = useState();\r\n    const [teams, setTeams] = useState([]);\r\n    const [DataTeams, setDataTeams] = useState([]);\r\n    const [stop, setstop] = useState(false);\r\n    \r\n      useEffect(() => {\r\n        const fetchTournamentDetails = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch tournament details');\r\n                }\r\n                const tournamentData = await response.json();\r\n                setTournament(tournamentData);\r\n                \r\n            } catch (error) {\r\n                console.error('Error fetching tournament details:', error);\r\n            }\r\n        };\r\n    \r\n        fetchTournamentDetails();\r\n    }, [selectedTournamentId]);\r\n    \r\n    \r\n      useEffect(() => {\r\n        const fetchTeams = async () => {\r\n          try {\r\n            const response = await axios.get(`http://localhost:3000/Tournament/getTeamsOftournament/${selectedTournamentId}`);\r\n            await setTeams(response.data);\r\n            \r\n          } catch (error) {\r\n            console.error('Error fetching teams:', error);\r\n          }\r\n        };\r\n   \r\n        fetchTeams();\r\n      }, [selectedTournamentId]);\r\n\r\n      useEffect(() => {\r\n        const buildData = async () => {\r\n            \r\n                const dataOfTeams = await teams.map(team => ({\r\n                    id: team._id,\r\n                    value: team.matches.length \r\n                }));\r\n                setDataTeams(dataOfTeams);\r\n                setstop(true);\r\n                \r\n            \r\n        };\r\n  \r\n        buildData();\r\n    \r\n    }, [teams]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        if (swiper) {\r\n            swiper.changeLanguageDirection(direction);\r\n            swiper.update();\r\n        }\r\n    }, [direction, swiper]);\r\n\r\n    return (\r\n        <Spring className=\"w-100 h-100 p-relative\">\r\n            <Swiper className=\"w-100 h-100\"\r\n                    style={{paddingTop: 8, marginTop: -8}}\r\n                    onSwiper={setSwiper}\r\n                    modules={[Autoplay]}\r\n                    autoplay={{delay: 3000, disableOnInteraction: false}}\r\n                    speed={1200}\r\n                    dir={direction}\r\n                    breakpoints={{\r\n                        413: {slidesPerView: 2},\r\n                        1279: {slidesPerView: 3},\r\n                        1919: {slidesPerView: 4},\r\n                    }}\r\n                    loop\r\n                    slidesPerView={1}\r\n                    spaceBetween={24}>\r\n                {\r\n                    DataTeams.map((item, index) => (\r\n                        <SwiperSlide className=\"w-100 h-100\"\r\n                                     key={index}\r\n                                     style={{\r\n                                         width: 175,\r\n                                         margin: direction === 'ltr' ? '0 24px 0 0' : '0 0 0 24px'\r\n                                     }}>\r\n                            <Link key={index} to={\"/team-profile\"} state={{ teamId: item.id }} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                <ItemInfo {...item}/>\r\n                            </Link>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            <SwiperControls swiper={swiper}/>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nexport default TournamentTeamSlider;","import AppGrid from '@layout/AppGrid'\r\nimport PageHeader from '@layout/PageHeader'\r\nimport TeamStatsSlider from '@widgets/TeamStatsSlider'\r\nimport TournamentChoice from '@widgets/TournamentWidgets/LeagueWidgets/frontOffice/tournamentChoice'\r\nimport ReviewWidget from '@widgets/TournamentWidgets/TournamentReview/ReviewWidget'\r\nimport TournamentTeamSlider from '@widgets/TournamentWidgets/TournamentReview/TournamentsTeamSlider'\r\nimport React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nconst TournamentReview = () => {\r\n  const { state } = useLocation();\r\n  const tournamentId = state.tournamentId;\r\n//const [tournamentId, setTournamentId] = useState(\"65fd1d5fa662c44a0912a23c\");\r\n\r\n    const widgets = {\r\n        league_rating: <ReviewWidget selectedTournamentId={tournamentId}/>,\r\n        matches_overview : <TournamentChoice selectedTournamentId={tournamentId} />,\r\n       team_stats: <TournamentTeamSlider selectedTournamentId={tournamentId}/>,\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n            <PageHeader title=\"Tournament Details\" />\r\n            <AppGrid id=\"league_overview\" widgets={widgets}/>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default TournamentReview","const GoalsStats = ({ goals = 0 }) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center g-8\">\r\n            <i className=\"icon icon-ball text-12 text-header\"/>\r\n            <span className=\"h6 text-uppercase\" style={{letterSpacing: '0.45px'}}>\r\n                {goals} goals\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoalsStats","// components\r\nimport Spring from '@components/Spring';\r\nimport TeamStatsCard from '@components/TeamStatsCard';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport {Autoplay} from 'swiper';\r\nimport SwiperControls from '@ui/SwiperControls';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\n\r\nconst data = [\r\n    {id: 'arsenal', value: 10},\r\n    {id: 'chelsea', value: 12},\r\n    {id: 'mancity', value: 9},\r\n    {id: 'manunited', value: 7},\r\n    {id: 'liverpool', value: 18},\r\n    {id: 'fiorentina', value: 4},\r\n    {id: 'realmadrid', value: 10},\r\n    {id: 'juventus', value: 25}\r\n]\r\n\r\nconst TeamStatsSlider = () => {\r\n    const {direction} = useThemeProvider();\r\n    const [swiper, setSwiper] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (swiper) {\r\n            swiper.changeLanguageDirection(direction);\r\n            swiper.update();\r\n        }\r\n    }, [direction, swiper]);\r\n\r\n    return (\r\n        <Spring className=\"w-100 h-100 p-relative\">\r\n            <Swiper className=\"w-100 h-100\"\r\n                    style={{paddingTop: 8, marginTop: -8}}\r\n                    onSwiper={setSwiper}\r\n                    modules={[Autoplay]}\r\n                    autoplay={{delay: 3000, disableOnInteraction: false}}\r\n                    speed={1200}\r\n                    dir={direction}\r\n                    breakpoints={{\r\n                        413: {slidesPerView: 2},\r\n                        1279: {slidesPerView: 3},\r\n                        1919: {slidesPerView: 4},\r\n                    }}\r\n                    loop\r\n                    slidesPerView={1}\r\n                    spaceBetween={24}>\r\n                {\r\n                    data.map((item, index) => (\r\n                        <SwiperSlide className=\"w-100 h-100\"\r\n                                     key={index}\r\n                                     style={{\r\n                                         width: 175,\r\n                                         margin: direction === 'ltr' ? '0 24px 0 0' : '0 0 0 24px'\r\n                                     }}>\r\n                            <TeamStatsCard {...item}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            <SwiperControls swiper={swiper}/>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nexport default TeamStatsSlider"],"names":["_ref","title","value","barColor","trackColor","_jsxs","className","children","_jsx","Progress","id","ref","width","useMeasure","club","getClubInfo","style","borderColor","concat","color","padding","src","logo","alt","name","TruncatedText","text","shortName","GoalsStats","goals","_excluded","generateUtilityClasses","defaultTheme","createTheme","Box","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","theme","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","boxClasses","root","ClassNameGenerator","generate","BasicRating","selectedTournamentId","setValue","useState","sx","mt","Rating","onChange","async","event","newValue","fetch","method","headers","body","JSON","stringify","rate","ok","Error","console","log","error","isFollowing","setIsFollowing","tournament","setTournament","tournamentid","setTournamentid","useEffect","response","tournamentData","json","fetchTournamentDetails","marginBottom","onClick","localStorage","getItem","useThemeProvider","count","setcount","tournamentrates","settournamentrates","data","rating","calculateAverage","fetchTournament","rates","totalSum","totalCount","key","parseInt","getPercents","total","result","_Fragment","Spring","display","alignItems","LeagueHeader","img","subtitle","TournamentType","marginLeft","FollowButton","_id","AnimatedCount","decimals","Object","keys","map","index","ProgressItem","setClub","fetchTeamDetails","getRandomDefaultLogo","defaultLogos","defaultLogo1","defaultLogo2","defaultLogo3","defaultLogo4","Math","floor","random","direction","swiper","setSwiper","teams","setTeams","DataTeams","setDataTeams","stop","setstop","axios","get","fetchTeams","dataOfTeams","team","matches","buildData","changeLanguageDirection","update","Swiper","paddingTop","marginTop","onSwiper","modules","Autoplay","autoplay","delay","disableOnInteraction","speed","dir","breakpoints","slidesPerView","loop","spaceBetween","item","SwiperSlide","margin","Link","to","state","teamId","textDecoration","ItemInfo","SwiperControls","TournamentReview","useLocation","tournamentId","widgets","league_rating","ReviewWidget","matches_overview","TournamentChoice","team_stats","TournamentTeamSlider","PageHeader","AppGrid","letterSpacing","TeamStatsSlider","TeamStatsCard"],"sourceRoot":""}