{"version":3,"file":"static/js/7399.a2e1ee96.chunk.js","mappings":"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","sources":["webpack://liga-soccer/./src/widgets/Team/TeamSettings/styles.module.scss?92b8","widgets/Team/TeamSettings/Profile.jsx","widgets/Team/TeamSettings/index.jsx","pages/Team/CreateTeam.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tabs_list\":\"styles_tabs_list__yIo-v\",\"row\":\"styles_row__j8f2x\",\"social_item\":\"styles_social_item__MEp-q\",\"icon\":\"styles_icon__HQT-R\",\"social_connect\":\"styles_social_connect__AHjEi\",\"footer\":\"styles_footer__nh1fv\",\"card\":\"styles_card__Jts+5\",\"container\":\"styles_container__7674u\",\"wrapper\":\"styles_wrapper__ynmSX\",\"title\":\"styles_title__PGTcr\",\"img\":\"styles_img__56Q8E\",\"button\":\"styles_button__ZU4UT\"};","import styles from './styles.module.scss';\r\nimport Select from 'react-select';\r\n// components\r\nimport CustomSelect from '@ui/CustomSelect';\r\nimport { PatternFormat } from 'react-number-format';\r\nimport { toast } from 'react-toastify';\r\n\r\n// hooks\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\nimport countryList from 'react-select-country-list';\r\nimport { City } from 'country-state-city';\r\n\r\n//\r\n\r\nimport Spring from '@components/Spring';\r\nimport LazyImage from '@components/LazyImage';\r\nimport Submenu from '@ui/Submenu';\r\n\r\n// hooks\r\nimport {useRef} from 'react';\r\nimport useFileReader from '@hooks/useFileReader';\r\nimport useSubmenu from '@hooks/useSubmenu';\r\n\r\n// assets\r\nimport user from '@assets/clubs/bvb.webp';\r\nimport placeholder from '@assets/placeholder.webp';\r\nconst Profile = () => {\r\n    const [selectedCountry, setSelectedCountry] = useState();\r\n    const [selectedCity, setSelectedCity] = useState();\r\n    const [cities, setCities] = useState([]);\r\n    const {anchorEl, open, handleClick, handleClose} = useSubmenu();\r\n    const {file, setFile, handleFile} = useFileReader();\r\n    const inputRef = useRef(null);\r\n\r\n    const triggerInput = () => inputRef.current?.click();\r\n\r\n    const submenuActions = [\r\n        {\r\n            label: 'Upload',\r\n            icon: 'upload',\r\n            onClick: triggerInput,\r\n        },\r\n        {\r\n            label: 'Remove',\r\n            icon: 'trash',\r\n            onClick: () => setFile(placeholder)\r\n        }\r\n    ]\r\n    const { register, handleSubmit, formState: { errors }, reset, control } = useForm({\r\n        defaultValues: {\r\n            username: '',\r\n            teamName: '',\r\n            playerList: [],\r\n            email: '',\r\n            nbrplayers:'',\r\n            country: null,\r\n            logo: ''\r\n        }\r\n    });\r\n    const playerOptions = [\r\n        { value: 'player1', label: 'Player 1' },\r\n        { value: 'player2', label: 'Player 2' },\r\n        { value: 'player3', label: 'Player 3' },\r\n        // Add more player options as needed\r\n    ];\r\n\r\n    const getCountriesOptions = () => {\r\n        let countries = countryList().getData();\r\n        for (let i = 0; i < countries.length; i++) {\r\n            if (countries[i].value === 'RU') {\r\n                countries[i].label = 'Russia [terrorist state]';\r\n            }\r\n        }\r\n        return countries;\r\n    }\r\n\r\n    const handleCountryChange = (country) => {\r\n        setSelectedCountry(country);\r\n        setSelectedCity(null);\r\n        let options = [];\r\n        const rawData = City.getCitiesOfCountry(country.value);\r\n        rawData.map(item => options.push({ value: item.name, label: item.name }));\r\n        setCities(options);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        toast.success('Your changes have been successfully saved!');\r\n    }\r\n\r\n    const handleLogoUpload = (e) => {\r\n        \r\n    };\r\n    return (\r\n        <form className=\"d-flex flex-column \" onSubmit={handleSubmit(onSubmit)}>\r\n        \r\n            <div className={styles.row}>\r\n                <input\r\n                    className={classNames('field', { 'field--error': errors.username })}\r\n                    type=\"text\"\r\n                    placeholder=\"Team Name\"\r\n                    {...register('username', { required: true })}\r\n                />\r\n                <input\r\n                    className={classNames('field', { 'field--error': errors.email })}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    {...register('email', { pattern: /^\\S+@\\S+$/i })}\r\n                />\r\n\r\n            </div>\r\n            <div className={styles.row}>\r\n                <Controller\r\n                    name=\"country\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                        <CustomSelect\r\n                            options={getCountriesOptions()}\r\n                            value={field.value}\r\n                            onChange={(value) => {\r\n                                field.onChange(value);\r\n                                handleCountryChange(value);\r\n                            }}\r\n                            placeholder=\"Country\"\r\n                            isSearchable={true}\r\n                            variant=\"basic\"\r\n                            innerRef={field.ref}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"city\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                        <CustomSelect\r\n                            options={cities}\r\n                            value={field.value}\r\n                            onChange={(value) => {\r\n                                field.onChange(value);\r\n                                setSelectedCity(value);\r\n                            }}\r\n                            placeholder=\"City\"\r\n                            isSearchable={true}\r\n                            variant=\"basic\"\r\n                            innerRef={field.ref}\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n            <div>\r\n                <CustomSelect\r\n                    classNamePrefix=\"react-select\"\r\n                    className={classNames('field', { 'field--error': errors.playerList })}\r\n                    placeholder=\"Select Players\"\r\n                    options={playerOptions}\r\n                    {...register('playerList', { required: true })}\r\n                />\r\n            </div>\r\n\r\n            <div >\r\n                {/* Replace this input with a component for selecting players */}\r\n                <input\r\n                    className={classNames('field', { 'field--error': errors.nbrplayers })}\r\n                    type=\"number\"\r\n                    placeholder=\"number of players\"\r\n                    {...register('number of players', { pattern: /^\\S+@\\S+$/i })}\r\n                />\r\n               \r\n            </div>\r\n            \r\n            <br></br>\r\n\r\n             <div className={`${styles.container} d-flex align-items-center`}>\r\n                <div className={styles.wrapper}>\r\n                    <input type=\"file\" onChange={handleFile} ref={inputRef} hidden/>\r\n                    <div>\r\n                        <LazyImage className={styles.img} src={file ? file : user} alt=\"Lottie Poole\"/>\r\n                    </div>\r\n                    <button className={styles.button} onClick={handleClick} aria-label=\"Open menu\">\r\n                        <i className=\"icon-camera\"/>\r\n                    </button>\r\n                    <Submenu open={open} onClose={handleClose} anchorEl={anchorEl} actions={submenuActions}/>\r\n                </div>\r\n                <div className=\"d-flex flex-column g-4\">\r\n                     {/*change avec user.name */}\r\n                    \r\n                    <h3 className=\"text-overflow\">Borussia Dortmund</h3>\r\n                      {/*change avec user.address */}\r\n                    <span className=\"text-overflow\">Germany</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.footer}>\r\n                <button className=\"btn\" type=\"submit\">Create</button>\r\n                <button className=\"btn btn--outlined\" type=\"reset\" onClick={reset}>Cancel</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","// styling\r\nimport styles from './styles.module.scss';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {TabsList} from '@mui/base/TabsList';\r\nimport {TabPanel} from '@mui/base/TabPanel';\r\nimport {Tabs} from '@mui/base/Tabs';\r\nimport TabButton from '@ui/TabButton';\r\nimport Profile from '@widgets/Team/TeamSettings/Profile';\r\nimport Fade from '@mui/material/Fade';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\nimport {useWindowSize} from 'react-use';\r\n\r\nconst TeamSettings = () => {\r\n    const [activeTab, setActiveTab] = useState('profile');\r\n    const {width} = useWindowSize();\r\n\r\n    return (\r\n        <Spring >\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <div className=\"d-flex flex-column justify-content-between flex-1\">\r\n                <Tabs value={activeTab}>\r\n                    <TabsList className={`${styles.tabs_list} tab-nav `}>\r\n                        <TabButton title={width >= 375 ? 'Basic Team' : 'Profile'}\r\n                                   onClick={() => setActiveTab('profile')}\r\n                                   active={activeTab === 'profile'}/>\r\n                \r\n                    </TabsList>\r\n                    <TabPanel value=\"profile\">\r\n                        <Fade in={activeTab === 'profile'} timeout={400}>\r\n                            <div>\r\n                                <Profile/>\r\n                            </div>\r\n                        </Fade>\r\n                    </TabPanel>\r\n                    <TabPanel value=\"basic\">\r\n                        <Fade in={activeTab === 'basic'} timeout={400}>\r\n                            <div>\r\n                                <Profile/>\r\n                            </div>\r\n                        </Fade>\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nexport default TeamSettings","// components\r\nimport PageHeader from '@layout/PageHeader';\r\nimport AppGrid from '@layout/AppGrid';\r\n\r\nimport TeamSettings from '@widgets/Team/TeamSettings';\r\nimport Team from '@widgets/TeamFullInfo';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst widgets = {\r\n    \r\n  // description: <ProfileDescription/>,\r\n   settings: <TeamSettings/>,\r\n  \r\n}\r\n\r\nconst CreateTeam = () => {\r\n   return (\r\n       <>\r\n           <PageHeader title=\"Create Team\" />\r\n           <AppGrid id=\"settings\" widgets={widgets}/>\r\n       </>\r\n   )\r\n}\r\n\r\n/* const CreateTeam = () => {\r\n\r\n    const [teamsData, setTeamsData] = useState([]);\r\n\r\n    \r\n      \r\n      useEffect(() => {\r\n        const fetchTeamsData = async () => {\r\n          try {\r\n            // Fetch teams data from API\r\n            const response = await fetch('http://localhost:3000/Team/getTeamsByMatch/66056a2895be3305f204a6d8');\r\n            const data = await response.json();\r\n            const teamID1 = data.team1Lineup.team;\r\n            const teamID2 = data.team2Lineup.team;\r\n      \r\n            const responses = await fetch(`http://localhost:3000/Team/getbyid/${teamID1}`);\r\n            const Team1 = await responses.json();\r\n            const team1 = {\r\n              id: data.team1Lineup._id,\r\n              name: Team1.name,\r\n              lineup: data.team1Lineup.playerNames\r\n            };\r\n      \r\n            const responses2 = await fetch(`http://localhost:3000/Team/getbyid/${teamID2}`);\r\n            const Team2 = await responses2.json();\r\n            const team2 = {\r\n              id: data.team2Lineup._id,\r\n              name: Team2.name,\r\n              lineup: data.team2Lineup.playerNames\r\n            };\r\n            const datas = [team1, team2];\r\n            setTeamsData(datas);\r\n          } catch (error) {\r\n            console.error('Error fetching teams data:', error);\r\n          }\r\n        };\r\n      \r\n        fetchTeamsData();\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        console.log(teamsData); // Log teamsData whenever it changes\r\n      }, [teamsData]);\r\n\r\n\r\n      const widgets = {\r\n    \r\n        // description: <ProfileDescription/>,\r\n         //settings: <TeamSettings/>,\r\n         settings: <Team teamsData={teamsData[0]}/>,\r\n         settings: <Team teamsData={teamsData[1]}/>,\r\n        \r\n     }\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageHeader title=\"Create Team\" />\r\n            <div className=\"team-container\">\r\n                <Team teamsData={teamsData[0]} />\r\n                <br />\r\n                <Team teamsData={teamsData[1]} />\r\n            </div>\r\n        </>\r\n    )\r\n} */\r\n\r\nexport default CreateTeam"],"names":["Profile","selectedCountry","setSelectedCountry","useState","selectedCity","setSelectedCity","cities","setCities","anchorEl","open","handleClick","handleClose","useSubmenu","file","setFile","handleFile","useFileReader","inputRef","useRef","submenuActions","label","icon","onClick","triggerInput","_inputRef$current","current","click","placeholder","register","handleSubmit","formState","errors","reset","control","useForm","defaultValues","username","teamName","playerList","email","nbrplayers","country","logo","getCountriesOptions","countries","countryList","getData","i","length","value","_jsxs","className","onSubmit","data","toast","success","children","styles","_jsx","classNames","type","required","pattern","Controller","name","render","_ref","field","CustomSelect","options","onChange","City","getCitiesOfCountry","map","item","push","handleCountryChange","isSearchable","variant","innerRef","ref","_ref2","classNamePrefix","concat","hidden","LazyImage","src","user","alt","Submenu","onClose","actions","TeamSettings","activeTab","setActiveTab","width","useWindowSize","Spring","Tabs","TabsList","TabButton","title","active","TabPanel","Fade","in","timeout","widgets","settings","CreateTeam","_Fragment","PageHeader","AppGrid","id"],"sourceRoot":""}