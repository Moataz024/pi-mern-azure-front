{"version":3,"file":"static/js/9332.05d6e330.chunk.js","mappings":"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","sources":["db/groups_matches.js","webpack://liga-soccer/./src/widgets/TournamentWidgets/LeagueWidgets/frontOffice/styles.module.scss?b7ad","webpack://liga-soccer/./src/widgets/TournamentWidgets/LeagueWidgets/frontOffice/GameCard/styles.module.scss?2cf9","ui/ScoreMatch.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/GameCard/RefNStaduim.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/GameCard/GameCard.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/Standings/Row.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/Standings/StandingsDisplay.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/RoundsDisplay.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/GroupsDisplay/GroupStandings.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/GroupsDisplay/ChampionshipGroups.jsx","widgets/TournamentWidgets/LeagueWidgets/frontOffice/tournamentChoice.jsx"],"sourcesContent":["import {nanoid} from 'nanoid';\r\n\r\nconst groups_matches = [\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Ukraine',\r\n            countryCode: 'UA',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Brazil',\r\n            countryCode: 'BR',\r\n            score: 7,\r\n        },\r\n        group: 'A', id: nanoid(5)\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 2,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n        active: true,\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 9,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 1,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Italy',\r\n            countryCode: 'IT',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 6,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Ukraine',\r\n            countryCode: 'UA',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Brazil',\r\n            countryCode: 'BR',\r\n            score: 7,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 2,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 9,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 1,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Italy',\r\n            countryCode: 'IT',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 6,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Ukraine',\r\n            countryCode: 'UA',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Brazil',\r\n            countryCode: 'BR',\r\n            score: 7,\r\n        },\r\n        group: 'A', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 2,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 9,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 1,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Italy',\r\n            countryCode: 'IT',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 6,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'electro',\r\n            countryName: 'Netherlands',\r\n            countryCode: 'NL',\r\n            score: 8,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'Belgium',\r\n            countryCode: 'BE',\r\n            score: 0,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'pink',\r\n            countryName: 'England',\r\n            countryCode: 'GB',\r\n            score: 10,\r\n        },\r\n        team2: {\r\n            color: 'purple',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 2,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Switzerland',\r\n            countryCode: 'CH',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 4,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'pink',\r\n            countryName: 'England',\r\n            countryCode: 'GB',\r\n            score: 10,\r\n        },\r\n        team2: {\r\n            color: 'purple',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 2,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Switzerland',\r\n            countryCode: 'CH',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 4,\r\n        },\r\n        group: 'B', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Ukraine',\r\n            countryCode: 'UA',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Brazil',\r\n            countryCode: 'BR',\r\n            score: 7,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 2,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 9,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 1,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Italy',\r\n            countryCode: 'IT',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 6,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'green',\r\n            countryName: 'Netherlands',\r\n            countryCode: 'NL',\r\n            score: 8,\r\n        },\r\n        team2: {\r\n            color: 'pink',\r\n            countryName: 'Chile',\r\n            countryCode: 'CL',\r\n            score: 0,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'purple',\r\n            countryName: 'England',\r\n            countryCode: 'GB',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'accent',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 4,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'turquoise',\r\n            countryName: 'Denmark',\r\n            countryCode: 'DK',\r\n            score: 6,\r\n        },\r\n        team2: {\r\n            color: 'orange',\r\n            countryName: 'Australia',\r\n            countryCode: 'AU',\r\n            score: 1,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'salmon',\r\n            countryName: 'Switzerland',\r\n            countryCode: 'CH',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'red',\r\n            countryName: 'Costa Rica',\r\n            countryCode: 'CR',\r\n            score: 5,\r\n        },\r\n        group: 'C', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'azure',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'accent',\r\n            countryName: 'Scotland',\r\n            countryCode: 'GB',\r\n            score: 2,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'turquoise',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 6,\r\n        },\r\n        team2: {\r\n            color: 'red',\r\n            countryName: 'Iceland',\r\n            countryCode: 'IS',\r\n            score: 0,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'green',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Nigeria',\r\n            countryCode: 'NG',\r\n            score: 3,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'England',\r\n            countryCode: 'GB',\r\n            score: 8,\r\n        },\r\n        team2: {\r\n            color: 'pink',\r\n            countryName: 'Bosnia and Herzegovina',\r\n            countryCode: 'BA',\r\n            score: 1,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Scotland',\r\n            countryCode: 'GB',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'orange',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 3,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'pink',\r\n            countryName: 'Iceland',\r\n            countryCode: 'IS',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Argentina',\r\n            countryCode: 'AR',\r\n            score: 5,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'salmon',\r\n            countryName: 'Nigeria',\r\n            countryCode: 'NG',\r\n            score: 0,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 2,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'azure',\r\n            countryName: 'Bosnia and Herzegovina',\r\n            countryCode: 'BA',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'red',\r\n            countryName: 'England',\r\n            countryCode: 'GB',\r\n            score: 7,\r\n        },\r\n        group: 'D', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'Sweden',\r\n            countryCode: 'SE',\r\n            score: 1,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'azure',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'blue',\r\n            countryName: 'Slovakia',\r\n            countryCode: 'SK',\r\n            score: 0,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Sweden',\r\n            countryCode: 'SE',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'grass',\r\n            countryName: 'Slovakia',\r\n            countryCode: 'SK',\r\n            score: 1,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'turquoise',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 5,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 2,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'pink',\r\n            countryName: 'Slovakia',\r\n            countryCode: 'SK',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'red',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 4,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'Sweden',\r\n            countryCode: 'SE',\r\n            score: 2,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Slovakia',\r\n            countryCode: 'SK',\r\n            score: 0,\r\n        },\r\n        team2: {\r\n            color: 'pink',\r\n            countryName: 'Poland',\r\n            countryCode: 'PL',\r\n            score: 2,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'salmon',\r\n            countryName: 'Sweden',\r\n            countryCode: 'SE',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'Spain',\r\n            countryCode: 'ES',\r\n            score: 3,\r\n        },\r\n        group: 'E', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Hungary',\r\n            countryCode: 'HU',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'blue',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 3,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'purple',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 1,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'pink',\r\n            countryName: 'Hungary',\r\n            countryCode: 'HU',\r\n            score: 0,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 3,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 2,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Hungary',\r\n            countryCode: 'HU',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 3,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 1,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'purple',\r\n            countryName: 'Hungary',\r\n            countryCode: 'HU',\r\n            score: 0,\r\n        },\r\n        team2: {\r\n            color: 'accent',\r\n            countryName: 'Portugal',\r\n            countryCode: 'PT',\r\n            score: 3,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'green',\r\n            countryName: 'France',\r\n            countryCode: 'FR',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'pink',\r\n            countryName: 'Germany',\r\n            countryCode: 'DE',\r\n            score: 2,\r\n        },\r\n        group: 'F', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'azure',\r\n            countryName: 'England',\r\n            countryCode: 'EN',\r\n            score: 3,\r\n        },\r\n        team2: {\r\n            color: 'red',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 1,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'turquoise',\r\n            countryName: 'Scotland',\r\n            countryCode: 'SC',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'green',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 2,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'salmon',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'blue',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 3,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'orange',\r\n            countryName: 'England',\r\n            countryCode: 'EN',\r\n            score: 4,\r\n        },\r\n        team2: {\r\n            color: 'pink',\r\n            countryName: 'Scotland',\r\n            countryCode: 'SC',\r\n            score: 0,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'accent',\r\n            countryName: 'Scotland',\r\n            countryCode: 'SC',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'purple',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 3,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'red',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 2,\r\n        },\r\n        team2: {\r\n            color: 'azure',\r\n            countryName: 'England',\r\n            countryCode: 'EN',\r\n            score: 2,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'green',\r\n            countryName: 'Croatia',\r\n            countryCode: 'HR',\r\n            score: 0,\r\n        },\r\n        team2: {\r\n            color: 'turquoise',\r\n            countryName: 'England',\r\n            countryCode: 'EN',\r\n            score: 2,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n    {\r\n        team1: {\r\n            color: 'blue',\r\n            countryName: 'Czech Republic',\r\n            countryCode: 'CZ',\r\n            score: 1,\r\n        },\r\n        team2: {\r\n            color: 'salmon',\r\n            countryName: 'Scotland',\r\n            countryCode: 'SC',\r\n            score: 1,\r\n        },\r\n        group: 'G', id: nanoid(5),\r\n    },\r\n]\r\n\r\nexport default groups_matches","// extracted by mini-css-extract-plugin\nexport default {\"navigator\":\"styles_navigator__cEB6C\",\"light\":\"styles_light__Xv23e\",\"dark\":\"styles_dark__VHdmV\",\"slide\":\"styles_slide__gNDqJ\",\"navigator_item\":\"styles_navigator_item__9IU55\",\"active\":\"styles_active__Nb81b\",\"day\":\"styles_day__9Of--\",\"ltr\":\"styles_ltr__8Z-jL\",\"rtl\":\"styles_rtl__+0Wh2\",\"scroll\":\"styles_scroll__1cGCy\",\"scroll_track\":\"styles_scroll_track__RAeDC\",\"card\":\"styles_card__ekNWV\",\"grid\":\"styles_grid__FOjfg\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__3tBB+\",\"light\":\"styles_light__r7t6q\",\"dark\":\"styles_dark__pEG-J\",\"field\":\"styles_field__q4qmW\"};"," import PropTypes from 'prop-types';\r\n const ScoreMatch = ({team1 = 0, team2 = 0, variant = 'main' ,changed}) => {\r\n\r\n     return (\r\n         <div >\r\n             <p> Match Start :\r\n             <span  style={{marginLeft:\"20px\"}} className={`scoreNumber ${changed==='team1' || changed ===true ? 'changed' : ''}`} >\r\n                {team1}</span>\r\n                <span>:</span>\r\n                <span className={`scoreNumber ${changed==='team2' || changed ===true ? 'changed' : ''}`} >\r\n                {team2}</span>\r\n             </p>\r\n         </div>\r\n     ) }\r\n ScoreMatch.propTypes = { team1: PropTypes.number, team2: PropTypes.number, variant: PropTypes.oneOf(['main', 'alt']), }\r\n\r\n\r\nexport default ScoreMatch","// hooks\r\nimport {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaMapMarkerAlt, FaUser } from 'react-icons/fa'; // Import icons// utils\r\nimport PropTypes from 'prop-types';\r\nimport Score from \"@ui/Score\";\r\nimport ScoreMatch from \"@ui/ScoreMatch\";\r\n\r\nconst RefNStaduim = ({variant = 'main', match}) => {\r\n    const [active, setActive] = useState('lineups');\r\n    const[referee , setReferee ] = useState();\r\n    const[stadium , setStadium ] = useState();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchStadium = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Stadium/getbyid/${match.stadium}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch Stadium');\r\n                }\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setStadium(data);\r\n                \r\n            } catch (error) {\r\n                console.error('Error fetching Stadium:', error);\r\n            }\r\n        };\r\n\r\n        fetchStadium();\r\n    }, [match]);\r\n   \r\n    useEffect(() => {\r\n        const fetchreferee = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/User/getbyid/${match._ref}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch referee');\r\n                }\r\n                const data = await response.json();\r\n                console.log(data)\r\n                setReferee(data);\r\n          \r\n            } catch (error) {\r\n                console.error('Error fetching referee:', error);\r\n            }\r\n        };\r\n\r\n        fetchreferee();\r\n    }, [match]);\r\n\r\n    \r\n    const GoToMatchDetails = async (matchId) =>{\r\n      navigate('/match', { state: { matchId } });\r\n    }\r\n\r\n\r\n    if (!stadium || !referee) {\r\n        // If stadium or referee is not defined, return null to prevent rendering\r\n        return null;\r\n    }\r\n    return (\r\n        \r\n        <div className=\"d-grid col-2\">\r\n            <button  className={`btn--switch ${active === 'lineups' && 'active'} ${variant} `}\r\n                    onClick={() => GoToMatchDetails(match._id)}>\r\n                <span className=\"p-relative z-2\">\r\n                <FaMapMarkerAlt className=\"icon\" style={{marginRight : \"10px\"}}/>\r\n                Details\r\n                </span>\r\n            </button>\r\n            \r\n            <button className={`btn--switch ${active === 'lineups' && 'active'} ${variant} `}>\r\n                <span  className=\"p-relative z-2\">\r\n                    <ScoreMatch team1={match.startHour} team2={match.startMinutes} variant=\"alt\"/>\r\n                </span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nRefNStaduim.propTypes = {\r\n    variant: PropTypes.oneOf(['main', 'alt'])\r\n}\r\n\r\nexport default RefNStaduim","// styling\r\nimport styles from './styles.module.scss';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport Lineups from '@components/Lineups';\r\nimport Score from '@ui/Score';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport defaultLogo1 from \"../../../../../assets/Def1.png\";\r\nimport defaultLogo2 from \"../../../../../assets/Def2.png\";\r\nimport defaultLogo3 from \"../../../../../assets/Def3.png\";\r\nimport defaultLogo4 from \"../../../../../assets/Def4.png\";\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\nimport {useWindowSize} from 'react-use';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RefNStaduim from './RefNStaduim';\r\nimport ScoreMatch from \"@ui/ScoreMatch\";\r\nimport axios from \"axios\";\r\n\r\nconst GameCard = ({score,match, index, variant = 'basic',selectedDay ,onClick }) => {\r\n    const {width} = useWindowSize();\r\n    const {theme} = useThemeProvider();\r\n    const defaultLogos = [defaultLogo1, defaultLogo2, defaultLogo3, defaultLogo4];\r\n\r\n    const getRandomDefaultLogo = (prevLogo) => {\r\n        let randomIndex = Math.floor(Math.random() * defaultLogos.length);\r\n        // If there's only one default logo, return it\r\n        if (defaultLogos.length === 1) return defaultLogos[0];\r\n        \r\n        // Loop until we get a different logo from the previous one\r\n        while (defaultLogos[randomIndex] === prevLogo) {\r\n          randomIndex = Math.floor(Math.random() * defaultLogos.length);\r\n        }\r\n        return defaultLogos[randomIndex];\r\n      };\r\n    const [team1Name, setTeam1Name] = useState(null);\r\n    const [team2Name, setTeam2Name] = useState(null);\r\n    const [team2Logo, setteam2Logo] = useState(null);\r\n    const [team1Logo, setteam1Logo] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchTeamDetails = async () => {\r\n        try {\r\n          // Fetch team details for team1\r\n          const team1Response = await fetch(`http://localhost:3000/Team/getbyid/${match.team1}`);\r\n          if (!team1Response.ok) {\r\n            throw new Error('Failed to fetch team details');\r\n          }\r\n          const team1Data = await team1Response.json();\r\n          setTeam1Name(team1Data.name);\r\n          setteam1Logo(team1Data.logo || getRandomDefaultLogo(team1Data.logo));\r\n          // Fetch team details for team2\r\n          const team2Response = await fetch(`http://localhost:3000/Team/getbyid/${match.team2}`);\r\n          if (!team2Response.ok) {\r\n            throw new Error('Failed to fetch team details');\r\n          }\r\n          const team2Data = await team2Response.json();\r\n          setTeam2Name(team2Data.name);\r\n          setteam2Logo(team2Data.logo || getRandomDefaultLogo(team2Data.logo));\r\n        } catch (error) {\r\n          console.error('Error fetching team details:', error);\r\n        }\r\n      };\r\n  \r\n      fetchTeamDetails();\r\n    }, [match]);\r\n  \r\n    if (match.startDay !== selectedDay ) {\r\n        return null; \r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Spring className={`${styles.container} ${styles[theme]} h-100`} type=\"slideUp\" index={index}>\r\n            <div className=\"card-padded d-flex flex-column g-20\"\r\n                 style={{paddingBottom: variant !== 'extended' ? 'var(--card-padding)' : 10}}>\r\n                    \r\n                <div className=\"d-flex align-items-center justify-content-between p-relative\">\r\n                    \r\n                \r\n                    <img className=\"club-logo\" src={team1Logo } alt={team1Logo}/>\r\n                    <Score team1={score.scoreTeam1}  team2={score.scoreTeam2}   />\r\n\r\n                    <img className=\"club-logo\" src={team2Logo } alt={team2Logo}/>\r\n                </div>\r\n                {\r\n                    width >= 414 && (\r\n                        <div className=\"d-flex justify-content-between g-30\">\r\n                            <div style={{minWidth: 0}}>\r\n                                <h3>{team1Name}</h3>\r\n                               \r\n                            </div>\r\n                            <div className=\"text-right\" style={{minWidth: 0}}>\r\n                                <h3>{team2Name}</h3>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            {\r\n                variant === 'extended' && (\r\n                    <div className=\"border-top\">\r\n                        <Lineups wrapperClass={styles.field} isCompact/>\r\n                    </div>\r\n                )\r\n            }\r\n          \r\n            <RefNStaduim  variant=\"alt\" match={match}/>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nGameCard.propTypes = {\r\n    match: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    variant: PropTypes.oneOf(['basic', 'extended'])\r\n}\r\n\r\nexport default GameCard;","// styling\r\nimport styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\nimport { useEffect ,useState } from 'react';\r\n// components\r\nimport Spring from '@components/Spring';\r\n\r\n// hooks\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const StyledRow = styled.div`\r\n  height: 25px;\r\n  display: grid;\r\n  grid-template-columns: minmax(0, calc(100% - 28px)) 28px;\r\n  gap: 2px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n\r\n  &.reverse {\r\n    grid-template-columns: 28px minmax(0, calc(100% - 28px));\r\n  }\r\n\r\n  &.top div {\r\n    background: var(--border);\r\n  }\r\n\r\n  div {\r\n    height: 25px;\r\n    background: ${theme('theme', {\r\n      light: 'var(--body)',\r\n      dark: 'var(--black-2)'\r\n    })};\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    color: var(--btn-text);\r\n    line-height: 1;\r\n\r\n    &.total {\r\n      justify-content: center;\r\n    }\r\n\r\n    .index {\r\n      width: 30px;\r\n      display: inline-flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .points {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 28px);\r\n    text-align: center;\r\n  }\r\n\r\n  &.rtl div.info {\r\n    border-right: 4px solid ${props => props.color ? `var(--${props.color})` : 'transparent'};\r\n\r\n    &.minimal {\r\n      padding-right: 8px;\r\n    }\r\n  }\r\n\r\n  &.ltr div.info {\r\n    border-left: 4px solid ${props => props.color ? `var(--${props.color})` : 'transparent'};\r\n\r\n    &.minimal {\r\n      padding-left: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TeamScoreRow = ({data, index, variant = 'minimal'}) => {\r\n    const {direction} = useThemeProvider();\r\n    const [name , setName] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTeamDetails = async () => {\r\n          try {\r\n            // Fetch team details for team1\r\n            const team1Response = await fetch(`http://localhost:3000/Team/getbyid/${data.team}`);\r\n            if (!team1Response.ok) {\r\n              throw new Error('Failed to fetch team details');\r\n            }\r\n            const team1Data = await team1Response.json();\r\n            setName(team1Data.name);\r\n            } catch (error) {\r\n            console.error('Error fetching team details:', error);\r\n            }\r\n            \r\n        };\r\n        \r\n        fetchTeamDetails();\r\n    }, [data]);\r\n\r\n   \r\n\r\n    return (\r\n\r\n      \r\n        <Spring index={index} type=\"slideUp\">\r\n            <StyledRow className={`${index === 0 ? 'top' : ''} ${direction} label h6`} color={data.color}>\r\n                <div className={`info ${variant}`}>\r\n                    {variant === 'league' && <span className=\"index\">{index + 1}</span>}\r\n                    <span className=\"flex-1 text-overflow\">{[name]}</span>\r\n                    {\r\n                        variant === 'league' && (\r\n                            <div className=\"points\">\r\n                                <span>{data.wins}</span>\r\n                                <span>{data.draws}</span>\r\n                                <span>{data.loses}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"total\">{variant === 'minimal' ? data.points : data.points}</div>\r\n            </StyledRow>\r\n        </Spring>\r\n    );\r\n}\r\n\r\nTeamScoreRow.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    variant: PropTypes.oneOf(['minimal', 'league'])\r\n}\r\n\r\nexport default TeamScoreRow","import React, { useState, useEffect } from 'react';\r\nimport Spring from '@components/Spring';\r\nimport TeamScoreRow from './Row';\r\n\r\nconst StandingsDisplay = ({ selectedTournamentId }) => {\r\n  const [standings, setStandings] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [teamData, setTeamData] = useState({});\r\n  const [tournament, setTournament] = useState({});\r\n \r\n\r\n  useEffect(() => {\r\n    const fetchTournamentDetails = async () => {\r\n      try {\r\n        if (selectedTournamentId) {\r\n          const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch tournament details');\r\n          }\r\n          const tournamentData = await response.json();\r\n          setTournament(tournamentData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tournament details:', error);\r\n      }\r\n    };\r\n\r\n    fetchTournamentDetails();\r\n  }, [selectedTournamentId]);\r\n\r\n  useEffect(() => {\r\n    const fetchStandings = async () => {\r\n      try {\r\n        if (tournament._id) {\r\n          const response = await fetch(`http://localhost:3000/Standings/GetByTournament/${tournament._id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch standings data');\r\n          }\r\n          const data = await response.json();\r\n          const sortedStandings = data.standings.sort((a, b) => b.points - a.points);\r\n          setStandings(sortedStandings);\r\n          \r\n\r\n          const teamIds = data.standings.map(standing => standing.team);\r\n          const teamPromises = teamIds.map(fetchTeamData);\r\n          const teamResults = await Promise.all(teamPromises);\r\n\r\n          const teamDataObject = {};\r\n          teamIds.forEach((teamId, index) => {\r\n            teamDataObject[teamId] = teamResults[index];\r\n          });\r\n          setTeamData(teamDataObject);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching standings:', error);\r\n        setError('Failed to fetch standings data');\r\n      }\r\n    };\r\n\r\n    fetchStandings();\r\n  }, [selectedTournamentId, tournament._id]);\r\n\r\n  // Function to fetch team data\r\n  const fetchTeamData = async (teamId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Team/getbyid/${teamId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch team data');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching team data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!selectedTournamentId) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Standings</h2>\r\n      <Spring className=\"card d-flex flex-column g-16 card-padded\">\r\n        <div className=\"d-flex flex-column\">\r\n          <h3>{tournament.title}</h3>\r\n          <p className=\"text-12\">Standing after group stage</p>\r\n        </div>\r\n        <div className=\"d-flex flex-column g-2\">\r\n          {standings.map((item, index) => (\r\n            <TeamScoreRow key={index} data={item} index={index} />\r\n          ))}\r\n        </div>\r\n      </Spring>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StandingsDisplay;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Bracket } from 'react-brackets';\r\n\r\nconst RoundsDisplay = ({ selectedTournamentId }) => {\r\n    const [rounds, setRounds] = useState([]);\r\n    const [roundsDb, setRoundsDB] = useState([]);\r\n    const [tournament, setTournament] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchTournamentDetails = async () => {\r\n            try {\r\n                if (selectedTournamentId) {\r\n                    const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch tournament details');\r\n                    }\r\n                    const tournamentData = await response.json();\r\n                    setTournament(tournamentData);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching tournament details:', error);\r\n            }\r\n        };\r\n\r\n        fetchTournamentDetails();\r\n    }, [selectedTournamentId]);\r\n\r\n    useEffect(() => {\r\n        const fetchFirstRoundMatches = async () => {\r\n            try {\r\n                if (tournament._id) {\r\n                    const response = await fetch(`http://localhost:3000/Tournament/KnockoutTournament/${tournament._id}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch first round matches');\r\n                    }\r\n                    const data = await response.json();\r\n                    setRoundsDB(data.rounds);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching first round matches:', error);\r\n            }\r\n        };\r\n\r\n        fetchFirstRoundMatches();\r\n    }, [tournament._id, selectedTournamentId]);\r\n\r\n    const fetchTeamDetails = async (teamId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Team/getbyid/${teamId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch team details');\r\n            }\r\n            const teamData = await response.json();\r\n            return teamData.name;\r\n        } catch (error) {\r\n            console.error('Error fetching team details:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchMatchDetails = async (matchId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Match/getbyid/${matchId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch match details');\r\n            }\r\n            const matchData = await response.json();\r\n            return matchData;\r\n        } catch (error) {\r\n            console.error('Error fetching match details:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const transformDataToRounds = async () => {\r\n            if (roundsDb.length === 0 || !Array.isArray(roundsDb)) return;\r\n\r\n            const transformedRoundsData = await Promise.all(roundsDb.map(async (round) => {\r\n                const roundSeeds = await Promise.all(round.fixtures.map(async (fixture, index) => {\r\n                    const match = await fetchMatchDetails(fixture._id);\r\n                    const homeTeamName = await fetchTeamDetails(match.team1);\r\n                    const awayTeamName = await fetchTeamDetails(match.team2);\r\n                    return {\r\n                        id: index + 1,\r\n                        teams: [\r\n                            { name: homeTeamName || \"Unknown Team\" },\r\n                            { name: awayTeamName || \"Unknown Team\" }\r\n                        ]\r\n                    };\r\n                }));\r\n                return {\r\n                    title: round.title,\r\n                    seeds: roundSeeds\r\n                };\r\n            }));\r\n\r\n            setRounds(transformedRoundsData);\r\n        };\r\n\r\n        transformDataToRounds();\r\n    }, [roundsDb]);\r\n\r\n    return (\r\n        <div >\r\n\r\n\r\n            <Bracket rounds={rounds} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoundsDisplay;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Spring from '@components/Spring';\r\nimport TeamScoreRow from '../Standings/Row';\r\n\r\nconst GroupStandingsDisplay = ({ StandingsId }) => {\r\n  const [standings, setStandings] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [teamData, setTeamData] = useState({});\r\n  const [tournament, setTournament] = useState({});\r\n  const[SID , setTID] = useState(StandingsId.StandingsId)\r\n\r\n \r\n  useEffect(() => {\r\n    const fetchStandings = async () => {\r\n      try {\r\n        if (StandingsId) {\r\n          const response = await fetch(`http://localhost:3000/Standings/GetbyID/${StandingsId}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch standings data');\r\n          }\r\n          const data = await response.json();\r\n          const sortedStandings = data.standings.sort((a, b) => b.points - a.points);\r\n          setStandings(sortedStandings);\r\n          \r\n\r\n          const teamIds = data.standings.map(standing => standing.team);\r\n          const teamPromises = teamIds.map(fetchTeamData);\r\n          const teamResults = await Promise.all(teamPromises);\r\n\r\n          const teamDataObject = {};\r\n          teamIds.forEach((teamId, index) => {\r\n            teamDataObject[teamId] = teamResults[index];\r\n          });\r\n          setTeamData(teamDataObject);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching standings:', error);\r\n        setError('Failed to fetch standings data');\r\n      }\r\n    };\r\n\r\n    fetchStandings();\r\n  }, [StandingsId]);\r\n\r\n  // Function to fetch team data\r\n  const fetchTeamData = async (teamId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Team/getbyid/${teamId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch team data');\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error fetching team data:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Standings</h2>\r\n      <Spring className=\"card d-flex flex-column g-16 card-padded\">\r\n        <div className=\"d-flex flex-column\">\r\n          \r\n          <p className=\"text-12\">Standing of the group stage</p>\r\n        </div>\r\n        <div className=\"d-flex flex-column g-2\">\r\n          {standings.map((item, index) => (\r\n            <TeamScoreRow key={index} data={item} index={index} />\r\n          ))}\r\n        </div>\r\n      </Spring>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupStandingsDisplay;\r\n","// components\r\nimport Spring from '@components/Spring';\r\nimport SelectionList from '@ui/SelectionList';\r\n\r\nimport ScrollContainer from '@components/ScrollContainer';\r\n\r\n// hooks\r\nimport {useState, useRef, useEffect} from 'react';\r\nimport useMeasure from 'react-use-measure';\r\n\r\n// constants\r\nimport {GROUPS_OPTIONS} from '@constants/selection_options';\r\n\r\n// data placeholder\r\nimport groups_matches from '@db/groups_matches';\r\nimport GroupStandingsDisplay from './GroupStandings';\r\n\r\nconst ChampionshipGroups = (selectedTournamentId) => {\r\n    const [ref, {height}] = useMeasure();\r\n    const trackRef = useRef(null);\r\n    const [group, setGroup] = useState(GROUPS_OPTIONS[0].value);\r\n    const groupMatches = groups_matches.filter(match => match.group.toLowerCase() === group);\r\n    const[tID , setTID] = useState(selectedTournamentId.selectedTournamentId)\r\nconst [Tournament , settournament] = useState();\r\nconst [Standings , setStandings] = useState();\r\n\r\n    useEffect(() => {\r\n        trackRef.current && trackRef.current.scrollTo({top: 0, behavior: 'smooth'});\r\n    }, [group]);\r\n    useEffect(() => {\r\n        const fetchTournamentDetails = async () => {\r\n          try {\r\n            \r\n            if (selectedTournamentId) {\r\n              const response = await fetch(`http://localhost:3000/Tournament/getbyid/${tID}`);\r\n              if (!response.ok) {\r\n                throw new Error('Failed to fetch tournament details');\r\n              }\r\n              const tournamentData = await response.json();\r\n              settournament(tournamentData);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching tournament details:', error);\r\n          }\r\n        };\r\n    if(tID){\r\n        fetchTournamentDetails();\r\n    }\r\n      }, [tID]);\r\n\r\n\r\n      useEffect(() => {\r\n        const fetchStandingsIds = async () => {\r\n        try {\r\n            if (tID) {\r\n                const response = await fetch(`http://localhost:3000/Tournament/GetGroupsAndStandings/${tID}`);\r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch tournament details');\r\n                }\r\n                const standingIds = await response.json();\r\n                setStandings(standingIds.StandingsByGroup);\r\n              }\r\n            } catch (error) {\r\n    \r\n        }\r\n\r\n        };\r\n        if(Tournament){\r\n            fetchStandingsIds();\r\n        }\r\n      }, [Tournament,tID])\r\n      \r\n\r\n    \r\n\r\n    \r\n\r\nconst [groupNames ,setGroupNames] = useState([]);\r\nuseEffect(() => {\r\n    const generateGroupNames = async () => {\r\n        console.log(Standings);\r\n        const generatedGroupOptions = Standings.map((_, index) => ({\r\n            label: `Group ${String.fromCharCode(65 + index)}`,\r\n            value: String.fromCharCode(97 + index)\r\n        }));\r\n        setGroupNames(generatedGroupOptions);\r\n    };\r\n\r\n    if (Standings) {\r\n        generateGroupNames();\r\n    }\r\n}, [Standings]);\r\n\r\nuseEffect(() => {\r\n    console.log(groupNames);\r\n}, [groupNames]);\r\n\r\n      \r\nreturn (\r\n    <>\r\n        {groupNames.length > 0 && (\r\n            <Spring className=\"card h-4\">\r\n                <SelectionList options={Standings.map((standing, index) => ({ label: `Group ${String.fromCharCode(65 + index)}`, value: String.fromCharCode(97 + index) }))} active={group} setActive={setGroup} innerRef={ref}/>\r\n                <ScrollContainer height={height}>\r\n                    <div className=\"track d-flex flex-column g-20\" ref={trackRef} style={{padding: 20}}>\r\n\r\n                        <GroupStandingsDisplay StandingsId={Standings[group.charCodeAt(0) - 97]} />\r\n                    </div>\r\n                </ScrollContainer>\r\n            </Spring>\r\n        )}\r\n    </>\r\n)\r\n}\r\n\r\nexport default ChampionshipGroups;","import { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nimport Spring from '@components/Spring';\r\nimport { NavLink } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport { getMonthDays } from '@utils/helpers';\r\nimport classNames from 'classnames';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useThemeProvider } from '@contexts/themeContext';\r\nimport GameCard from './GameCard/GameCard';\r\nimport ScrollContainer from '@components/ScrollContainer';\r\nimport StandingsDisplay from './Standings/StandingsDisplay';\r\nimport RoundsDisplay from './RoundsDisplay';\r\nimport ChampionshipGroups from './GroupsDisplay/ChampionshipGroups';\r\nimport {toast} from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nconst Navigator = ({ active, setActive }) => {\r\n    const { theme, direction } = useThemeProvider();\r\n    const [swiper, setSwiper] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (swiper) {\r\n            swiper.slideToLoop(parseInt(active) - 1);\r\n        }\r\n    }, [swiper, active]);\r\n\r\n    useEffect(() => {\r\n        if (swiper) {\r\n            swiper.changeLanguageDirection(direction);\r\n            swiper.update();\r\n        }\r\n    }, [swiper, direction]);\r\n\r\n    return (\r\n        <div className={`${styles.navigator} ${theme === 'light' ? styles.light : styles.dark}`}>\r\n            <Swiper\r\n                className=\"h-100\"\r\n                slidesPerView=\"auto\"\r\n                spaceBetween={10}\r\n                centeredSlides={true}\r\n                onSwiper={setSwiper}\r\n                loop\r\n                initialSlide={+active - 1}\r\n            >\r\n                {getMonthDays().map((day, index) => (\r\n                    <SwiperSlide className={styles.slide} key={index}>\r\n                        <div\r\n                            className={classNames(`${styles.navigator_item} ${styles[direction]}`, {\r\n                                [styles.active]: active === parseInt(day.date)\r\n                            })}\r\n                            onClick={() => setActive(parseInt(day.date))}\r\n                        >\r\n                            <h4 className={styles.day}>{day.date}</h4>\r\n                            <span className=\"label h6\">{day.weekday}</span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TournamentChoice = ({ selectedTournamentId }) => {\r\n    const [fixtures, setFixtures] = useState([]);\r\n    const today = dayjs().date();\r\n    const [selectedDay, setSelectedDay] = useState(today); // Default selected day\r\n    const [tournament, settournament]= useState({})\r\n    const [matchResult, setMatchResult] = useState(null);\r\n\r\n    const [tournamentType , settournamentType] =useState();\r\n    const [rounds , setRounds] = useState([]);\r\n    const [groupMatches , setGroupMatches] =useState([]);\r\n    useEffect(() => {\r\n        const fetchTournamentDetails = async () => {\r\n\r\n            try {\r\n                if (selectedTournamentId){\r\n                    const response = await fetch(`http://localhost:3000/Tournament/getbyid/${selectedTournamentId}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch tournament details');\r\n                    }\r\n                    const tournamentData = await response.json();\r\n                    settournament(tournamentData);\r\n                    settournamentType(tournament.TournamentType);\r\n                }\r\n\r\n            } catch (error) {\r\n                toast.error('Error fetching tournament details:', error);\r\n            }\r\n        };\r\n\r\n        fetchTournamentDetails();\r\n    }, [selectedTournamentId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMatchesForLeague = async () => {\r\n            try {\r\n                if (tournament._id) {\r\n                    const response = await fetch(`http://localhost:3000/Tournament/fixturesByDay/${tournament._id}/${selectedDay}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch fixtures');\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(data.fixtures);\r\n                    setFixtures(data.fixtures);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching fixtures:', error);\r\n            }\r\n        };\r\n\r\n        fetchMatchesForLeague();\r\n    }, [tournament._id, selectedDay]);\r\n\r\n    useEffect(() => {\r\n        const fetchMatchesForKnockout = async () => {\r\n            try {\r\n                if (tournament._id) {\r\n                    const response = await fetch(`http://localhost:3000/Tournament/FixturesByDayKnockout/${tournament._id}/${selectedDay}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch matches for Knockout');\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(\"ddddd\", data.fixtures);\r\n\r\n                    const fixtureIds = data.fixtures.map(fixture => fixture._id);\r\n                    console.log(\"aaaaaaaa\", fixtureIds);\r\n\r\n                    setRounds(data.fixtures);\r\n\r\n                    // Use the first matchId (if available) to fetch match result\r\n                    if (fixtureIds.length > 0) {\r\n                        fetchMatchResult(fixtureIds[0]); // Fetch match result for the first match\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching fixtures:', error);\r\n            }\r\n        };\r\n\r\n        const fetchMatchResult = async (matchId) => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/result/resultMatch/${matchId}`);\r\n                console.log(\"youssef\", response.data);\r\n                setMatchResult(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching match result:', error);\r\n            }\r\n        };\r\n\r\n        fetchMatchesForKnockout();\r\n    }, [tournament._id, selectedDay]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMatchesForChampionship = async () => {\r\n            try {\r\n                if (tournament._id) {\r\n                    const response = await fetch(`http://localhost:3000/Tournament/MatcheGroupsByday/${tournament._id}/${selectedDay}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch matches for Knockout');\r\n                    }\r\n                    const data = await response.json();\r\n                    setGroupMatches(data.fixtures);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching fixtures:', error);\r\n            }\r\n        };\r\n\r\n        fetchMatchesForChampionship();\r\n    }, [tournament._id, selectedDay]);\r\n\r\n    useEffect(() => {\r\n        const fetchMatchesForLeague = async () => {\r\n            try {\r\n\r\n                if (tournament._id) { // Check if selectedTournamentId is not undefined\r\n                    const response = await fetch(`http://localhost:3000/Tournament/fixturesByDay/${tournament._id}/${selectedDay}`);\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch fixtures');\r\n                    }\r\n                    const data = await response.json();\r\n                    console.log(data.fixtures)\r\n                    setFixtures(data.fixtures);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching fixtures:', error);\r\n            }\r\n        };\r\n\r\n        const fetchMatchesForKnockout = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Tournament/FixturesByDayKnockout/${tournament._id}/${selectedDay}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch matches for Knockout');\r\n                }\r\n\r\n                const data = await response.json();\r\n                console.log(data.fixtures+\"dddddddddddöööööö\")\r\n                setRounds(data.fixtures);\r\n            } catch (error) {\r\n                console.error('Error fetching matches for type 2:', error);\r\n            }\r\n        };\r\n        const fetchMatchesForChampionship = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Tournament/getMatchesFromGroupsWithMatches/${tournament._id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch matches for Knockout');\r\n                }\r\n                const data = await response.json();\r\n                setGroupMatches(data.gamesByGroup);\r\n            } catch (error) {\r\n                console.error('Error fetching matches for type 2:', error);\r\n            }\r\n        };\r\n\r\n        if ( tournamentType) { // Check if tournamentType is set before fetching matches\r\n            if ( tournamentType === 'League') {\r\n                fetchMatchesForLeague();\r\n            } else if ( tournamentType === 'Knockout') {\r\n                fetchMatchesForKnockout();\r\n            }else if ( tournamentType === 'Championship'){\r\n                fetchMatchesForChampionship();\r\n            }\r\n        }\r\n    }, [selectedTournamentId]);\r\n\r\n    /////////////////////////////\r\n    // Render match result when available\r\n    const score = {\r\n        scoreTeam1: 0, // Default score for team 1\r\n        scoreTeam2: 0, // Default score for team 2\r\n    };\r\n\r\n    console.log(\"vcvcvcvvc\",matchResult)\r\n\r\n    if (matchResult) {\r\n        score.scoreTeam1 = matchResult.team1Goals;\r\n        score.scoreTeam2 = matchResult.team2Goals;\r\n\r\n    }\r\n    console.log(\"team1\",score.scoreTeam1)\r\n    console.log(\"TEAM2\",score.scoreTeam2)\r\n\r\n\r\n\r\n\r\n\r\n    /////////////////////////////\r\n\r\n    return (\r\n        <Spring className=\"card d-flex flex-column\">\r\n            <div className=\"card_header d-flex flex-column g-10\" style={{ paddingBottom: 20 }}>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <h3>{dayjs().format('MMMM')} matches</h3>\r\n                    <NavLink className=\"text-button\" to=\"/schedule\">\r\n                        Scheduler\r\n                    </NavLink>\r\n                </div>\r\n                <Navigator active={selectedDay} setActive={setSelectedDay} />\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column g-24\" style={{ paddingBottom: 24 }}>\r\n                <div className={styles.grid}>\r\n                    <div className={styles.scroll}>\r\n                        <ScrollContainer height={0}>\r\n                            <div className={`${styles.scroll_track} track d-flex flex-column g-20`}>\r\n                                <div className=\"game-container\">\r\n                                    {tournament.TournamentType === 'League' ? (\r\n                                        <div className={`${styles.card}`}>\r\n                                            {fixtures.map((fixture, index) => (\r\n                                                <div key={index} className=\"fixture-table\" style={{marginBottom : '15px'}}>\r\n                                                    <GameCard match={fixture} selectedDay={selectedDay}  />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : tournament.TournamentType === 'Knockout' ? (\r\n                                        <div className={`${styles.card}`}>\r\n                                            {rounds.map((fixture, index) => (\r\n                                                <div key={index} className=\"fixture-table\"  style={{marginBottom : '15px'}}>\r\n                                                    <GameCard  score={score}  match={fixture} selectedDay={selectedDay}  />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : tournament.TournamentType === 'Championship' ? (\r\n                                        <div className={`${styles.card}`}>\r\n                                            {groupMatches.map((fixture, index) => (\r\n                                                <div key={index} className=\"fixture-table\" style={{marginBottom : '15px'}}>\r\n                                                    <GameCard match={fixture} selectedDay={selectedDay}   />\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </ScrollContainer>\r\n                    </div>\r\n                    {tournament.TournamentType === 'League' ? (\r\n                        <div className={`${styles.card}`}>\r\n                            <StandingsDisplay selectedTournamentId={tournament._id} />\r\n                        </div>\r\n                    ) : tournament.TournamentType === 'Knockout' ? (\r\n                        <div className={`${styles.card}`}>\r\n                            <RoundsDisplay selectedTournamentId={tournament._id} />\r\n                        </div>\r\n                    ) : tournament.TournamentType === 'Championship' ?(\r\n                            <div>\r\n                                <ChampionshipGroups selectedTournamentId={tournament._id}/>\r\n                            </div>\r\n                        ):\r\n\r\n                        (\r\n                            <div>\r\n\r\n                            </div>\r\n                        )}\r\n                </div>\r\n\r\n            </div>\r\n        </Spring>\r\n    );\r\n};\r\n\r\nexport default  TournamentChoice;\r\n\r\n"],"names":["team1","color","countryName","countryCode","score","team2","group","id","nanoid","active","_ref","variant","changed","_jsx","children","_jsxs","style","marginLeft","className","concat","match","setActive","useState","referee","setReferee","stadium","setStadium","navigate","useNavigate","useEffect","async","response","fetch","ok","Error","data","json","console","log","error","fetchStadium","fetchreferee","onClick","state","matchId","GoToMatchDetails","_id","FaMapMarkerAlt","marginRight","ScoreMatch","startHour","startMinutes","index","selectedDay","width","useWindowSize","theme","useThemeProvider","defaultLogos","defaultLogo1","defaultLogo2","defaultLogo3","defaultLogo4","getRandomDefaultLogo","prevLogo","randomIndex","Math","floor","random","length","team1Name","setTeam1Name","team2Name","setTeam2Name","team2Logo","setteam2Logo","team1Logo","setteam1Logo","team1Response","team1Data","name","logo","team2Response","team2Data","fetchTeamDetails","startDay","Spring","styles","container","type","paddingBottom","src","alt","Score","scoreTeam1","scoreTeam2","minWidth","Lineups","wrapperClass","field","isCompact","RefNStaduim","StyledRow","styled","div","withConfig","componentId","light","dark","props","direction","setName","team","wins","draws","loses","points","selectedTournamentId","standings","setStandings","setError","teamData","setTeamData","tournament","setTournament","tournamentData","fetchTournamentDetails","sortedStandings","sort","a","b","teamIds","map","standing","teamPromises","fetchTeamData","teamResults","Promise","all","teamDataObject","forEach","teamId","fetchStandings","title","item","TeamScoreRow","rounds","setRounds","roundsDb","setRoundsDB","fetchFirstRoundMatches","Array","isArray","transformedRoundsData","roundSeeds","round","fixtures","fixture","fetchMatchDetails","teams","seeds","transformDataToRounds","Bracket","StandingsId","SID","setTID","ref","height","useMeasure","trackRef","useRef","setGroup","GROUPS_OPTIONS","value","tID","groups_matches","filter","toLowerCase","Tournament","settournament","Standings","current","scrollTo","top","behavior","standingIds","StandingsByGroup","fetchStandingsIds","groupNames","setGroupNames","generatedGroupOptions","_","label","String","fromCharCode","generateGroupNames","_Fragment","SelectionList","options","innerRef","ScrollContainer","padding","GroupStandingsDisplay","charCodeAt","Navigator","swiper","setSwiper","slideToLoop","parseInt","changeLanguageDirection","update","navigator","Swiper","slidesPerView","spaceBetween","centeredSlides","onSwiper","loop","initialSlide","getMonthDays","day","SwiperSlide","slide","classNames","navigator_item","date","weekday","_ref2","setFixtures","today","dayjs","setSelectedDay","matchResult","setMatchResult","tournamentType","settournamentType","groupMatches","setGroupMatches","TournamentType","toast","fetchMatchesForLeague","fetchMatchResult","axios","get","fixtureIds","fetchMatchesForKnockout","fetchMatchesForChampionship","gamesByGroup","team1Goals","team2Goals","format","NavLink","to","grid","scroll","scroll_track","card","marginBottom","GameCard","StandingsDisplay","RoundsDisplay","ChampionshipGroups"],"sourceRoot":""}