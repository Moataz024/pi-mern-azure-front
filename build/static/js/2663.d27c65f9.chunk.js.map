{"version":3,"file":"static/js/2663.d27c65f9.chunk.js","mappings":"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","sources":["hooks/useTeamLogo.js","widgets/Coach/Player/Team Creation.jsx","widgets/Team/Player_List_With_No_Team/styles.js","widgets/Team/Player_List_With_No_Team/PlayerListWithNoTeam.jsx","widgets/Coach/Player/Profile.jsx","widgets/Team/Coach_List_With_No_Team/CoachListWithNoTeam.jsx","widgets/Team/Coach_List_With_No_Team/styles.js","widgets/Coach/Player/AddPlayer.jsx","pages/Coach/AddPlayer.jsx","widgets/PlayerProfileCard copy/styles.module.scss","widgets/PlayerProfileCard copy/index.jsx","webpack://liga-soccer/./src/widgets/Coach/styles.module.scss?579e"],"sourcesContent":["// components\r\nimport {toast} from 'react-toastify';\r\n\r\n// hooks\r\nimport {useState} from 'react';\r\n\r\nconst useTeamLogo = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData] = useState(new FormData());\r\n    const [message,setMessage] = useState('')\r\n    // define a function that handles the file upload event\r\n    const handleFile = (e) => {\r\n        // get the file object from the event\r\n        const file = e.target.files[0];\r\n\r\n        // check if a file was selected; if not, exit the function\r\n        if (!file) {\r\n            toast.error(\"Please select a file\")\r\n            return;\r\n        }\r\n        // check if the file type is supported (JPEG, PNG, or WEBP); if not, show an error message and exit the function\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/webp') {\r\n            toast.error(\"File type not supported\")\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        // create a new FileReader object\r\n        const reader = new FileReader();\r\n        // read the file as a data URL\r\n        reader.readAsDataURL(file);\r\n        // set up an error handler for the reader\r\n        reader.onerror = () => {\r\n            toast.error('Something went wrong. Please try again.');\r\n        }\r\n        // set up a loading indicator while the file is being loaded\r\n        reader.onloadstart = () => setLoading(true);\r\n        // when the file is finished loading, set the file state and turn off the loading indicator\r\n        formData.append('team', file);\r\n        console.log(formData.get('team')); // Verify that the file is present in the form data\r\n        reader.onloadend = async () => {\r\n            try {\r\n                setFile(reader.result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setLoading(false)\r\n                console.error('Error uploading logo:', error.message);\r\n            }\r\n        };\r\n    }\r\n\r\n    return {file, setFile, handleFile,formData, loading,message};\r\n}\r\n\r\nexport default useTeamLogo\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport Submenu from '@ui/Submenu';\r\nimport useSubmenu from '@hooks/useSubmenu';\r\nimport classNames from 'classnames';\r\nimport LazyImage from '@components/LazyImage';\r\nimport user from '@assets/user.png';\r\nimport styles from '../styles.module.scss';\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useTeamLogo from \"@hooks/useTeamLogo\";\r\nconst Team = () => {\r\n  const {USER} = useAuthContext();\r\n  const { anchorEl, open, handleClick, handleClose } = useSubmenu();\r\n  const { setFile ,file, handleFile ,formData} = useTeamLogo();\r\n  const inputRef = useRef(null);\r\n  const [teams, setTeams] = useState([]);\r\n  const [userId, setUserId] = useState([]);\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  \r\n\r\n  const checkTeam_manager = async (coachId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Team/checkTeam_manager/${coachId}`);\r\n      const data = await response.json();\r\n      return data.exists;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  async function updateTeam(coachId) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Team/updateXTeam/${coachId}`, {\r\n        method: 'PUT',\r\n      });\r\n      return true; \r\n    } catch (error) {\r\n      console.error(error);\r\n      return false; \r\n    }\r\n  }\r\n\r\n\r\n\r\n  const addNewTeam = async (newTeamData) => {\r\n    try {\r\n      const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n      const userId = userResponse.data._id;\r\n      const response = await fetch(`http://localhost:3000/Team/add/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(newTeamData)\r\n      });\r\n      const data = await response.json();\r\n      setTeams([...teams, data]); // Add the new team to the existing teams\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const triggerInput = () => inputRef.current?.click();\r\n\r\n  const submenuActions = [\r\n    {\r\n      label: 'Upload',\r\n      icon: 'upload',\r\n      onClick: triggerInput,\r\n    },\r\n    {\r\n      label: 'Remove',\r\n      icon: 'trash',\r\n      onClick: () => setFile(null)\r\n    }\r\n  ];\r\n\r\n  const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    const newTeamData = {\r\n      name: data.fullname,\r\n      logo: file, // Assuming file is the selected file object\r\n    };\r\n  \r\n    const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n    const userId = userResponse.data._id;\r\n  \r\n    try {\r\n      //const formData = new FormData();\r\n      formData.append('name', newTeamData.name);\r\n      //formData.append('team', file);\r\n      \r\n      const response = await fetch(`http://localhost:3000/Team/add/${userId}`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const teamData = await response.json();\r\n        setTeams([...teams, teamData]);\r\n        reset();\r\n        toast.success('Your team has been successfully saved!');\r\n        navigate.go(0);\r\n      } else {\r\n        toast.error('Failed to save team. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n      const userId = userResponse.data._id;\r\n      setUserId(userId)\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <form className={`d-flex flex-column align-items-center`} onSubmit={handleSubmit(onSubmit)}>\r\n      <br />\r\n      <div className={styles.wrapper} title=\"Click to upload a Team Logo\">\r\n        <input type=\"file\" name=\"team\" onChange={handleFile} ref={inputRef} hidden />\r\n        <div>\r\n          {file ? (\r\n            <LazyImage className={styles.img} src={file} alt=\"Team Logo\" />\r\n          ) : (\r\n            <LazyImage className={styles.img} src={user} alt=\"Default User\" />\r\n          )}\r\n        </div>\r\n        <button className={styles.button} onClick={handleClick} aria-label=\"Open menu\">\r\n          <i className=\"icon-camera\" />\r\n        </button>\r\n        <Submenu open={open} onClose={handleClose} anchorEl={anchorEl} actions={submenuActions} />\r\n      </div>\r\n      <br/>\r\n      <div>\r\n        <input className={classNames('field', { 'field--error': errors.fullname })}\r\n          type=\"text\"\r\n          placeholder=\"Team Name\"\r\n          {...register('fullname', { required: true })} />\r\n        {errors.fullname && <span className=\"error-message\">Team name is required</span>}\r\n      </div>\r\n      <div className={styles.footer}>\r\n        <button className=\"btn\" type=\"submit\">Save Team</button>\r\n        <button className=\"btn btn--outlined\" type=\"button\" onClick={reset}>Cancel</button>\r\n        {/* <Link to={`/add-new-player/`}>    // f button clicked save team or cancel it will redirect to add new player so it can do the check of the \r\n                                                  team manager if he has a team or not   \r\n                                            <Button style={{ backgroundColor: 'red' }} ><b style={{ color: 'white' }}>View Profile</b></Button>\r\n                                        </Link> */}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Team;\r\n","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\nconst StyledEventsCalendar = styled.div`\r\n  .rbc-month-view,\r\n  .rbc-time-view,\r\n  .rbc-time-header {\r\n    border: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-off-range-bg,\r\n  .rbc-today {\r\n    background: transparent;\r\n  }\r\n\r\n  .rbc-header {\r\n    border-bottom: 1px solid var(--border);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: var(--heading-font);\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    color: var(--header);\r\n    font-weight: 600;\r\n\r\n    button {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .rbc-day-bg + .rbc-day-bg,\r\n  .rbc-header + .rbc-header,\r\n  .rbc-time-header-content,\r\n  .rbc-time-content > * + * > * {\r\n    border-left: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-time-content,\r\n  .rbc-time-content:first-of-type {\r\n    border-top: none;\r\n  }\r\n\r\n  .rbc-time-header.rbc-overflowing {\r\n    border-right: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-month-row + .rbc-month-row {\r\n    border-top: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-day-slot .rbc-time-slot {\r\n    border-top: 1px dashed var(--border);\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    border-bottom: 1px dashed var(--border);\r\n    position: relative;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .rbc-current-time-indicator {\r\n    background: ${theme('theme', {\r\n      light: 'var(--azure)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n  }\r\n\r\n  .rbc-time-gutter {\r\n    width: 68px;\r\n\r\n    .rbc-timeslot-group {\r\n      .rbc-time-slot {\r\n        &:first-of-type {\r\n          flex: 1;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            border-top: 1px dashed var(--border);\r\n            transform: translateY(-50%);\r\n            z-index: 1;\r\n          }\r\n\r\n          .rbc-label {\r\n            position: relative;\r\n            z-index: 2;\r\n            font-family: var(--heading-font);\r\n            font-size: 9px;\r\n            letter-spacing: 0.45px;\r\n            font-weight: 600;\r\n            color: var(--btn-text);\r\n            height: 20px;\r\n            width: 40px;\r\n            background: var(--widget);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            line-height: 11px;\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.day {\r\n    .rbc-day-slot .rbc-timeslot-group:first-of-type .rbc-time-slot:first-of-type {\r\n      border-top: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &.week {\r\n    .rbc-allday-cell,\r\n    .rbc-current-time-indicator{\r\n      display: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &.month .rbc-month-view {\r\n    min-height: 500px;\r\n\r\n    .rbc-date-cell {\r\n      padding: 4px 0 0 0;\r\n      text-align: center;\r\n\r\n      &.rbc-off-range {\r\n        opacity: .5;\r\n      }\r\n\r\n      &.rbc-now .rbc-button-link {\r\n        font-weight: 600;\r\n        color: ${theme('theme', {\r\n            light: 'var(--blue)',\r\n            dark: 'var(--accent)'\r\n        })};\r\n      }\r\n\r\n      .rbc-button-link {\r\n        font-size: 0.75rem;\r\n        font-family: var(--heading-font);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    // tablet portrait\r\n    @media screen and (min-width: 768px) {\r\n      min-height: 800px;\r\n\r\n      .rbc-date-cell {\r\n        text-align: right;\r\n        padding: 10px;\r\n      }\r\n    }\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 1200px;\r\n    }\r\n  }\r\n\r\n  .rbc-time-view {\r\n    flex: unset;\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    max-height: 40px;\r\n\r\n    .rbc-time-slot {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  .rbc-events-container {\r\n    margin: 0 !important;\r\n\r\n    .rbc-event {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n      border-radius: 0;\r\n\r\n      &-label {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .rbc-event {\r\n    padding: 0;\r\n    background: transparent !important;\r\n    border-radius: 0;\r\n    outline: none !important;\r\n  }\r\n\r\n  .rbc-show-more {\r\n    color: ${theme('theme', {\r\n      light: 'var(--blue)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n    background: transparent;\r\n    margin: 10px auto 0;\r\n  }\r\n\r\n  .rbc-row-segment {\r\n    min-height: 20px;\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  text-align: center;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    \r\n    &[dir=\"ltr\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-left: 68px;\r\n      }\r\n    }\r\n\r\n    &[dir=\"rtl\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-right: 68px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  width: 100%;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 300px;\r\n  }\r\n`;\r\n\r\n\r\nexport {StyledEventsCalendar, Navigation, Header}","// styles\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\n\r\n// styled components\r\nimport {StyledEventsCalendar, Header} from './styles';\r\nimport styles from './styles.module.scss';\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {toast} from 'react-toastify';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\n\r\nconst PlayerListWithNoTeam = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [playerData, setPlayerData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const playersPerPage = 3;\r\n    const {USER} = useAuthContext();\r\n\r\n    const addNewPlayer = async ( newPlayerData) => {\r\n        //console.log(newPlayerData+\"-----------\")\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Team/addPlayer/${userId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(newPlayerData)\r\n                \r\n            });console.log(JSON.stringify(newPlayerData))\r\n            const data = await response.json();\r\n            console.log(\"New player added:\", data);\r\n            toast.success('New player added successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error('Failed to add new player');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchPlayerData() {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/User/getallPlayersWithNoTeam`);\r\n                const data = await response.json();\r\n                setPlayerData(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        fetchPlayerData();\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        console.log(\"Search term:\", searchTerm);\r\n    };\r\n    const AddPlayerToTeam = (email)=>{\r\n        console.log(email)\r\n        addNewPlayer(email) ;\r\n    }\r\n\r\n    const indexOfLastPlayer = currentPage * playersPerPage;\r\n    const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n    //const currentPlayers = playerData.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n    //const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    const filteredPlayers = playerData.filter(player =>\r\n        player.fullname.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    \r\n      const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n    \r\n      const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n    \r\n      return (\r\n        <div className=\"card h-fit card-padded\">\r\n          {/* Header */}\r\n          <div style={{ display: 'flex', alignItems: 'center', width: '30%' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"Search...\"\r\n              style={{ flex: '1', fontSize: '15px', padding: '5px',  alignItems: 'center' }}//border: '1px solid #ddd',\r\n            />\r\n          </div>\r\n    \r\n          {/* Player Table */}\r\n          <div style={{ width: '100%', overflowX: 'auto', padding: '10px' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse', tableLayout: 'fixed' }}>\r\n              <colgroup>\r\n                <col style={{ width: '25%' }} />\r\n                <col style={{ width: '25%' }} />\r\n                <col style={{ width: '25%' }} />\r\n                <col style={{ width: '25%' }} />\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Name</th>\r\n                  <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Age</th>\r\n                  <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Position</th>\r\n                  <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentPlayers.map((player, index) => (\r\n                  <tr key={index}>\r\n                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{player.fullname}</td>\r\n                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>{player.age}</td>\r\n                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>{player.position}</td>\r\n                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>\r\n                      <Button style={{ backgroundColor: '#24292B', textTransform: 'none' }} onClick={() => AddPlayerToTeam({ email: player.email })}>\r\n                        <b style={{ color: 'white', fontSize: \"12px\" }}>Add Player</b>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n    \r\n          {/* Pagination */}\r\n          <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n            <Button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1} style={{ color: 'white' }}>Previous</Button>\r\n            <Button onClick={() => paginate(currentPage + 1)} disabled={indexOfLastPlayer >= filteredPlayers.length} style={{ color: 'white' }}>Next</Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n      \r\n\r\n\r\n\r\nexport default PlayerListWithNoTeam","// styling\r\nimport styles from '../styles.module.scss';\r\n\r\n// components\r\nimport CustomSelect from '@ui/CustomSelect';\r\nimport {PatternFormat} from 'react-number-format';\r\nimport {toast} from 'react-toastify';\r\nimport LazyImage from '@components/LazyImage';\r\nimport Submenu from '@ui/Submenu';\r\n\r\n// hooks\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport {useState} from 'react';\r\nimport {useRef} from 'react';\r\nimport useFileReader from '@hooks/useFileReader';\r\nimport useSubmenu from '@hooks/useSubmenu';\r\n\r\n// utils\r\nimport classNames from 'classnames';\r\nimport countryList from 'react-select-country-list';\r\nimport {City} from 'country-state-city';\r\n\r\n// assets\r\nimport PlayerListWithNoTeam from '@widgets/Team/Player_List_With_No_Team/PlayerListWithNoTeam'\r\n\r\n\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n    // State and refs\r\n    const { register, handleSubmit, formState: { errors }, reset ,control} = useForm();\r\n    const inputRef = useRef(null);\r\n    const {USER} = useAuthContext();\r\n    const [preferredFoot, setPreferredFoot] = useState('');\r\n    const value = sessionStorage.getItem('playerName');\r\n    const Agevalue = sessionStorage.getItem('playerAge');\r\n\r\n\r\n    // Function to add a new player\r\n    const addNewPlayer = async (coachId, newPlayerData) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Team/addPlayer/${coachId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(newPlayerData)\r\n                \r\n            });console.log(JSON.stringify(newPlayerData))\r\n            /* if (!response.ok) {\r\n                throw new Error('Failed to add new player');\r\n            } */\r\n            const data = await response.json();\r\n            console.log(\"New player added:\", data);\r\n            // Add any additional logic here after adding the player\r\n            toast.success('New player added successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error('Failed to add new player');\r\n        }\r\n    };\r\n\r\n    const updatePlayer = async (coachId, newPlayerData) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/User/update/${coachId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(newPlayerData)\r\n                \r\n            });console.log(JSON.stringify(newPlayerData))\r\n            const data = await response.json();\r\n            console.log(newPlayerData?.fullname +\"has been updated to a player:\", data);\r\n            // Add any additional logic here after adding the player\r\n            toast.success(newPlayerData?.fullname +\" has been updated to a player successfully!\");\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error('Failed to update player');\r\n        }\r\n    };\r\n    \r\n    const generateRandomPassword = () => {\r\n        const length = 10; // Adjust the length of the password as needed\r\n        const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_'; // !@#$%^&*()_+{}|:<>?'; // Characters to include in the password\r\n        let password = '';\r\n        for (let i = 0; i < length; i++) {\r\n            const randomIndex = Math.floor(Math.random() * charset.length);\r\n            password += charset[randomIndex];\r\n        }\r\n        return password;\r\n    };\r\n\r\n    async function getUser(email) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/User/getbyemail?email=${email}`);\r\n          const userdata = response.data._id;\r\n          return userdata ;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    \r\n\r\n    // Form submission handler\r\n    const onSubmit = async (data) => {\r\n        let newPlayerData = {};\r\n        \r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        console.log(data+\".......................000000\")\r\n        const userData = await getUser(data.email);\r\n        if (userData) {\r\n            /* const userConfirmation =  prompt(\"Email exists. Do you want to update the user data? \\nPlease enter 'yes' or 'no':\");\r\n\r\n                if (userConfirmation && userConfirmation.toLowerCase() === \"yes\") {\r\n                    newPlayerData = {\r\n                    email: data.email,\r\n                    position: data.position?.value,\r\n                    jersyNumber: data.jersyNumber,\r\n                    height: data.height,\r\n                    country: {\r\n                        value: data.country && data.country.value ? data.country.value : data.nationality,\r\n                        label: data.country && data.country.label ? data.country.label : data.nationality\r\n                    },\r\n                    preferedFoot: preferredFoot,\r\n                    };\r\n                    await addNewPlayer(userId, newPlayerData);\r\n                } else {\r\n                    console.log(\"Update canceled. Player data not updated.\");\r\n                } */\r\n                toast.error('Email already exists. Please use a different email address.');\r\n          } else {\r\n            newPlayerData = {\r\n              fullname: data.fullname,\r\n              email: data.email,\r\n              phone: data.phone,\r\n              age: data.age,\r\n              position: data.position?.value,\r\n              jersyNumber: data.jersyNumber,\r\n              height: data.height,\r\n              country: {\r\n                value: data.country && data.country.value ? data.country.value : data.nationality,\r\n                label: data.country && data.country.label ? data.country.label : data.nationality\r\n              },\r\n              preferedFoot: preferredFoot,\r\n              password: generateRandomPassword()\r\n            };\r\n            await addNewPlayer(userId, newPlayerData);\r\n            reset(); // Clear the form fields\r\n          }\r\n        \r\n\r\n    };\r\n\r\n\r\n    const [showBasicForm, setShowBasicForm] = useState(true); // State to toggle between forms\r\n\r\n\r\n    const handleToggleForm = () => {\r\n        setShowBasicForm(!showBasicForm); // Toggle the form\r\n    };\r\n\r\n    const getCountriesOptions = () => {\r\n        let countries = countryList().getData();\r\n        for (let i = 0; i < countries.length; i++) {\r\n            if (countries[i].value === 'RU') {\r\n                countries[i].label = 'Russia [terrorist state]';\r\n            }\r\n        }\r\n        return countries;\r\n    }\r\n\r\n   /*  const handleCountryChange = (country) => {\r\n        setSelectedCountry(country);\r\n        setSelectedCity(null);\r\n        let options = [];\r\n        const rawData = City.getCitiesOfCountry(country.value);\r\n        rawData.map(item => options.push({ value: item.name, label: item.name }));\r\n        setCities(options);\r\n    } */\r\n    sessionStorage.removeItem('playerName');\r\n    sessionStorage.removeItem('playerAge');\r\n\r\n    return (\r\n        <form className=\"d-flex flex-column g-100\" onSubmit={handleSubmit(onSubmit)}>\r\n            {showBasicForm ? (\r\n                <>\r\n                    <div className={styles.toggleSwitch}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"toggleSwitch\"\r\n                            className={styles.checkbox}\r\n                            checked={showBasicForm}\r\n                            onChange={handleToggleForm}\r\n                        />\r\n                        <label htmlFor=\"toggleSwitch\" className={styles.label}>\r\n                            <div className={styles.toggle}></div>\r\n                        </label>\r\n                        <span className={styles.toggleText}>\r\n                            {showBasicForm ? 'Add new player!' : 'Add excesting player!'}\r\n                        </span>\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <input className={classNames('field', {'field--error': errors.fullname})}\r\n                            value={value}\r\n                            type=\"text\"\r\n                            placeholder={errors.fullname ? 'Name is required' : 'Full Name'}\r\n                            {...register('fullname', {required: true})} />\r\n                        <input className={classNames('field', {'field--error': errors.phone})}\r\n                            type=\"text\"\r\n                            placeholder={errors.phone ? 'Phone Number is required' : \"Phone\"}\r\n                            {...register('phone', {required: true})} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <input className={classNames('field', {'field--error': errors.email})}\r\n                            type=\"text\"\r\n                            placeholder={errors.email ? 'Email is required' : \"Email\"}\r\n                            {...register('email', {required: true, pattern: /^\\S+@\\S+$/i})} />\r\n                        <input className={classNames('field', {'field--error': errors.age})}\r\n                            value={Agevalue}\r\n                            type=\"number\"\r\n                            placeholder={errors.age ? 'Age is required' : \"Age\"}\r\n                            {...register('age', {required: true})} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                            <Controller\r\n                                name=\"position\"\r\n                                control={control}\r\n                                render={({ field }) => (\r\n                                <CustomSelect\r\n                                    className={classNames('field', { 'field--error': errors.position })}\r\n                                    options={[\r\n                                    { value: 'GK', label: 'Goalkeeper (GK)' },\r\n                                    { value: 'CB', label: 'Centre-back (CB)' },\r\n                                    { value: 'RB', label: 'Right-back (RB)' },\r\n                                    { value: 'LB', label: 'Left-back (LB)' },\r\n                                    { value: 'RWB', label: 'Right wing-back (RWB)' },\r\n                                    { value: 'LWB', label: 'Left wing-back (LWB)' },\r\n                                    { value: 'CM', label: 'Central midfielder (CM)' },\r\n                                    { value: 'CDM', label: 'Defensive midfielder (CDM)' },\r\n                                    { value: 'CAM', label: 'Attacking midfielder (CAM)' },\r\n                                    { value: 'RM', label: 'Right midfielder (RM)' },\r\n                                    { value: 'LM', label: 'Left midfielder (LM)' },\r\n                                    { value: 'ST', label: 'Striker (ST)' },\r\n                                    { value: 'CF', label: 'Centre forward (CF)' },\r\n                                    { value: 'RF', label: 'Right forward (RF)' },\r\n                                    { value: 'LF', label: 'Left forward (LF)' },\r\n                                    { value: 'RW', label: 'Right winger (RW)' },\r\n                                    { value: 'LW', label: 'Left winger (LW)' },\r\n                                    ]}\r\n                                    value={field.value}\r\n                                    onChange={(value) => {\r\n                                    field.onChange(value);\r\n                                    /* handlePositionChange(value); */\r\n                                    }}\r\n                                    placeholder={errors.position ? 'Position is required' : \"Select Position\"}\r\n                                    isSearchable={false}\r\n                                    variant=\"basic\"\r\n                                    innerRef={field.ref}\r\n                                />\r\n                                )}\r\n                            />\r\n                        <input className={classNames('field', {'field--error': errors.jersyNumber})}\r\n                            type=\"number\"\r\n                            placeholder={errors.jersyNumber ? 'Jersy number is required' : \"Jersey Number\"}\r\n                            min=\"0\"\r\n                            max=\"99\"\r\n                            {...register('jersyNumber',{required: true})} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                        <Controller\r\n                            name=\"country\"\r\n                            control={control}\r\n                            className={classNames('field', {'field--error': errors.nationality})}\r\n                            render={({ field }) => (\r\n                                <CustomSelect\r\n                                    options={getCountriesOptions()}\r\n                                    value={field.value}\r\n                                    onChange={(value) => {\r\n                                        field.onChange(value);\r\n                                        /* handleCountryChange(value); */\r\n                                    }}\r\n                                    placeholder={errors.nationality ? 'Nationality is required' : \"Nationality\"}\r\n                                    isSearchable={true}\r\n                                    variant=\"basic\"\r\n                                    innerRef={field.ref}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <input className={classNames('field', {'field--error': errors.height})}\r\n                            type=\"text\"\r\n                            placeholder={errors.height ? 'Height is required #cm' : \"Height\"}\r\n                            {...register('height', { required: true, pattern: /^\\d{2,3}\\s?cm$/ })} />\r\n                    </div>\r\n                    <div className={styles.row}>\r\n                    <div>\r\n                        <label>Preferred Foot:  </label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            id=\"left\"\r\n                            name=\"preferredFoot\"\r\n                            value=\"left\"\r\n                            /* {...register('preferredFoot', { required: true })} */\r\n                            checked={preferredFoot === 'left'}\r\n                            onChange={() => setPreferredFoot('L')}\r\n                        />\r\n                        <label >L</label>\r\n\r\n                        <input\r\n                            type=\"radio\"\r\n                            id=\"right\"\r\n                            name=\"preferredFoot\"\r\n                            value=\"right\"\r\n                            /* {...register('preferredFoot', { required: true })} */\r\n                            checked={preferredFoot === 'right'}\r\n                            onChange={() => setPreferredFoot('R')}\r\n                        />\r\n                        <label >R</label>\r\n                    </div>\r\n\r\n                    </div>\r\n                    <div className={styles.footer}>\r\n                        <button className=\"btn\" type=\"submit\">Save Player</button>\r\n                        <button className=\"btn btn--outlined\" type=\"reset\" onClick={reset}>Cancel</button>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className={styles.toggleSwitch}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"toggleSwitch\"\r\n                            className={styles.checkbox}\r\n                            checked={showBasicForm}\r\n                            onChange={handleToggleForm}\r\n                        />\r\n                        <label htmlFor=\"toggleSwitch\" className={styles.label}>\r\n                            <div className={styles.toggle}></div>\r\n                        </label>\r\n                        <span className={styles.toggleText}>\r\n                            {showBasicForm ? 'Add new player!' : 'Add excesting player!'}\r\n                        </span>\r\n                    </div>\r\n                    {/* <div className={styles.row}>\r\n                        <input className={classNames('field', {'field--error': errors.email})}\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            {...register('email', {required: true, pattern: /^\\S+@\\S+$/i})} />\r\n                    </div> */}\r\n\r\n                    <PlayerListWithNoTeam/>\r\n                    {/* <div className={styles.footer}>\r\n                        <button className=\"btn\" type=\"submit\">Send Request</button>\r\n                        <button className=\"btn btn--outlined\" type=\"reset\" onClick={reset}>Cancel</button>\r\n                    </div> */}\r\n                </>\r\n            )}\r\n            \r\n        </form>\r\n    \r\n    )\r\n}\r\n\r\nexport default Profile","// styles\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\n\r\n// styled components\r\nimport {StyledEventsCalendar, Header} from './styles';\r\nimport styles from './styles.module.scss';\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {toast} from 'react-toastify';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\n\r\nconst CoachListWithNoTeam = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [playerData, setPlayerData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const playersPerPage = 4;\r\n    const {USER} = useAuthContext();\r\n\r\n    const addNewPlayer = async ( newPlayerData) => {\r\n        //console.log(newPlayerData+\"-----------\")\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Team/addCoachToTeam/${userId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(newPlayerData)\r\n                \r\n            });console.log(JSON.stringify(newPlayerData))\r\n            const data = await response.json();\r\n            console.log(\"New player added:\", data);\r\n            toast.success('New player added successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error('Failed to add new player');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchPlayerData() {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/User/getallCoachesWithNoTeam`);\r\n                const data = await response.json();\r\n                setPlayerData(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        fetchPlayerData();\r\n    }, []);\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        const filteredPlayers = playerData.filter(player => player.fullname.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        setPlayerData(filteredPlayers);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n        handleSearch(e.target.value);\r\n    };\r\n    \r\n    const AddPlayerToTeam = (email)=>{\r\n        console.log(email)\r\n        addNewPlayer(email) ;\r\n    }\r\n\r\n    const indexOfLastPlayer = currentPage * playersPerPage;\r\n    const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n    const filteredPlayers = playerData.filter(player =>\r\n        player.fullname.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n\r\n    const currentPlayers = filteredPlayers.slice(indexOfFirstPlayer, indexOfLastPlayer);\r\n\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card h-fit card-padded\" >\r\n            {/* Header */}\r\n            <div style={{ display: 'flex', alignItems: 'center', width: '30%' }}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    placeholder=\"Search...\"\r\n                    style={{ flex: '1', fontSize: '15px', padding: '5px',  alignItems: 'center' }}\r\n                />\r\n            </div>\r\n\r\n            {/* Player Table */}\r\n            <div style={{ width: '100%', overflowX: 'auto', padding: '10px' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse', tableLayout: 'fixed' }}>\r\n                <colgroup>\r\n                    <col style={{ width: '25%' }} />\r\n                    <col style={{ width: '25%' }} />\r\n                    <col style={{ width: '25%' }} />\r\n                    <col style={{ width: '25%' }} />\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Name</th>\r\n                        <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Age</th>\r\n                        <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Value</th>\r\n                        <th style={{ padding: '10px', textAlign: 'center', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPlayers.map((player, index) => (\r\n                        <tr key={index}>\r\n                            <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{player.fullname}</td>\r\n                            <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>{player.age}</td>\r\n                            <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>{player.value}</td>\r\n                            <td style={{ padding: '10px', borderBottom: '1px solid #ddd', textAlign: 'center' }}>\r\n                                <Button style={{ backgroundColor: '#24292B', textTransform: 'none' }} onClick={() => AddPlayerToTeam({ email: player.email })} >\r\n                                    <b style={{ color: 'white', fontSize: \"12px\" }}>Add Coach</b>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n                <Button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1} style={{  color: 'white' }}>Previous</Button>\r\n                <Button onClick={() => paginate(currentPage + 1)} disabled={indexOfLastPlayer >= playerData.length} style={{  color: 'white' }} >Next</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CoachListWithNoTeam","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\nconst StyledEventsCalendar = styled.div`\r\n  .rbc-month-view,\r\n  .rbc-time-view,\r\n  .rbc-time-header {\r\n    border: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-off-range-bg,\r\n  .rbc-today {\r\n    background: transparent;\r\n  }\r\n\r\n  .rbc-header {\r\n    border-bottom: 1px solid var(--border);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: var(--heading-font);\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    color: var(--header);\r\n    font-weight: 600;\r\n\r\n    button {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .rbc-day-bg + .rbc-day-bg,\r\n  .rbc-header + .rbc-header,\r\n  .rbc-time-header-content,\r\n  .rbc-time-content > * + * > * {\r\n    border-left: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-time-content,\r\n  .rbc-time-content:first-of-type {\r\n    border-top: none;\r\n  }\r\n\r\n  .rbc-time-header.rbc-overflowing {\r\n    border-right: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-month-row + .rbc-month-row {\r\n    border-top: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-day-slot .rbc-time-slot {\r\n    border-top: 1px dashed var(--border);\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    border-bottom: 1px dashed var(--border);\r\n    position: relative;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .rbc-current-time-indicator {\r\n    background: ${theme('theme', {\r\n      light: 'var(--azure)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n  }\r\n\r\n  .rbc-time-gutter {\r\n    width: 68px;\r\n\r\n    .rbc-timeslot-group {\r\n      .rbc-time-slot {\r\n        &:first-of-type {\r\n          flex: 1;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            border-top: 1px dashed var(--border);\r\n            transform: translateY(-50%);\r\n            z-index: 1;\r\n          }\r\n\r\n          .rbc-label {\r\n            position: relative;\r\n            z-index: 2;\r\n            font-family: var(--heading-font);\r\n            font-size: 9px;\r\n            letter-spacing: 0.45px;\r\n            font-weight: 600;\r\n            color: var(--btn-text);\r\n            height: 20px;\r\n            width: 40px;\r\n            background: var(--widget);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            line-height: 11px;\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.day {\r\n    .rbc-day-slot .rbc-timeslot-group:first-of-type .rbc-time-slot:first-of-type {\r\n      border-top: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &.week {\r\n    .rbc-allday-cell,\r\n    .rbc-current-time-indicator{\r\n      display: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &.month .rbc-month-view {\r\n    min-height: 500px;\r\n\r\n    .rbc-date-cell {\r\n      padding: 4px 0 0 0;\r\n      text-align: center;\r\n\r\n      &.rbc-off-range {\r\n        opacity: .5;\r\n      }\r\n\r\n      &.rbc-now .rbc-button-link {\r\n        font-weight: 600;\r\n        color: ${theme('theme', {\r\n            light: 'var(--blue)',\r\n            dark: 'var(--accent)'\r\n        })};\r\n      }\r\n\r\n      .rbc-button-link {\r\n        font-size: 0.75rem;\r\n        font-family: var(--heading-font);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    // tablet portrait\r\n    @media screen and (min-width: 768px) {\r\n      min-height: 800px;\r\n\r\n      .rbc-date-cell {\r\n        text-align: right;\r\n        padding: 10px;\r\n      }\r\n    }\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 1200px;\r\n    }\r\n  }\r\n\r\n  .rbc-time-view {\r\n    flex: unset;\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    max-height: 40px;\r\n\r\n    .rbc-time-slot {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  .rbc-events-container {\r\n    margin: 0 !important;\r\n\r\n    .rbc-event {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n      border-radius: 0;\r\n\r\n      &-label {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .rbc-event {\r\n    padding: 0;\r\n    background: transparent !important;\r\n    border-radius: 0;\r\n    outline: none !important;\r\n  }\r\n\r\n  .rbc-show-more {\r\n    color: ${theme('theme', {\r\n      light: 'var(--blue)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n    background: transparent;\r\n    margin: 10px auto 0;\r\n  }\r\n\r\n  .rbc-row-segment {\r\n    min-height: 20px;\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  text-align: center;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    \r\n    &[dir=\"ltr\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-left: 68px;\r\n      }\r\n    }\r\n\r\n    &[dir=\"rtl\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-right: 68px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  width: 100%;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 300px;\r\n  }\r\n`;\r\n\r\n\r\nexport {StyledEventsCalendar, Navigation, Header}","// styling\r\nimport styles from '../styles.module.scss';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {TabsList} from '@mui/base/TabsList';\r\nimport {TabPanel} from '@mui/base/TabPanel';\r\nimport {Tabs} from '@mui/base/Tabs';\r\nimport TabButton from '@ui/TabButton';\r\nimport Team from '@widgets/Coach/Player/Team Creation';\r\nimport Profile from '@widgets/Coach/Player/Profile';\r\nimport Coach from '@widgets/Team/Coach_List_With_No_Team/CoachListWithNoTeam';\r\nimport TeamProfile from '@widgets/PlayerProfileCard copy/index';\r\nimport Fade from '@mui/material/Fade';\r\nimport Search from '@layout/PageHeader/Search';\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n// hooks\r\nimport React, { useState, useEffect } from 'react';\r\nimport {useWindowSize} from 'react-use';\r\n\r\nconst checkTeam_manager = async (coachId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/Team/checkTeam_manager/${coachId}`);\r\n      const data = await response.json();\r\n      return data.exists;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  const AddPlayer = () => {\r\n    const {USER} = useAuthContext();\r\n    const [activeTab, setActiveTab] = useState('basic');\r\n    const [coachHasTeam, setCoachHasTeam] = useState(false);\r\n    const { width } = useWindowSize();\r\n    const value = sessionStorage.getItem('playerName');\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        const hasTeam = await checkTeam_manager(userId);\r\n        setCoachHasTeam(hasTeam);\r\n        console.log(hasTeam)\r\n      }\r\n      fetchData();\r\n    }, [value]);\r\n  \r\n    return (\r\n      <Spring className=\"card d-flex flex-column card-padded\">\r\n        <Tabs value={activeTab}>\r\n          <TabsList className={`${styles.tabs_list} tab-nav ${coachHasTeam ? 'col-2' : 'col'}`}>\r\n            {!coachHasTeam && (\r\n              <TabButton\r\n                title={width >= 375 ? 'Add Team' : 'Profile'}\r\n                onClick={() => setActiveTab('profile')}\r\n                active={activeTab === 'profile'}\r\n              />\r\n            )}\r\n            \r\n            {coachHasTeam && (\r\n              <>\r\n                <TabButton\r\n                  title={width >= 375 ? 'Add Players' : 'Basic'}\r\n                  onClick={() => setActiveTab('basic')}\r\n                  active={activeTab === 'basic'}\r\n                />\r\n                <TabButton\r\n                  title={width >= 375 ? \"Add Coach\": 'addCoach'}\r\n                  onClick={() => setActiveTab('addCoach')}\r\n                  active={activeTab === 'addCoach'}\r\n                />\r\n                \r\n              </>\r\n            )}\r\n          </TabsList>\r\n          {!coachHasTeam ? (\r\n            <>\r\n              <TabPanel value=\"profile\">\r\n                <Fade in={activeTab === 'profile'} timeout={400}>\r\n                  <div>\r\n                    <Team />\r\n                  </div>\r\n                </Fade>\r\n              </TabPanel>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <TabPanel value=\"profile\">\r\n                <Fade in={activeTab === 'profile'} timeout={400}>\r\n                  <div>\r\n                    <TeamProfile />\r\n                    <Link to={`/team-Profile/`}>\r\n                    <div className={styles.footer}>\r\n                      <button className=\"btn\" >Go to Team Profile</button>\r\n                    </div>\r\n                    </Link>\r\n                  </div>\r\n                </Fade>\r\n              </TabPanel>\r\n\r\n            </>\r\n          )}\r\n\r\n          <TabPanel value=\"basic\">\r\n            <Fade in={activeTab === 'basic'} timeout={400}>\r\n              <div>\r\n                <Profile />\r\n              </div>\r\n            </Fade>\r\n          </TabPanel>\r\n          <TabPanel value=\"addCoach\">\r\n            <Fade in={activeTab === 'addCoach'} timeout={400}>\r\n              <div>\r\n                <Coach />\r\n              </div>\r\n            </Fade>\r\n          </TabPanel>\r\n        </Tabs>\r\n      </Spring>\r\n    );\r\n    \r\n    };\r\n\r\n  \r\n  export default AddPlayer;","// components\r\nimport PageHeader from '@layout/PageHeader';\r\nimport AppGrid from '@layout/AppGrid';\r\n\r\nimport AddPlayerOverview from '@widgets/Coach/Player/AddPlayer';\r\n\r\n\r\nconst widgets = {\r\n    \r\n   // description: <ProfileDescription/>,\r\n    settings: <AddPlayerOverview/>,\r\n   \r\n}\r\n\r\nconst AddPlayer = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title=\"Add/Modify Team\" />\r\n            <AppGrid id=\"Test\" widgets={widgets}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPlayer","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__TD-TF\",\"media\":\"styles_media__b33Yo\",\"main_info\":\"styles_main_info__rOObp\"};","// styling\r\nimport styles from './styles.module.scss';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport CustomRating from '@ui/CustomRating';\r\nimport Like from '@ui/Like';\r\n\r\n// assets\r\nimport tshirt from '@assets/player_tshirt.webp';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport LazyImage from '@components/LazyImage';\r\n\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation   } from 'react-router-dom';\r\nconst TeamProfileCard = () => {\r\n    const [teamData, setTeamData] = useState([]);\r\n    const [userData, setUserData] = useState([]);\r\n    const [teamRating, setTeamRating] = useState(null); // State to store team rating\r\n    const {USER} = useAuthContext();\r\n    const { state } = useLocation();\r\nconst teamId = state ? state.teamId : null;\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        async function fetchTeamData() {\r\n            \r\n            try {\r\n                let teamDataResponse;\r\n                if (!teamId) {\r\n                    const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n                    const userId = userResponse.data._id;\r\n                    teamDataResponse = await fetch(`http://localhost:3000/Team/getTeambyTeamManger/${userId}`);\r\n                } else {\r\n                    teamDataResponse = await fetch(`http://localhost:3000/Team/getbyid/${teamId}`);\r\n                }\r\n    \r\n                const teamData = await teamDataResponse.json();\r\n                setTeamData(teamData);\r\n                fetchTeamRating(teamData._id);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        /* async function fetchUserData() {\r\n            try {\r\n                const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n                const userId = userResponse.data._id;\r\n                const response = await fetch(`http://localhost:3000/User/getbyid/${userId}`);\r\n                const data = await response.json();\r\n                setUserData(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        } */\r\n\r\n        // Function to fetch team rating\r\n        const fetchTeamRating = async (teamId) => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/Team/getTeamRating/${teamId}`);\r\n                const ratingData = await response.json();\r\n                //console.log(ratingData.rating+\"......\")\r\n                const rate =ratingData.rating\r\n                setTeamRating(rate); // Update team rating state\r\n                //console.log(teamRating+\",,,,,,,,,,,,,,,,,,,,,,,\")\r\n            } catch (error) {\r\n                console.error('Error fetching team rating:', error);\r\n            }\r\n        };\r\n\r\n        //fetchTeamRating();\r\n        fetchTeamData();\r\n        //fetchUserData(); \r\n        \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('teamRating changed:', teamRating);\r\n    },[teamRating])\r\n    \r\n\r\n    return (\r\n        <Spring className={`${styles.container} card h-1 g-30 card-padded`}>\r\n            <div className=\"d-flex\">\r\n                <div className={styles.media} >\r\n                    <LazyImage style={styles.img} src={teamData.logo ? teamData.logo : \"https://static.vecteezy.com/system/resources/previews/027/385/965/original/blank-e-sport-shield-badge-png.png\"} alt=\"https://clipart-library.com/img/1094138.jpg\" />\r\n                </div>\r\n                <div className=\"d-flex flex-column justify-content-between\" style={{ width: '100%' }}>\r\n                    <div className={`${styles.main_info} d-flex flex-column g-14`}>\r\n                        <div className=\"d-flex flex-column g-4\">\r\n                            <h1 className=\"text-20 text-overflow\">{teamData.name}</h1>\r\n                            {/* {userData.fullname && ( */}\r\n                                <>\r\n                                {teamData.teamManagerName && teamData.teamManagerName.map(manager => (\r\n                                        <span key={manager.id} className=\"text-12\"> Team Manager: {manager.fullname} </span>\r\n                                        ))}\r\n                                {teamData.coachName && teamData.coachName.length > 0 && !teamData.coachNameRendered && (\r\n                                    <>\r\n                                    <Link to={\"/coach-profile\"} state={{ playerId: teamData.coach }} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                        {teamData.coachName && teamData.coachName.map(coach => (\r\n                                        <span key={coach.id} className=\"text-12\"> Coach: {coach.fullname} </span>\r\n                                        ))}\r\n                                    </Link>\r\n                                    </>\r\n                                )}\r\n                                </>\r\n                                \r\n                            {/* )} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        {teamRating !== null ? (\r\n                            <CustomRating value={teamRating} max={5} type=\"stars\" isCompact />\r\n                        ) : null}\r\n                        {/* <Like qty={27} isLiked withText/> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Spring>\r\n    );\r\n};\r\n\r\n\r\nexport default TeamProfileCard","// extracted by mini-css-extract-plugin\nexport default {\"tabs_list\":\"styles_tabs_list__VoDnj\",\"row\":\"styles_row__sl7RU\",\"vertical\":\"styles_vertical__ENhGi\",\"social_item\":\"styles_social_item__EQX0R\",\"icon\":\"styles_icon__rGFKj\",\"social_connect\":\"styles_social_connect__5vHuU\",\"footer\":\"styles_footer__gjfbP\",\"form\":\"styles_form__l0c6H\",\"card\":\"styles_card__-fSaH\",\"container\":\"styles_container__mcmZ1\",\"wrapper\":\"styles_wrapper__qdwH1\",\"title\":\"styles_title__QlpQA\",\"img\":\"styles_img__8Dg0T\",\"button\":\"styles_button__Eqi1E\",\"toggleSwitch\":\"styles_toggleSwitch__I+r1w\",\"checkbox\":\"styles_checkbox__gL1ZN\",\"label\":\"styles_label__HfOKB\",\"toggle\":\"styles_toggle__A1nzC\",\"toggleText\":\"styles_toggleText__s9ywN\",\"tab-nav\":\"styles_tab-nav__G8bFs\",\"MuiTabButton-root\":\"styles_MuiTabButton-root__WDjMa\",\"show-add-players\":\"styles_show-add-players__DADLo\",\"select\":\"styles_select__Jjswe\"};"],"names":["useTeamLogo","file","setFile","useState","loading","setLoading","formData","FormData","message","setMessage","handleFile","e","target","files","toast","error","type","reader","FileReader","readAsDataURL","onerror","onloadstart","append","console","log","get","onloadend","async","result","Team","USER","useAuthContext","anchorEl","open","handleClick","handleClose","useSubmenu","inputRef","useRef","teams","setTeams","userId","setUserId","navigate","useNavigate","submenuActions","label","icon","onClick","triggerInput","_inputRef$current","current","click","register","handleSubmit","formState","errors","reset","useForm","useEffect","axios","concat","email","data","_id","fetchData","_jsxs","className","onSubmit","newTeamData","name","fullname","logo","response","fetch","method","body","ok","teamData","json","success","go","children","_jsx","styles","wrapper","title","onChange","ref","hidden","LazyImage","img","src","alt","user","button","Submenu","onClose","actions","classNames","placeholder","required","footer","styled","div","withConfig","componentId","theme","light","dark","PlayerListWithNoTeam","searchTerm","setSearchTerm","playerData","setPlayerData","currentPage","setCurrentPage","fetchPlayerData","AddPlayerToTeam","headers","JSON","stringify","newPlayerData","addNewPlayer","indexOfLastPlayer","indexOfFirstPlayer","filteredPlayers","filter","player","toLowerCase","includes","currentPlayers","slice","paginate","pageNumber","style","display","alignItems","width","value","flex","fontSize","padding","overflowX","borderCollapse","tableLayout","textAlign","fontWeight","borderBottom","map","index","overflow","textOverflow","whiteSpace","age","position","Button","backgroundColor","textTransform","color","marginTop","disabled","length","Profile","control","preferredFoot","setPreferredFoot","sessionStorage","getItem","Agevalue","generateRandomPassword","charset","password","i","Math","floor","random","showBasicForm","setShowBasicForm","handleToggleForm","getCountriesOptions","countries","countryList","getData","removeItem","_data$position","getUser","phone","jersyNumber","height","country","nationality","preferedFoot","coachId","_Fragment","toggleSwitch","id","checkbox","checked","htmlFor","toggle","toggleText","row","pattern","Controller","render","_ref","field","CustomSelect","options","isSearchable","variant","innerRef","min","max","_ref2","CoachListWithNoTeam","AddPlayer","activeTab","setActiveTab","coachHasTeam","setCoachHasTeam","useWindowSize","hasTeam","exists","checkTeam_manager","Spring","Tabs","TabsList","tabs_list","TabButton","active","TabPanel","Fade","in","timeout","TeamProfile","Link","to","Coach","widgets","settings","AddPlayerOverview","PageHeader","AppGrid","TeamProfileCard","setTeamData","userData","setUserData","teamRating","setTeamRating","state","useLocation","teamId","fetchTeamRating","rate","rating","teamDataResponse","fetchTeamData","container","media","main_info","teamManagerName","manager","coachName","coachNameRendered","playerId","coach","textDecoration","CustomRating","isCompact"],"sourceRoot":""}