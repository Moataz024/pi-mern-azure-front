{"version":3,"file":"static/js/1346.151f7164.chunk.js","mappings":"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","sources":["components/Coach/CardItem.jsx","components/Coach/ContainerCards.jsx","components/Coach/DragAndDrop.jsx","pages/Coach/lineupTeam.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { FaEllipsisV } from 'react-icons/fa';\r\nimport { HiOutlineSwitchHorizontal } from \"react-icons/hi\";\r\nimport { GiCardJoker } from \"react-icons/gi\";\r\nimport backgroundImageVS from '@assets/players/8.webp';\r\n\r\n\r\ninterface CardItemProps {\r\n    data: {\r\n        id: number;\r\n        name: string;\r\n        status: string;\r\n    };\r\n    handleDragging: (dragging: boolean) => void;\r\n}\r\n\r\nexport const CardItem: React.FC<CardItemProps> = ({ data, handleDragging }) => {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.dataTransfer.setData('text', `${data.id}`)\r\n        handleDragging(true)\r\n    }\r\n\r\n    const handleDragEnd = () => handleDragging(false)\r\n    \r\n    const handleClick = () => {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShowDialog(false);\r\n    }\r\n\r\n    return (\r\n        <div className='card-container' draggable onDragStart={handleDragStart} onDragEnd={handleDragEnd} style={{ padding: '4px', backgroundColor: data.status === 'Equipe A' ? '#436850' : (data.status === 'Lineup' ? '#0079FF' : '#E8C872') }}>           \r\n            <div className='card-content' style={{ display: 'flex', alignItems: 'center', position: 'relative', padding: '4px', backgroundColor: data.status === 'Lineup' ? '#0079FF' : (data.status === 'Equipe A' ? '#436850' : '#E8C872') }}>           \r\n                <img src={backgroundImageVS} alt=\"Nom du joueur\" style={{ borderRadius: '50%', marginRight: '8px', height: '39px', width: '39px', paddingTop: '-20px' }} />\r\n                <p>{data.name}</p>\r\n                <div className=\"icon-container\" style={{ position: 'absolute', right: '0', fontSize: '1.5rem' }}>\r\n                    <button className=\"icon-button\" onClick={handleClick}>\r\n                        <FaEllipsisV className=\"ellipsis-icon\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <Dialog\r\n                open={showDialog}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        backdropFilter: 'blur(3px)', // Ajoute un flou\r\n                        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n                        boxShadow: 'none',\r\n                        border: '2.5px dashed #fff',\r\n                        borderRadius: '50px',\r\n                    },\r\n                }}\r\n            >\r\n                <DialogTitle style={{ color: 'black', right: '0', fontSize: '1.5rem', top: '7px' }}></DialogTitle>\r\n                <DialogContent>\r\n                    <Button onClick={() => alert(\"Switch player\")}> <HiOutlineSwitchHorizontal style={{ right: '0', fontSize: '2.2rem', top: '7px' }} /><b>Switch Player</b></Button><br></br>\r\n                    <Button onClick={() => alert(\"Change card color to red\")}><GiCardJoker style={{ right: '0', fontSize: '2.5rem', top: '7px', color: 'red' }} /><b style={{ color: 'red' }}>Red Card</b></Button><br></br>\r\n                    <Button onClick={() => alert(\"Change card color to yellow\")}><GiCardJoker style={{ right: '0', fontSize: '2.5rem', top: '7px', color: '#fccb00' }} /><b style={{ color: '#fccb00' }}>Yellow Card</b></Button>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} style={{ marginRight: '57px', right: '0', fontSize: '0.9rem', bottom: '3px', border: '1px solid black', backgroundColor: 'black', borderRadius: '20%' }}><b style={{ color: 'white' }}>Cancel</b></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardItem;\r\n","import React, { useState } from \"react\";\r\nimport CardItem from \"./CardItem\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { FaEllipsisV } from 'react-icons/fa';\r\nimport { HiOutlineSwitchHorizontal } from \"react-icons/hi\";\r\nimport { GiCardJoker } from \"react-icons/gi\";\r\ninterface Item {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n\r\n\r\ninterface ContainerCardsProps {\r\n    items: Item[];\r\n    status: string;\r\n    isDragging: boolean;\r\n    handleUpdateList: (id: number, status: string) => void;\r\n    handleDragging: (dragging: boolean) => void;\r\n    handleSave: () => void; \r\n\r\n}\r\n\r\nconst ContainerCards: React.FC<ContainerCardsProps> = ({ items = [], status, isDragging, handleDragging,handleSave }) => {\r\n\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n\r\n    const handleCardDragEnd = () => {\r\n        handleDragging(false);\r\n    };\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        setShowDialog(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"layout-cardss\">{status === 'Lineup' ? 'Lineup' : status}</p>\r\n            {status === 'Lineup' && (\r\n            <>\r\n                  \r\n\r\n                \r\n            </>\r\n        )}\r\n        \r\n            \r\n            {items.map(item => (\r\n                status === item.status && (\r\n                    <div key={item.id} onDragEnd={handleCardDragEnd}>\r\n                        <CardItem\r\n                            data={item}\r\n                            handleDragging={handleDragging}\r\n                           \r\n                        />\r\n                    </div>\r\n                )\r\n            ))}\r\n        </div>\r\n    );\r\n    \r\n    \r\n};\r\n\r\nexport default ContainerCards;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDragAndDrop } from \"@hooks/useDragAndDrop\"; \r\nimport ContainerCards from \"./ContainerCards\"; \r\nimport backgroundImageVS from '@assets/refree/terrain.jpeg';\r\nimport {toast} from 'react-toastify';\r\nconst typesClub = ['List Team', 'Lineup'];\r\n\r\n\r\nexport const DragAndDrop = () => {\r\n\r\n\r\n    const getTeamByCoach = async (coachId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/Team/getTeambyCoach/${coachId}`);\r\n            /* if (!response.ok) {\r\n                throw new Error('Failed to fetch team');\r\n            } */\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    const teamData = JSON.parse(localStorage.getItem('teamData'));\r\n\r\n    const data = teamData.playerNames.map((player, index) => ({\r\n        id: index + 1, // Adding 1 to start IDs from 1\r\n        name: player,\r\n        status: 'List Team',\r\n    })); \r\n\r\n    const { isDragging, listItems, handleDragging, handleUpdateList } = useDragAndDrop(data);\r\n\r\n    \r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e, container) => {\r\n        e.preventDefault();\r\n        const draggedItemId = parseInt(e.dataTransfer.getData('text/plain'), 10);\r\n    \r\n        if (container === 'Lineup' && listItems.filter(item => item.status === 'Lineup').length < 11) {\r\n            handleUpdateList(draggedItemId, container);\r\n        } else if (container === 'List Team') {\r\n            handleUpdateList(draggedItemId, container);\r\n        } else {\r\n            toast.warning(\"Only 11 players can fit in the 'Lineup' container!\");\r\n        }\r\n    };\r\n    \r\n\r\n    const getContainerStyle = (container) => {\r\n        if (container === 'Lineup') {\r\n            return {\r\n                height: '900px', \r\n                width: '600px', // Increase the width of the VS container\r\n                backgroundImage: `url(${backgroundImageVS})`,\r\n                backgroundSize: 'cover',\r\n            };\r\n        } else {\r\n            return {\r\n               // height: '300px', // Decrease the height of the list container\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n        const Team = await getTeamByCoach(\"65e1126386566290fd9dd1f3\");\r\n        try {\r\n            localStorage.setItem('teamData', JSON.stringify(Team));\r\n          } catch (error) {\r\n            console.error('Error setting item in localStorage:', error);\r\n          }\r\n          \r\n        }\r\n        fetchData()\r\n    }, []);\r\n\r\n    const sortedListItems = listItems.slice().sort((a, b) => {\r\n        const getPositionOrder = (position) => {\r\n            const positionOrder = {\r\n                \"ST\": 1,\r\n                \"CF\": 2,\r\n                \"RF\": 3,\r\n                \"LF\": 4,\r\n                \"RW\": 5,\r\n                \"LW\": 6,\r\n                \"CM\": 7,\r\n                \"CDM\": 8,\r\n                \"CAM\": 9,\r\n                \"RM\": 10,\r\n                \"LM\": 11,\r\n                \"CB\": 12,\r\n                \"RB\": 13,\r\n                \"LB\": 14,\r\n                \"RWB\": 15,\r\n                \"LWB\": 16,\r\n                \"GK\": 17\r\n                // Add more positions if needed\r\n            };\r\n            return positionOrder[position] || Infinity; \r\n        };\r\n\r\n        const positionA = a.name.match(/\\((.*?)\\)/)[1]; \r\n        const positionB = b.name.match(/\\((.*?)\\)/)[1]; \r\n\r\n        return getPositionOrder(positionA) - getPositionOrder(positionB);\r\n    });\r\n\r\n    return (\r\n        <div className=\"grid\" onDragOver={handleDragOver}>\r\n            {typesClub.map(container => (\r\n                <div className=\"layout-cards\" key={container} style={getContainerStyle(container)} onDrop={(e) => handleDrop(e, container)}>\r\n                    <ContainerCards\r\n                        items={sortedListItems}\r\n                        status={container}\r\n                        key={container}\r\n                        isDragging={isDragging}\r\n                        handleDragging={handleDragging}\r\n                        handleUpdateList={handleUpdateList}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n    };\r\n    \r\n\r\n\r\n\r\n\r\nexport default DragAndDrop;","import { DragAndDrop } from '@components/Coach/DragAndDrop';\r\nimport { Title } from '@components/Refree/Title';\r\nimport React from 'react';\r\nimport PageHeader from '@layout/PageHeader';\r\n\r\nconst lineupTeam = () => {\r\n   \r\n\r\n    return (\r\n        <>\r\n            <PageHeader title=\" Team Linup\" />\r\n            <DragAndDrop />\r\n      \r\n      </>\r\n    );\r\n};\r\n\r\nexport default lineupTeam;\r\n"],"names":["_ref","data","handleDragging","showDialog","setShowDialog","useState","handleClose","_jsxs","className","draggable","onDragStart","e","dataTransfer","setData","concat","id","onDragEnd","handleDragEnd","style","padding","backgroundColor","status","children","display","alignItems","position","_jsx","src","backgroundImageVS","alt","borderRadius","marginRight","height","width","paddingTop","name","right","fontSize","onClick","handleClick","FaEllipsisV","Dialog","open","onClose","PaperProps","backdropFilter","boxShadow","border","DialogTitle","color","top","DialogContent","Button","alert","HiOutlineSwitchHorizontal","GiCardJoker","DialogActions","bottom","items","isDragging","handleSave","handleCardDragEnd","_Fragment","map","item","CardItem","typesClub","DragAndDrop","JSON","parse","localStorage","getItem","playerNames","player","index","listItems","handleUpdateList","useDragAndDrop","getContainerStyle","container","backgroundImage","backgroundSize","useEffect","async","Team","response","fetch","coachId","json","error","console","getTeamByCoach","setItem","stringify","fetchData","sortedListItems","slice","sort","a","b","getPositionOrder","Infinity","positionA","match","positionB","onDragOver","preventDefault","onDrop","handleDrop","draggedItemId","parseInt","getData","filter","length","toast","warning","ContainerCards","lineupTeam","PageHeader","title"],"sourceRoot":""}