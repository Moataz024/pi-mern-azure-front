{"version":3,"file":"static/js/5457.ce07d0f9.chunk.js","mappings":"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","sources":["widgets/Admin/PaymentCoin/index.jsx","pages/Payment/PaymentWithCoin.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Spring from '@components/Spring';\r\nimport { useWindowSize } from 'react-use';\r\nimport CustomSelect from '@ui/CustomSelect';\r\nimport { toast } from 'react-toastify';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Tabs } from '@mui/material';\r\nimport {useAuthContext} from \"@hooks/useAuthContext\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport Tesseract from 'tesseract.js';\r\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\nimport { MdScreenshotMonitor } from \"react-icons/md\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport imagetransaction from '@assets/fans/transactionimage.png';\r\n\r\nconst App = () => {\r\n  const [tournamentId, setTournamentId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [tournaments, setTournaments] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const { width } = useWindowSize();\r\n  const [duration, setDuration] = useState(0);\r\n  const [startDay, setStartDay] = useState(0);\r\n  const [startMonth, setStartMonth] = useState(0);\r\n  const [startYear, setStartYear] = useState(0);\r\n  const [endDay, setEndDay] = useState(0);\r\n  const [endMonth, setEndMonth] = useState(0);\r\n  const [endYear, setEndYear] = useState(0);\r\n  const { USER } = useAuthContext();\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const { handleSubmit } = useForm();\r\n\r\n  const [adminAddressWallet, setAdminAddressWallet] = useState('0x83d9C5d7...2F4D914D');\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n  const [addressesMatch, setAddressesMatch] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [amount, setAmount] = useState(0);\r\n\r\n\r\n  const [disableImage, setDisableImage] = useState(true);\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [showAnimation, setShowAnimation] = useState(false);\r\n  const [isMatch, setIsMatch] = useState(false);\r\n  const [dataFromFirstPart, setDataFromFirstPart] = useState({});\r\n  const [dataFromSecondPart, setDataFromSecondPart] = useState({});\r\n\r\n  const [tournamentSelected, setTournamentSelected] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n\r\n  const handleSaveFirstPartData = (data) => {\r\n    setDataFromFirstPart(data);\r\n  };\r\n  const handleSaveSecondPartData = (data) => {\r\n    setDataFromSecondPart(data);\r\n  };\r\n  const [userData, setUserData] = useState({\r\n    userName: USER.fullname,\r\n    userEmail: USER.email\r\n  });\r\n  const [paymentData, setPaymentData] = useState({\r\n    walletAddress: '',\r\n    amount: 0\r\n  });\r\n\r\n  const [openTermsDialog, setOpenTermsDialog] = useState(true);\r\n\r\n\r\n  const saveUserData = (data) => {\r\n    if (!tournamentId) {\r\n      toast.error('Please select a tournament before proceeding.');\r\n      return;\r\n    }\r\n    setUserData({\r\n      ...data,\r\n      tournamentId: tournamentId\r\n    });\r\n    nextStep();\r\n  };\r\n  const savePaymentData = (data) => {\r\n    setPaymentData(data);\r\n    //toast.success(\"Your payment has been processed successfully. !\");\r\n\r\n    handleConfirmation();\r\n  };\r\n  const nextStep = () => {\r\n    setStep(step + 1);\r\n  };\r\n  const prevStep = () => {\r\n    setStep(step - 1);\r\n  };\r\n\r\n  {/*useEffect(() => {\r\n    if (addressesMatch) {\r\n      setIsMatch(true);\r\n      setShowAnimation(true);\r\n      setTimeout(() => {\r\n        setShowAnimation(false);\r\n      }, 2000);\r\n    } else {\r\n      setIsMatch(false);\r\n    }\r\n  }, [addressesMatch]);\r\n*/}\r\n  useEffect(() => {\r\n    if (walletAddress && adminAddressWallet) {\r\n      setAddressesMatch(walletAddress === adminAddressWallet);\r\n    }\r\n  }, [walletAddress, adminAddressWallet]);\r\n  const handleChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setFile(URL.createObjectURL(file));\r\n      setDisableImage(false);\r\n      toast.success('Image uploaded successfully!');\r\n    } else {\r\n      setFile(null);\r\n      setDisableImage(true);\r\n    }\r\n\r\n\r\n    Tesseract.recognize(\r\n        file,\r\n        'eng',\r\n        { logger: (m) => console.log(m) }\r\n    ).then(({ data: { text: extractedText } }) => {\r\n      console.log('Extracted Text:', extractedText);\r\n\r\n      const extractWalletAddresses = (text) => {\r\n        //const regexFrom = /From:\\s(0x[a-fA-F0-9]+¢[a-fA-F0-9]+)/;\r\n\r\n        const regexFrom = /From\\s(Ox[a-fA-F0-9]{8}\\.\\.\\.[a-fA-F0-9]{9})/g;\r\n        const regexTo = /To\\s(0x[a-fA-F0-9]{8}\\.\\.\\.[a-fA-F0-9]{8})/g;\r\n\r\n        const matchesFrom = regexFrom.exec(text);\r\n        const matchesTo = regexTo.exec(text);\r\n\r\n        const senderAddress = matchesFrom && matchesFrom.length > 1 ? matchesFrom[1] : '';\r\n        const receiverAddress = matchesTo && matchesTo.length > 1 ? matchesTo[1] : '';\r\n\r\n        const amountRegex = /For\\s(\\d+)\\s\\(/;\r\n        const amountMatch = text.match(amountRegex);\r\n        const transactionAmount = amountMatch ? amountMatch[1] : '';\r\n\r\n        return { senderAddress, receiverAddress, transactionAmount };\r\n      };\r\n\r\n      const { senderAddress, receiverAddress, transactionAmount } = extractWalletAddresses(extractedText);\r\n\r\n      console.log('Sender Address:', senderAddress);\r\n      console.log('USER Address:', USER.addressWallet);\r\n\r\n      console.log('admin Address:', adminAddressWallet);\r\n      console.log('Receiver Address:', receiverAddress);\r\n\r\n      console.log('Transaction Amount:', transactionAmount);\r\n\r\n      setWalletAddress(senderAddress);\r\n      setAmount(transactionAmount);\r\n      const modifiedAddress = \"O\" + USER.addressWallet.slice(1);\r\n      console.log('modified Address :', modifiedAddress);\r\n\r\n      if (receiverAddress === adminAddressWallet && senderAddress === modifiedAddress) {\r\n        console.log(\"match\",addressesMatch)\r\n\r\n        setAddressesMatch(true);\r\n        console.log(\"matchhh\",addressesMatch)\r\n\r\n      } else {\r\n\r\n        setAddressesMatch(false);\r\n        console.log(\"match no  \",addressesMatch)\r\n      }\r\n\r\n\r\n    }).catch(error => {\r\n      console.error('Error during OCR:', error);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTournaments = async () => {\r\n      try {\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        setUserId(userId);\r\n\r\n\r\n        const response = await axios.get(`http://localhost:3000/Tournament/getByUserId/${userId}`);\r\n\r\n        const data = response.data && response.data.tournaments ? response.data.tournaments : [];\r\n        console.log(\"tournament :\",data)\r\n\r\n        setTournaments(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tournaments:\", error.message);\r\n      }\r\n    };\r\n\r\n    if (USER && USER.email) {\r\n      fetchTournaments();\r\n    }\r\n  }, [USER]);\r\n\r\n  const handleConfirmation = async () => {\r\n    try {\r\n\r\n      const selectedTournamentData = tournaments.find(tournament => tournament._id === tournamentId);\r\n      const TournamentType = selectedTournamentData ? selectedTournamentData.tournamentType : null;\r\n\r\n\r\n      console.log(\"tournament Type :\",TournamentType)\r\n      let expectedAmount;\r\n      switch (TournamentType) {\r\n        case 'Knockout':\r\n          expectedAmount = '19';\r\n          break;\r\n        case 'League':\r\n          expectedAmount = '6';\r\n          break;\r\n        case 'Championship':\r\n          expectedAmount = '5';\r\n          break;\r\n        default:\r\n          expectedAmount = '';\r\n      }\r\n\r\n\r\n      if (amount !== expectedAmount) {\r\n        toast.error(` Incorrect amount for tournament type ${TournamentType}. Expected: ${expectedAmount}`);\r\n        return;\r\n      }\r\n\r\n      const formData = {\r\n        userId: userId,\r\n        ...paymentData,\r\n        tournament: tournamentId,\r\n        payment_status: 'unpaid',\r\n        amount: amount,\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:3000/Payment/createPayment', formData);\r\n\r\n      console.log(\"data cc:\",formData)\r\n\r\n      const aaddressesMatch = response.data && response.data.addressesMatch ? response.data.addressesMatch : false;\r\n\r\n      console.log(\"data dddd:\", aaddressesMatch);\r\n\r\n      const payment = response.data && response.data.payment ? response.data.payment : null;\r\n      console.log(\"payment dddd:\", payment);\r\n\r\n      if (addressesMatch && payment) {\r\n        await axios.put(`http://localhost:3000/Payment/${payment._id}`, { payment_status: 'paid' });\r\n        toast.success(\"Your payment has been processed successfully!\");\r\n        navigate('/payment/checkout-success');\r\n\r\n\r\n\r\n        console.log(\"payment dddd:\", payment);\r\n\r\n      }else {\r\n        toast.error(\"User and Admin wallet addresses do not match!\");\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error during checkout:\", error.message);\r\n    }\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    //toast.info(\"Your details have been successfully saved! Please proceed with the payment process.\");\r\n  };\r\n\r\n  const handleTournamentChange = (selectedTournament) => {\r\n    setTournamentId(selectedTournament);\r\n    const selectedTournamentData = tournaments.find(tournament => tournament._id === selectedTournament);\r\n\r\n    if (selectedTournamentData) {\r\n      setTitle(selectedTournamentData.title);\r\n      setStartDay(selectedTournamentData.startDay);\r\n      setStartMonth(selectedTournamentData.startMonth);\r\n      setStartYear(selectedTournamentData.startYear);\r\n      setEndDay(selectedTournamentData.endDay);\r\n      setEndMonth(selectedTournamentData.endMonth);\r\n      setEndYear(selectedTournamentData.endYear);\r\n\r\n      const start = new Date(selectedTournamentData.startYear, selectedTournamentData.startMonth - 1, selectedTournamentData.startDay);\r\n      const end = new Date(selectedTournamentData.endYear, selectedTournamentData.endMonth - 1, selectedTournamentData.endDay);\r\n\r\n      setStartDate({\r\n        day: start.getDate(),\r\n        month: start.getMonth() + 1,\r\n        year: start.getFullYear(),\r\n      });\r\n\r\n      setEndDate({\r\n        day: end.getDate(),\r\n        month: end.getMonth() + 1,\r\n        year: end.getFullYear(),\r\n      });\r\n\r\n      const durationInDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\r\n      setDuration(durationInDays);\r\n    }\r\n  };\r\n  return (\r\n      <form className=\"d-flex flex-column g-20\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Spring className=\"card d-flex flex-column card-padded\">\r\n          <div className=\"d-flex flex-column justify-content-between flex-1\">\r\n            <Tabs\r\n                style={{ width: '100%', backgroundColor: '#FDCA40', color: 'black', justifyContent: 'center' }}\r\n            >\r\n              <h3 style={{ paddingTop: '10px', marginLeft: '250px', color: 'black' }}>Payment with GSCoin</h3>\r\n            </Tabs>\r\n\r\n            <br></br>\r\n\r\n            {step === 1 && (\r\n                <div>\r\n                  <label>\r\n                    User Name\r\n                    <input\r\n                        className={classNames('field text-700')}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        disabled={true}\r\n                        value={USER.fullname}\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    User Email\r\n                    <input\r\n                        className={classNames('field text-700')}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        disabled={true}\r\n                        value={USER.email}\r\n                        onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </label>\r\n                  <br />\r\n                  <hr style={{ margin: '20px 0' }} />\r\n                  {tournamentId  ? (\r\n                      <>\r\n                        <label>\r\n                          Tournament Title:\r\n                          <input\r\n                              className={classNames('field text-700')}\r\n                              type=\"text\"\r\n                              value={title}\r\n                              readOnly\r\n                          />\r\n                        </label>\r\n                        <label>\r\n                          Tournament Start Data:\r\n                          <input\r\n                              className={classNames('field text-700')}\r\n                              type=\"text\"\r\n                              value={startDate && `${startDate.day}/${startDate.month}/${startDate.year}`}\r\n                              readOnly\r\n                          />\r\n                        </label>\r\n                        <label>\r\n                          Tournament End Data:\r\n                          <input\r\n                              className={classNames('field text-700')}\r\n                              type=\"text\"\r\n                              value={endDate && `${endDate.day}/${endDate.month}/${endDate.year}`}\r\n                              readOnly\r\n                          />\r\n                        </label>\r\n\r\n                        <label>\r\n                          Tournament Duration:\r\n                          <input\r\n                              className={classNames('field text-700')}\r\n                              type=\"text\"\r\n                              value={duration}\r\n                              readOnly\r\n                          />\r\n                        </label>\r\n                        <button\r\n                            className=\"btn\"\r\n                            type=\"button\"\r\n                            style={{ marginLeft: '150px', width: '60%', backgroundColor: 'red', color: 'white' }}\r\n                            onClick={() => {\r\n                              setTournamentId('');\r\n                              setTitle('');\r\n                              setStartDay(0);\r\n                              setStartMonth(0);\r\n                              setStartYear(0);\r\n                              setEndDay(0);\r\n                              setEndMonth(0);\r\n                              setEndYear(0);\r\n                              setStartDate(null);\r\n                              setEndDate(null);\r\n                              setDuration(0);\r\n                              setTournamentSelected(false);\r\n                            }}\r\n                        >\r\n                          Cancel Selection\r\n                        </button>\r\n                        <hr style={{ margin: '20px 0' }} />\r\n\r\n                      </>\r\n                  ) : (\r\n                      <>\r\n                        <label>\r\n                          Tournament Title:\r\n                          <CustomSelect\r\n                              className=\"custom-select\"\r\n                              options={(tournaments || []).map(tournament => ({\r\n                                label: tournament.title,\r\n                                value: tournament._id,\r\n                              }))}\r\n                              value={{ label: tournamentId, value: tournamentId }}\r\n                              onChange={(selectedOption) => {\r\n                                handleTournamentChange(selectedOption.value);\r\n                                setTournamentSelected(true);\r\n                              }}\r\n                          />\r\n                        </label>\r\n                        {tournamentSelected ? null : (\r\n                            <p style={{ color: 'red', marginLeft: '10px' }}>Please select a tournament.</p>\r\n                        )}\r\n                      </>\r\n                  )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            )}\r\n            {step === 2 && (\r\n                <div>\r\n                  <label>\r\n                    User Address Wallet\r\n                    <input\r\n                        className={classNames('field text-700')}\r\n                        type=\"text\"\r\n                        placeholder=\"AddressWallet\"\r\n                        disabled={true}\r\n                        value={USER.addressWallet}\r\n                    />\r\n                  </label>\r\n\r\n                  <div style={{ marginBottom: '20px', textAlign: 'center' }} className=\"transaction-screenshot\">\r\n                    {!file && (\r\n                        <label htmlFor=\"transaction-image\" style={{ display: 'block', marginBottom: '10px', fontSize: '14px', fontWeight: 'bold' }} className=\"transaction-screenshot-label\">\r\n                          <p style={{ display: 'block', margin: '10px auto', padding: '8px 12px', backgroundColor: '#FDCA40', color: 'black', border: 'none', borderRadius: '9px', cursor: 'pointer' }}>\r\n                            Upload Screenshot for Your Transaction\r\n                            <input\r\n                              id=\"transaction-image\"\r\n                              style={{ display: 'none' }}\r\n                              className=\"transaction-screenshot-input\"\r\n                              type=\"file\"\r\n                              onChange={handleChange}\r\n                          />\r\n                      </p><MdScreenshotMonitor style={{  width: '5%', height: '5%',margin: '0 auto' }} />\r\n                        </label>\r\n                    )}\r\n                    {!disableImage && (\r\n                        <div style={{ border: '2px solid #ccc', borderRadius: '8px', overflow: 'hidden', width: '100%', maxWidth: '700px', margin: '0 auto' }} className=\"transaction-screenshot-preview\">\r\n                          <img src={file} alt=\"Transaction Screenshot\" style={{ display: 'block', width: '100%', height: 'auto' }} className=\"transaction-screenshot-image\" />\r\n                          <button style={{ display: 'block', margin: '10px auto', padding: '8px 16px', backgroundColor: '#FDCA40', color: 'black', border: 'none', borderRadius: '5px', cursor: 'pointer' }} onClick={() => setFile(null)}>Remove Image</button>\r\n                        </div>\r\n                    )}\r\n                  </div>\r\n\r\n\r\n\r\n                  {!disableImage && (\r\n                      <div>\r\n                        {addressesMatch ? (\r\n                            <b className={showAnimation ? \"animate-fade\" : \"\"} style={{ marginLeft: '180px', paddingTop: '30px', color: 'green' }}>\r\n                              User and Admin wallet addresses match! <FaCheckCircle style={{ color: 'green' }} />\r\n                            </b>\r\n                        ) : (\r\n                            <b style={{ marginLeft: '180px', paddingTop: '30px', color: 'red' }}>\r\n                              User and Admin wallet addresses do not match! <FaTimesCircle style={{ color: 'red' }} />\r\n                            </b>\r\n                        )}\r\n                      </div>\r\n                  )}\r\n                  <label>\r\n                    Amount with GSC\r\n                    <input\r\n                        className={classNames('field text-700')}\r\n                        type=\"text\"\r\n                        placeholder=\"Amount\"\r\n                        disabled={true}\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                    />\r\n                  </label>\r\n\r\n\r\n\r\n                </div>\r\n            )}\r\n            <br />\r\n            {step === 1 && (\r\n                <button\r\n                    className=\"btn\"\r\n                    type=\"button\"\r\n                    style={{ marginLeft: '150px', width: '60%', backgroundColor: '#FDCA40', color: 'black' }}\r\n                    onClick={() => saveUserData(dataFromFirstPart)}\r\n\r\n                >\r\n                  Next\r\n                </button>\r\n\r\n            )}\r\n            <br /><br />\r\n            <button\r\n                className=\"btn\"\r\n                type=\"button\"\r\n                style={{  width: '100%', backgroundColor: 'transparent', color: 'white' }}\r\n                onClick={() => setOpenTermsDialog(true)}\r\n            >\r\n              <u>View the Terms & Conditions before completing your payment with GSCoin or Stripe.</u>\r\n            </button>\r\n            <Dialog open={openTermsDialog} onClose={() => setOpenTermsDialog(false)}>\r\n              <DialogTitle>Terms & Conditions</DialogTitle>\r\n              <DialogContent>\r\n                <div   style={{  marginLeft:'20%',marginBottom:'5%',width: '100%',fontWeight:'bold',fontSize:'20px', color: 'red' }}>\r\n                  <b>Here are the terms and conditions</b>\r\n                </div>\r\n\r\n\r\n                <ul>\r\n                  <li> <b style={{  fontWeight:'bold',fontSize:'14px', color: 'blue' }}>Term 1 :</b>  Every tournament has a different amount. If your tournament is a <b>league</b>, you must pay <b>50 TND</b>. If your tournament is a <b>knockout</b>, you should pay  <b>30 TND.</b> If the tournament is a <b>Championship,</b> you need to pay <b>40 TND</b>.\r\n                  </li>\r\n                  <li><b style={{  fontWeight:'bold',fontSize:'14px', color: 'blue' }}>Term 2 :</b>  The amount may vary depending on the duration of the tournament. <b>The first two days are free</b>, and after these two days, each additional <b>day costs 2 TND</b>. <u>For example, if the tournament duration is 6 days, the amount would be ((6-2) * 2).</u>\r\n                  </li>\r\n                  <li><b style={{  fontWeight:'bold',fontSize:'14px', color: 'blue' }}>Term 3 :</b>    If you want to pay with Coin, <br />\r\n                    <b>I - </b>  first go to this link <a style={{  fontWeight:'bold',fontSize:'13px', color: 'green' }} href=\"https://garksportscoin.netlify.app/\" target=\"_blank\" rel=\"noopener noreferrer\">https://garksportscoin.netlify.app/</a> . <br />\r\n                    <b>II - </b>  connect with your Metamask wallet. <br />\r\n                    <b> III -</b> Navigate to the 'Send Token' section and ensure you send the token to this wallet address: <b style={{color:'green'}}>0x83d9C5d7DfD1D2f5BeD9aDb3bf187e52F4D914DF</b>.<br/>\r\n                    <b><u>If you don't have the token, you can buy a Coin or pay with Stripe.</u></b><br />\r\n                    <b> IV -</b> After successfully completing your transaction with Coin, you should go to <a style={{  fontWeight:'bold',fontSize:'13px', color: 'green' }}  href=\"https://bscscan.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://bscscan.com/</a> <br/>\r\n                    <b> V -</b> Take a screenshot of your payment transaction.<br/>\r\n                    <img src={imagetransaction} alt=\"Transaction Screenshot\" style={{ display: 'block', width: '100%', border: '2px solid black', height: 'auto' }} className=\"transaction-screenshot-image\" />\r\n                    <b>VI -</b>  Once you've done that, you can continue with your payment like this one.<br/><br/>\r\n                    <p>Every tournament has a different amount in GSC: <br/>\r\n                      ** If your tournament is a <b>league</b>, you must pay <b>6 GSC</b>.<br/>\r\n                      ** If your tournament is a <b>knockout</b>, you should pay  <b>19 GSC.</b><br/>\r\n                      ** If the tournament is a <b>Championship,</b> you need to pay <b>5 GSC</b></p>\r\n                    <p style={{ fontSize:'11px', color: 'blue' }}>The amount does not depend on the duration of the tournament when paying with GSCoin.</p>\r\n                    <br/>\r\n                    <p><u>If you need any support, you can contact us <a  href=\"https://gmail.com/\"><b>LinkUpTournament@gmail.com</b></a> </u></p><br/>\r\n\r\n                  </li>\r\n                </ul>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button  style={{  width: '100%', backgroundColor: 'green', color: 'white' }} onClick={() => setOpenTermsDialog(false)}>CONFIRM</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <br /><br />\r\n            {step === 2 && (\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                  <button\r\n                      className=\"btn\"\r\n                      type=\"button\"\r\n                      style={{ marginRight: '10px', width: '30%', backgroundColor: '#FDCA40', color: 'black' }}\r\n                      onClick={prevStep}\r\n                  >\r\n                    <IoMdArrowRoundBack   style={{  width: '11%',height:'100%' }}/>\r\n\r\n                    Back\r\n                  </button>\r\n                  <button\r\n                      className=\"btn\"\r\n                      type=\"submit\"\r\n                      style={{ marginLeft: '10px', width: '30%', backgroundColor: '#FDCA40', color: 'black' }}\r\n                      onClick={() => savePaymentData(dataFromSecondPart)}\r\n                      disabled={disableImage || !amount}\r\n                  >\r\n                    Confirmation\r\n                  </button>\r\n                </div>\r\n            )}\r\n\r\n          </div>\r\n        </Spring>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n","import PageHeader from '@layout/PageHeader';\r\nimport AppGrid from '@layout/AppGrid';\r\nimport AccountSettings from '@widgets/Admin/PaymentCoin';\r\n\r\nconst PaymentWithCoin = () => {\r\n\r\n    const widgets = {\r\n        settings: <AccountSettings/>,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageHeader title=\"Payment with Coin\" />\r\n            <br />\r\n\r\n            <AppGrid id=\"settings\" widgets={widgets} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaymentWithCoin;\r\n"],"names":["App","tournamentId","setTournamentId","useState","title","setTitle","tournaments","setTournaments","activeTab","setActiveTab","width","useWindowSize","duration","setDuration","startDay","setStartDay","startMonth","setStartMonth","startYear","setStartYear","endDay","setEndDay","endMonth","setEndMonth","endYear","setEndYear","USER","useAuthContext","userName","setUserName","userEmail","setUserEmail","startDate","setStartDate","endDate","setEndDate","handleSubmit","useForm","adminAddressWallet","setAdminAddressWallet","walletAddress","setWalletAddress","addressesMatch","setAddressesMatch","file","setFile","amount","setAmount","disableImage","setDisableImage","step","setStep","showAnimation","setShowAnimation","isMatch","setIsMatch","dataFromFirstPart","setDataFromFirstPart","dataFromSecondPart","setDataFromSecondPart","tournamentSelected","setTournamentSelected","navigate","useNavigate","userId","setUserId","userData","setUserData","fullname","email","paymentData","setPaymentData","openTermsDialog","setOpenTermsDialog","nextStep","useEffect","async","axios","get","concat","data","_id","response","console","log","error","message","fetchTournaments","handleConfirmation","selectedTournamentData","find","tournament","TournamentType","tournamentType","expectedAmount","toast","formData","payment_status","post","aaddressesMatch","payment","put","success","_jsx","className","onSubmit","children","Spring","_jsxs","Tabs","style","backgroundColor","color","justifyContent","paddingTop","marginLeft","classNames","type","placeholder","disabled","value","onChange","e","target","margin","_Fragment","readOnly","day","month","year","onClick","CustomSelect","options","map","label","selectedOption","selectedTournament","start","Date","end","getDate","getMonth","getFullYear","durationInDays","Math","ceil","handleTournamentChange","addressWallet","marginBottom","textAlign","htmlFor","display","fontSize","fontWeight","padding","border","borderRadius","cursor","id","event","files","URL","createObjectURL","Tesseract","logger","m","then","_ref","text","extractedText","senderAddress","receiverAddress","transactionAmount","matchesFrom","exec","matchesTo","length","amountMatch","match","extractWalletAddresses","modifiedAddress","slice","catch","MdScreenshotMonitor","height","overflow","maxWidth","src","alt","FaCheckCircle","FaTimesCircle","saveUserData","Dialog","open","onClose","DialogTitle","DialogContent","href","rel","imagetransaction","DialogActions","Button","marginTop","marginRight","prevStep","IoMdArrowRoundBack","PaymentWithCoin","widgets","settings","AccountSettings","PageHeader","AppGrid"],"sourceRoot":""}