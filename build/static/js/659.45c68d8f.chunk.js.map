{"version":3,"file":"static/js/659.45c68d8f.chunk.js","mappings":"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","sources":["db/schedule.js","pages/Admin/Referee.jsx","widgets/Admin/AffichageCrud/styles.js","widgets/Admin/AffichageCrud/ViewNavigator.jsx","widgets/Admin/AffichageCrud/Event.jsx","widgets/Admin/AffichageCrud/index.jsx","widgets/EventsCalendar/styles.js","widgets/EventsCalendar/ViewNavigator.jsx","widgets/EventsCalendar/Navigator.jsx","widgets/EventsCalendar/Event.jsx","widgets/EventsCalendar/index.jsx"],"sourcesContent":["import moment from 'moment';\r\n\r\nconst schedule = [\r\n    {\r\n        name: 'UPS Marketing Event',\r\n        start: moment().set({hour: 9, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 10, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'marketing'\r\n    },\r\n    {\r\n        name: 'Hermes presentation',\r\n        start: moment().set({hour: 12, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 13, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'marketing'\r\n    },\r\n    {\r\n        name: 'Team meeting',\r\n        start: moment().set({hour: 16, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 18, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'workflow'\r\n    },\r\n    {\r\n        name: 'Medical checkup',\r\n        start: moment().set({hour: 11, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 12, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'health'\r\n    },\r\n    {\r\n        name: 'Dinner with friends',\r\n        start: moment().set({hour: 13, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 14, minute: 30, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'other'\r\n    },\r\n    {\r\n        name: 'Semi-annual review',\r\n        start: moment().set({hour: 20, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        end: moment().set({hour: 22, minute: 0, second: 0, millisecond: 0}).toDate(),\r\n        allDay: false,\r\n        type: 'workflow'\r\n    },\r\n]\r\n\r\nexport default schedule","// components\r\nimport PageHeader from '@layout/PageHeader';\r\nimport EventsCalendar from '@widgets/EventsCalendar';\r\nimport AffichageCrud from '@widgets/Admin/AffichageCrud';\r\n\r\nconst Referee = () => {\r\n    return (\r\n        <>\r\n            <PageHeader title=\"List of Referee\" />\r\n            <AffichageCrud/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Referee","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\nconst StyledEventsCalendar = styled.div`\r\n  .rbc-month-view,\r\n  .rbc-time-view,\r\n  .rbc-time-header {\r\n    border: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-off-range-bg,\r\n  .rbc-today {\r\n    background: transparent;\r\n  }\r\n\r\n  .rbc-header {\r\n    border-bottom: 1px solid var(--border);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: var(--heading-font);\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    color: var(--header);\r\n    font-weight: 600;\r\n\r\n    button {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .rbc-day-bg + .rbc-day-bg,\r\n  .rbc-header + .rbc-header,\r\n  .rbc-time-header-content,\r\n  .rbc-time-content > * + * > * {\r\n    border-left: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-time-content,\r\n  .rbc-time-content:first-of-type {\r\n    border-top: none;\r\n  }\r\n\r\n  .rbc-time-header.rbc-overflowing {\r\n    border-right: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-month-row + .rbc-month-row {\r\n    border-top: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-day-slot .rbc-time-slot {\r\n    border-top: 1px dashed var(--border);\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    border-bottom: 1px dashed var(--border);\r\n    position: relative;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .rbc-current-time-indicator {\r\n    background: ${theme('theme', {\r\n      light: 'var(--azure)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n  }\r\n\r\n  .rbc-time-gutter {\r\n    width: 68px;\r\n\r\n    .rbc-timeslot-group {\r\n      .rbc-time-slot {\r\n        &:first-of-type {\r\n          flex: 1;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            border-top: 1px dashed var(--border);\r\n            transform: translateY(-50%);\r\n            z-index: 1;\r\n          }\r\n\r\n          .rbc-label {\r\n            position: relative;\r\n            z-index: 2;\r\n            font-family: var(--heading-font);\r\n            font-size: 9px;\r\n            letter-spacing: 0.45px;\r\n            font-weight: 600;\r\n            color: var(--btn-text);\r\n            height: 20px;\r\n            width: 40px;\r\n            background: var(--widget);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            line-height: 11px;\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.day {\r\n    .rbc-day-slot .rbc-timeslot-group:first-of-type .rbc-time-slot:first-of-type {\r\n      border-top: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &.week {\r\n    .rbc-allday-cell,\r\n    .rbc-current-time-indicator{\r\n      display: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &.month .rbc-month-view {\r\n    min-height: 500px;\r\n\r\n    .rbc-date-cell {\r\n      padding: 4px 0 0 0;\r\n      text-align: center;\r\n\r\n      &.rbc-off-range {\r\n        opacity: .5;\r\n      }\r\n\r\n      &.rbc-now .rbc-button-link {\r\n        font-weight: 600;\r\n        color: ${theme('theme', {\r\n            light: 'var(--blue)',\r\n            dark: 'var(--accent)'\r\n        })};\r\n      }\r\n\r\n      .rbc-button-link {\r\n        font-size: 0.75rem;\r\n        font-family: var(--heading-font);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    // tablet portrait\r\n    @media screen and (min-width: 768px) {\r\n      min-height: 800px;\r\n\r\n      .rbc-date-cell {\r\n        text-align: right;\r\n        padding: 10px;\r\n      }\r\n    }\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 1200px;\r\n    }\r\n  }\r\n\r\n  .rbc-time-view {\r\n    flex: unset;\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    max-height: 40px;\r\n\r\n    .rbc-time-slot {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  .rbc-events-container {\r\n    margin: 0 !important;\r\n\r\n    .rbc-event {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n      border-radius: 0;\r\n\r\n      &-label {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .rbc-event {\r\n    padding: 0;\r\n    background: transparent !important;\r\n    border-radius: 0;\r\n    outline: none !important;\r\n  }\r\n\r\n  .rbc-show-more {\r\n    color: ${theme('theme', {\r\n      light: 'var(--blue)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n    background: transparent;\r\n    margin: 10px auto 0;\r\n  }\r\n\r\n  .rbc-row-segment {\r\n    min-height: 20px;\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  text-align: center;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    \r\n    &[dir=\"ltr\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-left: 68px;\r\n      }\r\n    }\r\n\r\n    &[dir=\"rtl\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-right: 68px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  width: 100%;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 300px;\r\n  }\r\n`;\r\n\r\n\r\nexport {StyledEventsCalendar, Navigation, Header}","// styled components\r\nimport {Navigation} from './styles';\r\nimport React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport { FaSearch } from \"react-icons/fa\";\r\n// components\r\nimport TabButton from '@ui/TabButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewNavigator = ({current, handler}) => {\r\n   \r\n    \r\n    return (\r\n        <Navigation className=\"tab-nav\">\r\n           \r\n            <TabButton title=\"CREATE\" />\r\n            <TabButton title=\"UPDATE\" />\r\n\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nViewNavigator.propTypes = {\r\n    current: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ViewNavigator","// styling\r\nimport styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\n// components\r\nimport TruncatedText from '@components/TruncatedText';\r\nimport Popup from '@components/Popup';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\nimport {useState} from 'react';\r\n\r\n// utils\r\nimport dayjs from 'dayjs';\r\n\r\nconst StyledEvent = styled.div`\r\n  background: rgba(0, 0, 0, 0.4);\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid transparent;\r\n  color: ${theme('theme', {\r\n    light: 'var(--text)',\r\n    dark: '#fff'\r\n  })};\r\n  position: relative;\r\n  min-height: 20px;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${theme('theme', {\r\n      light: '#f7f7f7',\r\n      dark: '#111312'\r\n    })};\r\n    mix-blend-mode: luminosity;\r\n  }\r\n\r\n  &.marketing {\r\n    border-color: var(--turquoise);\r\n    background: var(--turquoise);\r\n  }\r\n\r\n  &.workflow {\r\n    border-color: var(--azure);\r\n    background: var(--azure);\r\n  }\r\n\r\n  &.health {\r\n    border-color: var(--grass);\r\n    background: var(--grass);\r\n  }\r\n\r\n  &.other {\r\n    border-color: var(--accent);\r\n    background: var(--accent);\r\n  }\r\n  \r\n  &.week, &.month {\r\n    .text {\r\n      display: none;\r\n    }\r\n  }\r\n  \r\n  // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      &.week, &.month {\r\n        .text {\r\n            display: block;\r\n        }\r\n      }\r\n      \r\n      &.month {\r\n        min-height: 40px;\r\n      }\r\n    }\r\n`;\r\n\r\nconst Event = ({event, view}) => {\r\n    const [ref, {width}] = useMeasure();\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    const formattedDate = date => dayjs(date).format('HH:mm A');\r\n\r\n    const isEnded = dayjs(event.end).isBefore(dayjs());\r\n\r\n    return (\r\n        <>\r\n            <StyledEvent className={`${event.type} ${view} ${isEnded ? 'ended' : ''}`}\r\n                         ref={ref}\r\n                         onClick={view !== 'day' ? () => setPopupOpen(true) : null}\r\n            >\r\n                <TruncatedText className=\"text p-relative z-2\" text={event.name} lines={1} width={width}/>\r\n            </StyledEvent>\r\n            {\r\n                view !== 'day' &&\r\n                <Popup\r\n                    open={popupOpen}\r\n                    onClose={() => setPopupOpen(false)}>\r\n                    <div className=\"d-flex flex-column g-4\">\r\n                        <h3>{event.name}</h3>\r\n                        <span className=\"label h5\">\r\n                            {formattedDate(event.start)} - {formattedDate(event.end)}\r\n                        </span>\r\n                    </div>\r\n                </Popup>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event","// styles\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { Button } from '@mui/material';\r\n\r\n// styled components\r\nimport { Header} from './styles';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport ViewNavigator from './ViewNavigator';\r\nimport Navigator from './Navigator';\r\nimport Event from './Event';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useWindowSize} from 'react-use';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\n\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\n\r\n// utils\r\nimport moment from 'moment';\r\n\r\n// events\r\nimport schedule from '@db/schedule';\r\n\r\nconst AffichageCrud = () => {\r\n    const {direction} = useThemeProvider();\r\n    const [currentView, setCurrentView] = useState('day');\r\n    const localizer = momentLocalizer(moment);\r\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\r\n    const [currentTime, setCurrentTime] = useState(moment().format('HH:mm'));\r\n    const {width} = useWindowSize();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentTime(moment().format('HH:mm'));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [currentTime]);\r\n\r\n\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleSearch = () => {\r\n        console.log(\"Recherche effectuée :\", searchTerm);\r\n    };\r\n\r\n\r\n    const handleNavigation = (action) => {\r\n        switch (action) {\r\n            case 'NEXT':\r\n                setCurrentDate(moment(currentDate).add(1, currentView).toDate());\r\n                break;\r\n            case 'PREV':\r\n                setCurrentDate(moment(currentDate).subtract(1, currentView).toDate());\r\n                break;\r\n            default:\r\n                setCurrentDate(moment().toDate());\r\n        }\r\n    }\r\n\r\n    const getWeek = (date) => {\r\n        const start = moment(date).startOf('week');\r\n        const end = moment(date).endOf('week');\r\n        return [start, end];\r\n    }\r\n\r\n    const getTitleFormat = () => {\r\n        switch (currentView) {\r\n            case 'month':\r\n                return 'MMMM YYYY';\r\n            case 'week':\r\n                return width < 768 ? 'DD.MM.YY' : 'DD MMMM YYYY';\r\n            case 'day':\r\n                return 'DD MMMM YYYY';\r\n            default:\r\n                return 'MMMM YYYY';\r\n        }\r\n    }\r\n\r\n    const getDayFormat = () => {\r\n        switch (true) {\r\n            case width < 768:\r\n                return 'D';\r\n            case width < 1600:\r\n                return 'ddd, D';\r\n            default:\r\n                return 'dddd D MMMM';\r\n        }\r\n    }\r\n\r\n    const players = [\r\n        \r\n        { id: 1, name: 'Franz Beckenbauer', Team: 'FC Bayern', nationalite: 'Argentine',position:'Right side defender'},\r\n        { id: 2, name: 'David Beckham', Team: 'PSG', nationalite: 'France',position:'Left side defender' },\r\n        { id: 3, name: 'Éric Cantona', Team: 'Man United', nationalite: 'Espagne',position:'right attacking midfielder' },\r\n    ];\r\n    const config = {\r\n        as: Calendar,\r\n        className: currentView,\r\n        views: ['month', 'week', 'day'],\r\n        view: currentView,\r\n        date: currentDate,\r\n        localizer: localizer,\r\n        startAccessor: 'start',\r\n        endAccessor: 'end',\r\n        onNavigate: handleNavigation,\r\n        onView: setCurrentView,\r\n        min: moment().startOf('year').set({hour: 8, minute: 0}).toDate(),\r\n        max: moment().endOf('year').set({hour: 22, minute: 0}).toDate(),\r\n        step: 30,\r\n        events: schedule,\r\n        formats: {\r\n            timeGutterFormat: 'HH:mm',\r\n            dayFormat: getDayFormat(),\r\n        },\r\n        \r\n      \r\n    }\r\n\r\n    return (\r\n        <Spring className=\"card h-fit card-padded\">\r\n            <div className=\"card h-fit card-padded\">\r\n                <Header>\r\n            <div style={{ display: 'flex', alignItems: 'center', width: '30%' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        placeholder=\"To research...\"\r\n                        style={{ flex: '1', fontSize: '15px', padding: '5px', borderBottom: '2px solid #ddd',alignItems: 'center' }}\r\n                    />\r\n                    <Button onClick={handleSearch} style={{ backgroundColor: 'yellow', color: 'black', borderRadius: '20%' }}>\r\n                        <FaSearch />\r\n                    </Button>\r\n            </div>\r\n\r\n                    <ViewNavigator /> \r\n                                  \r\n                </Header>\r\n                <div style={{ width: '100%', overflowX: 'auto', padding: '10px' }}>\r\n                    <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>ID</th>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Nom</th>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Team</th>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Nationalite</th>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Position</th>\r\n                                <th style={{ padding: '10px', textAlign: 'left', fontWeight: 'bold', borderBottom: '1px solid #ddd' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {players.map(player => (\r\n                                <tr key={player.id}>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>{player.id}</td>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>{player.name}</td>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>{player.Team}</td>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>{player.nationalite}</td>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>{player.position}</td>\r\n                                    <td style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>\r\n                                        <Button style={{ backgroundColor: 'red' }} ><b style={{ color: 'white' }}>DELETE</b></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </Spring>\r\n    );\r\n};\r\n\r\nexport default AffichageCrud","import styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\nconst StyledEventsCalendar = styled.div`\r\n  .rbc-month-view,\r\n  .rbc-time-view,\r\n  .rbc-time-header {\r\n    border: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-off-range-bg,\r\n  .rbc-today {\r\n    background: transparent;\r\n  }\r\n\r\n  .rbc-header {\r\n    border-bottom: 1px solid var(--border);\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: var(--heading-font);\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    color: var(--header);\r\n    font-weight: 600;\r\n\r\n    button {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .rbc-day-bg + .rbc-day-bg,\r\n  .rbc-header + .rbc-header,\r\n  .rbc-time-header-content,\r\n  .rbc-time-content > * + * > * {\r\n    border-left: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-time-content,\r\n  .rbc-time-content:first-of-type {\r\n    border-top: none;\r\n  }\r\n\r\n  .rbc-time-header.rbc-overflowing {\r\n    border-right: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-month-row + .rbc-month-row {\r\n    border-top: 1px solid var(--border);\r\n  }\r\n\r\n  .rbc-day-slot .rbc-time-slot {\r\n    border-top: 1px dashed var(--border);\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    border-bottom: 1px dashed var(--border);\r\n    position: relative;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .rbc-current-time-indicator {\r\n    background: ${theme('theme', {\r\n      light: 'var(--azure)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n  }\r\n\r\n  .rbc-time-gutter {\r\n    width: 68px;\r\n\r\n    .rbc-timeslot-group {\r\n      .rbc-time-slot {\r\n        &:first-of-type {\r\n          flex: 1;\r\n          align-items: center;\r\n          justify-content: center;\r\n          position: relative;\r\n\r\n          &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 1px;\r\n            border-top: 1px dashed var(--border);\r\n            transform: translateY(-50%);\r\n            z-index: 1;\r\n          }\r\n\r\n          .rbc-label {\r\n            position: relative;\r\n            z-index: 2;\r\n            font-family: var(--heading-font);\r\n            font-size: 9px;\r\n            letter-spacing: 0.45px;\r\n            font-weight: 600;\r\n            color: var(--btn-text);\r\n            height: 20px;\r\n            width: 40px;\r\n            background: var(--widget);\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            line-height: 11px;\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.day {\r\n    .rbc-day-slot .rbc-timeslot-group:first-of-type .rbc-time-slot:first-of-type {\r\n      border-top: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  &.week {\r\n    .rbc-allday-cell,\r\n    .rbc-current-time-indicator{\r\n      display: none;\r\n    }\r\n\r\n    .rbc-time-header {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &.month .rbc-month-view {\r\n    min-height: 500px;\r\n\r\n    .rbc-date-cell {\r\n      padding: 4px 0 0 0;\r\n      text-align: center;\r\n\r\n      &.rbc-off-range {\r\n        opacity: .5;\r\n      }\r\n\r\n      &.rbc-now .rbc-button-link {\r\n        font-weight: 600;\r\n        color: ${theme('theme', {\r\n            light: 'var(--blue)',\r\n            dark: 'var(--accent)'\r\n        })};\r\n      }\r\n\r\n      .rbc-button-link {\r\n        font-size: 0.75rem;\r\n        font-family: var(--heading-font);\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    // tablet portrait\r\n    @media screen and (min-width: 768px) {\r\n      min-height: 800px;\r\n\r\n      .rbc-date-cell {\r\n        text-align: right;\r\n        padding: 10px;\r\n      }\r\n    }\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 1200px;\r\n    }\r\n  }\r\n\r\n  .rbc-time-view {\r\n    flex: unset;\r\n  }\r\n\r\n  .rbc-timeslot-group {\r\n    max-height: 40px;\r\n\r\n    .rbc-time-slot {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  .rbc-events-container {\r\n    margin: 0 !important;\r\n\r\n    .rbc-event {\r\n      padding: 0;\r\n      background: transparent;\r\n      border: none;\r\n      border-radius: 0;\r\n\r\n      &-label {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .rbc-event {\r\n    padding: 0;\r\n    background: transparent !important;\r\n    border-radius: 0;\r\n    outline: none !important;\r\n  }\r\n\r\n  .rbc-show-more {\r\n    color: ${theme('theme', {\r\n      light: 'var(--blue)',\r\n      dark: 'var(--accent)'\r\n    })};\r\n    background: transparent;\r\n    margin: 10px auto 0;\r\n  }\r\n\r\n  .rbc-row-segment {\r\n    min-height: 20px;\r\n\r\n    // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      min-height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  text-align: center;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    \r\n    &[dir=\"ltr\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-left: 68px;\r\n      }\r\n    }\r\n\r\n    &[dir=\"rtl\"] {\r\n      &[data-view=\"day\"] .date {\r\n        margin-right: 68px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  width: 100%;\r\n\r\n  // tablet landscape\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 300px;\r\n  }\r\n`;\r\n\r\nexport {StyledEventsCalendar, Navigation, Header}","// styled components\r\nimport {Navigation} from './styles';\r\n\r\n// components\r\nimport TabButton from '@ui/TabButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewNavigator = ({current, handler}) => {\r\n    return (\r\n        <Navigation className=\"tab-nav\">\r\n            <TabButton title=\"Month\" active={current === 'month'} onClick={() => handler('month')}/>\r\n            <TabButton title=\"Week\" active={current === 'week'} onClick={() => handler('week')}/>\r\n            <TabButton title=\"Day\" active={current === 'day'} onClick={() => handler('day')}/>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nViewNavigator.propTypes = {\r\n    current: PropTypes.string.isRequired,\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ViewNavigator","// styled components\r\nimport {Navigation} from './styles';\r\n\r\n// components\r\nimport TabButton from '@ui/TabButton';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navigator = ({date, handler}) => {\r\n    const handlePrev = () => handler('PREV', date);\r\n    const handleNext = () => handler('NEXT', date);\r\n\r\n    return (\r\n        <Navigation className=\"tab-nav\">\r\n            <TabButton title=\"Prev\" onClick={handlePrev}/>\r\n            <TabButton title=\"Today\" onClick={handler}/>\r\n            <TabButton title=\"Next\" onClick={handleNext}/>\r\n        </Navigation>\r\n    )\r\n}\r\n\r\nNavigator.propTypes = {\r\n    handler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Navigator","// styling\r\nimport styled from 'styled-components/macro';\r\nimport theme from 'styled-theming';\r\n\r\n// components\r\nimport TruncatedText from '@components/TruncatedText';\r\nimport Popup from '@components/Popup';\r\n\r\n// hooks\r\nimport useMeasure from 'react-use-measure';\r\nimport {useState} from 'react';\r\n\r\n// utils\r\nimport dayjs from 'dayjs';\r\n\r\nconst StyledEvent = styled.div`\r\n  background: rgba(0, 0, 0, 0.4);\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid transparent;\r\n  color: ${theme('theme', {\r\n    light: 'var(--text)',\r\n    dark: '#fff'\r\n  })};\r\n  position: relative;\r\n  min-height: 20px;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: ${theme('theme', {\r\n      light: '#f7f7f7',\r\n      dark: '#111312'\r\n    })};\r\n    mix-blend-mode: luminosity;\r\n  }\r\n\r\n  &.marketing {\r\n    border-color: var(--turquoise);\r\n    background: var(--turquoise);\r\n  }\r\n\r\n  &.workflow {\r\n    border-color: var(--azure);\r\n    background: var(--azure);\r\n  }\r\n\r\n  &.health {\r\n    border-color: var(--grass);\r\n    background: var(--grass);\r\n  }\r\n\r\n  &.other {\r\n    border-color: var(--accent);\r\n    background: var(--accent);\r\n  }\r\n  \r\n  &.week, &.month {\r\n    .text {\r\n      display: none;\r\n    }\r\n  }\r\n  \r\n  // desktop\r\n    @media screen and (min-width: 1280px) {\r\n      &.week, &.month {\r\n        .text {\r\n            display: block;\r\n        }\r\n      }\r\n      \r\n      &.month {\r\n        min-height: 40px;\r\n      }\r\n    }\r\n`;\r\n\r\nconst Event = ({event, view}) => {\r\n    const [ref, {width}] = useMeasure();\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    const formattedDate = date => dayjs(date).format('HH:mm A');\r\n\r\n    const isEnded = dayjs(event.end).isBefore(dayjs());\r\n\r\n    return (\r\n        <>\r\n            <StyledEvent className={`${event.type} ${view} ${isEnded ? 'ended' : ''}`}\r\n                         ref={ref}\r\n                         onClick={view !== 'day' ? () => setPopupOpen(true) : null}\r\n            >\r\n                <TruncatedText className=\"text p-relative z-2\" text={event.name} lines={1} width={width}/>\r\n            </StyledEvent>\r\n            {\r\n                view !== 'day' &&\r\n                <Popup\r\n                    open={popupOpen}\r\n                    onClose={() => setPopupOpen(false)}>\r\n                    <div className=\"d-flex flex-column g-4\">\r\n                        <h3>{event.name}</h3>\r\n                        <span className=\"label h5\">\r\n                            {formattedDate(event.start)} - {formattedDate(event.end)}\r\n                        </span>\r\n                    </div>\r\n                </Popup>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Event","// styles\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\n// styled components\r\nimport {StyledEventsCalendar, Header} from './styles';\r\n\r\n// components\r\nimport Spring from '@components/Spring';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport ViewNavigator from './ViewNavigator';\r\nimport Navigator from './Navigator';\r\nimport Event from './Event';\r\n\r\n// hooks\r\nimport {useState, useEffect} from 'react';\r\nimport {useWindowSize} from 'react-use';\r\nimport {useThemeProvider} from '@contexts/themeContext';\r\n\r\n// utils\r\nimport moment from 'moment';\r\n\r\n// events\r\nimport schedule from '@db/schedule';\r\n\r\nconst EventsCalendar = () => {\r\n    const {direction} = useThemeProvider();\r\n    const [currentView, setCurrentView] = useState('day');\r\n    const localizer = momentLocalizer(moment);\r\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\r\n    const [currentTime, setCurrentTime] = useState(moment().format('HH:mm'));\r\n    const {width} = useWindowSize();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentTime(moment().format('HH:mm'));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [currentTime]);\r\n\r\n    const handleNavigation = (action) => {\r\n        switch (action) {\r\n            case 'NEXT':\r\n                setCurrentDate(moment(currentDate).add(1, currentView).toDate());\r\n                break;\r\n            case 'PREV':\r\n                setCurrentDate(moment(currentDate).subtract(1, currentView).toDate());\r\n                break;\r\n            default:\r\n                setCurrentDate(moment().toDate());\r\n        }\r\n    }\r\n\r\n    const getWeek = (date) => {\r\n        const start = moment(date).startOf('week');\r\n        const end = moment(date).endOf('week');\r\n        return [start, end];\r\n    }\r\n\r\n    const getTitleFormat = () => {\r\n        switch (currentView) {\r\n            case 'month':\r\n                return 'MMMM YYYY';\r\n            case 'week':\r\n                return width < 768 ? 'DD.MM.YY' : 'DD MMMM YYYY';\r\n            case 'day':\r\n                return 'DD MMMM YYYY';\r\n            default:\r\n                return 'MMMM YYYY';\r\n        }\r\n    }\r\n\r\n    const getDayFormat = () => {\r\n        switch (true) {\r\n            case width < 768:\r\n                return 'D';\r\n            case width < 1600:\r\n                return 'ddd, D';\r\n            default:\r\n                return 'dddd D MMMM';\r\n        }\r\n    }\r\n\r\n    const config = {\r\n        as: Calendar,\r\n        className: currentView,\r\n        views: ['month', 'week', 'day'],\r\n        view: currentView,\r\n        date: currentDate,\r\n        localizer: localizer,\r\n        startAccessor: 'start',\r\n        endAccessor: 'end',\r\n        onNavigate: handleNavigation,\r\n        onView: setCurrentView,\r\n        min: moment().startOf('year').set({hour: 8, minute: 0}).toDate(),\r\n        max: moment().endOf('year').set({hour: 22, minute: 0}).toDate(),\r\n        step: 30,\r\n        events: schedule,\r\n        formats: {\r\n            timeGutterFormat: 'HH:mm',\r\n            dayFormat: getDayFormat(),\r\n        },\r\n        components: {\r\n            toolbar: ({date}) => <Header data-view={currentView} dir={direction}>\r\n                <Navigator date={date} handler={handleNavigation}/>\r\n                <h3 className=\"date\">\r\n                    {\r\n                        currentView === 'week' && getWeek(date).map((date, index) => {\r\n                                return (\r\n                                    <span key={index}>\r\n                                    {date.format(getTitleFormat(date))}\r\n                                        {index === 0 ? ' - ' : null}\r\n                                </span>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                    {\r\n                        currentView === 'month' && moment(date).format(getTitleFormat(date))\r\n                    }\r\n                    {\r\n                        currentView === 'day' && `${moment(date).format(getTitleFormat(date))}, ${currentTime}`\r\n                    }\r\n                </h3>\r\n                <ViewNavigator current={currentView} handler={setCurrentView}/>\r\n            </Header>,\r\n            event: ({event}) => <Event event={event} view={currentView}/>\r\n        },\r\n        selectable: currentView !== 'day',\r\n        messages: {\r\n            showMore: (total) => `+ ${total}`,\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Spring className=\"card h-fit card-padded\">\r\n            <StyledEventsCalendar {...config}/>\r\n        </Spring>\r\n    )\r\n}\r\n\r\nexport default EventsCalendar"],"names":["name","start","moment","set","hour","minute","second","millisecond","toDate","end","allDay","type","Referee","_jsxs","_Fragment","children","_jsx","PageHeader","title","AffichageCrud","styled","div","withConfig","componentId","theme","light","dark","Header","Navigation","_ref","current","handler","className","TabButton","direction","useThemeProvider","currentView","setCurrentView","useState","currentDate","setCurrentDate","momentLocalizer","currentTime","setCurrentTime","format","width","useWindowSize","useEffect","interval","setInterval","clearInterval","searchTerm","setSearchTerm","Calendar","startOf","endOf","schedule","getDayFormat","Spring","style","display","alignItems","value","onChange","e","target","placeholder","flex","fontSize","padding","borderBottom","Button","onClick","handleSearch","console","log","backgroundColor","color","borderRadius","FaSearch","ViewNavigator","overflowX","borderCollapse","textAlign","fontWeight","id","Team","nationalite","position","map","player","StyledEventsCalendar","active","date","handlePrev","handleNext","StyledEvent","event","view","ref","useMeasure","popupOpen","setPopupOpen","formattedDate","dayjs","isEnded","isBefore","concat","TruncatedText","text","lines","Popup","open","onClose","EventsCalendar","localizer","handleNavigation","action","add","subtract","getWeek","getTitleFormat","config","as","views","startAccessor","endAccessor","onNavigate","onView","min","max","step","events","formats","timeGutterFormat","dayFormat","components","toolbar","dir","Navigator","index","_ref2","Event","selectable","messages","showMore","total"],"sourceRoot":""}