{"version":3,"file":"static/js/4360.d83a3093.chunk.js","mappings":"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","sources":["widgets/TournamentWidgets/TournamentList/index.jsx","pages/Tournament/TournamentList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Swiper from 'swiper';\r\nimport \"./style.css\"\r\nimport { useAuthContext } from \"@hooks/useAuthContext\";\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Link } from 'react-router-dom';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { IoIosCloseCircle } from \"react-icons/io\";\r\n\r\nconst Index = () => {\r\n  const [tournaments, setTournaments] = useState([]);\r\n  const [filteredTournaments, setFilteredTournaments] = useState([]);\r\n  const [activeTournament, setActiveTournament] = useState(null);\r\n  const { USER } = useAuthContext();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [searchActive, setSearchActive] = useState(false); // State to control the search field activation\r\n\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchTitle(\"\");\r\n    setSearchActive(false);\r\n    // Add any additional logic here if needed\r\n  };\r\n  const handleSearchButtonClick = () => {\r\n    setSearchActive(true); // Activate the search field when the search button is clicked\r\n  };\r\n\r\n\r\n  const handleSearch = (event) => {\r\n    const { value } = event.target;\r\n    setSearchTitle(value);\r\n    const filtered = tournaments.filter(tournament => tournament.title.toLowerCase().includes(value.toLowerCase()));\r\n    setFilteredTournaments(filtered);\r\n    if (filtered.length > 0) {\r\n      setActiveTournament(filtered[0]);\r\n    } else {\r\n      setActiveTournament(null);\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const isTournamentPaid = () => {\r\n    return payments.some(payment => payment.tournament === activeTournament._id && payment.payment_status === \"paid\");\r\n  };\r\n  const handlePayedClick = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTournaments = async () => {\r\n      try {\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n        console.log(userId)\r\n\r\n        const response = await axios.get(`http://localhost:3000/Tournament/getByUserId/${userId}`);\r\n\r\n        const data = response.data && response.data.tournaments ? response.data.tournaments : [];\r\n        setTournaments(data);\r\n        setFilteredTournaments(data);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching tournaments:\", error.message);\r\n      }\r\n    };\r\n\r\n    if (USER && USER.email) {\r\n      fetchTournaments();\r\n    }\r\n  }, [USER]);\r\n\r\n  useEffect(() => {\r\n    const fetchPayments = async () => {\r\n      try {\r\n        const userResponse = await axios.get(`http://localhost:3000/User/getbyemail?email=${USER.email}`);\r\n        const userId = userResponse.data._id;\r\n\r\n        const response = await axios.get(`http://localhost:3000/Payment/user/${userId}`);\r\n\r\n        const data = response.data || [];\r\n        console.log('payments :',data)\r\n        setPayments(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching payments:\", error.message);\r\n      }\r\n    };\r\n\r\n    if (USER && USER.email) {\r\n      fetchPayments();\r\n    }\r\n  }, [USER]);\r\n\r\n\r\n  useEffect(() => {\r\n    const swiper = new Swiper('.swiper', {\r\n      effect: 'cards',\r\n      grabCursor: true,\r\n      initialSlide: 2,\r\n      speed: 500,\r\n      loop: true,\r\n      rotate: true,\r\n      mousewheel: {\r\n        invert: false,\r\n      },\r\n      on: {\r\n        slideChange: function () {\r\n          const activeIndex = this.activeIndex % filteredTournaments.length;\r\n          setActiveTournament(filteredTournaments[activeIndex]);\r\n        },\r\n      },\r\n    });\r\n\r\n    swiper.on('slideChange', () => {\r\n      const activeIndex = swiper.realIndex % filteredTournaments.length;\r\n      setActiveTournament(filteredTournaments[activeIndex]);\r\n    });\r\n\r\n    return () => {\r\n      swiper.destroy(true, true);\r\n    };\r\n  }, [filteredTournaments]);\r\n\r\n  return (\r\n      <section>\r\n\r\n\r\n        <div className=\"content\">\r\n          <div className=\"info\">\r\n            {searchActive ? (\r\n                <div  className=\"search-container\">\r\n                  <TextField\r\n                      style={{boxShadow:'0 4px 20px -2px #e9e9e9',borderRadius:'40px' ,border: '1px solid #ccc' }}\r\n                      type=\"text\"\r\n                      value={searchTitle}\r\n                      onChange={handleSearch}\r\n                      placeholder=\"Search by title\"\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IoIosCloseCircle  onClick={handleClearSearch} style={{ cursor: 'pointer',color:'red',fontSize: '16px' }} />\r\n                            </InputAdornment>\r\n                        ),\r\n                      }}\r\n                  />\r\n                </div>\r\n            ) : (\r\n\r\n                  <Button className=\"search-container\" onClick={handleSearchButtonClick} variant=\"contained\">Search</Button>\r\n            )}\r\n            {activeTournament ? (\r\n                <>\r\n                  <p>\r\n                   <b>Title:</b>  {activeTournament.title} <br />\r\n                    <b>Start Date:</b>  {activeTournament.startDay}/{activeTournament.startMonth}/{activeTournament.startYear} <br />\r\n                    <b> End Date:</b>  {activeTournament.endDay}/{activeTournament.endMonth}/{activeTournament.endYear} <br />\r\n                    <b> Country:</b>  {activeTournament.Country} <br />\r\n                    <b> City:</b>  {activeTournament.City} <br />\r\n                    <b> Tournament Type:</b>  {activeTournament.TournamentType} <br />\r\n                    <b>Access: </b>   {activeTournament.access} <br />\r\n                    <b> FriOrComp: </b>  {activeTournament.FriOrComp} <br />\r\n                  </p>\r\n\r\n                  <div className=\"button-containerr\">\r\n                    <Button\r\n                        style={{\r\n                          marginRight: '10px',\r\n                          backgroundColor: activeTournament && isTournamentPaid() ? '#CCCCCC' : '#FDCA40',\r\n                          color: activeTournament && isTournamentPaid() ? '#666666' : 'black',\r\n                        }}\r\n                        variant=\"contained\"\r\n                        disabled={activeTournament && isTournamentPaid()}\r\n                        onClick={handlePayedClick}\r\n                    >\r\n                      PAID\r\n                    </Button>\r\n                    <button style={{ color: 'black' }} className=\"btnnn\"><Link to=\"/LeaguesBackOffice\">SEE MORE</Link></button>\r\n                  </div>\r\n                </>\r\n            ) : (\r\n                <p className=\"info\" >There are no tournaments available for you right now.</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"swiper\">\r\n            <div className=\"swiper-wrapper\">\r\n              {tournaments.map((tournament, index) => (\r\n                  <div key={index} className=\"swiper-slide\">\r\n                    {tournament.logo ? (\r\n                        <>\r\n                          <img src={tournament.logo} alt={tournament.title} />\r\n                          <div className=\"overlay\">\r\n                            <span><MdFavorite /></span>\r\n                            {tournament.rating ? (\r\n                                <p>{(((parseInt(tournament.rating['5 stars']) * 5 +\r\n                                            parseInt(tournament.rating['4 stars']) * 4 +\r\n                                            parseInt(tournament.rating['3 stars']) * 3 +\r\n                                            parseInt(tournament.rating['2 stars']) * 2 +\r\n                                            parseInt(tournament.rating['1 star'])) /\r\n                                        (parseInt(tournament.rating['5 stars']) +\r\n                                            parseInt(tournament.rating['4 stars']) +\r\n                                            parseInt(tournament.rating['3 stars']) +\r\n                                            parseInt(tournament.rating['2 stars']) +\r\n                                            parseInt(tournament.rating['1 star']))) || 0\r\n                                ).toFixed(1)}</p>\r\n                            ) : (\r\n                                <p>0.0</p>\r\n                            )}\r\n\r\n                            <h2>{tournament.title}</h2>\r\n                          </div>\r\n                        </>\r\n                    ) : (\r\n                        <img src='https://img.pikbest.com/origin/05/97/54/08QpIkbEsTMsd.jpg!sw800' alt=\"Default\" className=\"default-image\" />\r\n                    )}\r\n                  </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog  style={{ backgroundColor: 'transparent'}} open={openDialog} onClose={() => setOpenDialog(false)}>\r\n          <div style={{ padding: '20px' }}>\r\n            {/* <h2  style={{marginLeft: '30px',  color: 'red' }}><u>Select Payment Option</u></h2><br/>*/}\r\n            <h2><u>Select Payment Option</u></h2>\r\n            <Button style={{ marginRight: '10px', backgroundColor: '#ffc107', color: 'black' }}  variant=\"contained\" ><b><Link to=\"/payment-stripe\">Pay with Stripe</Link></b></Button>\r\n            <Button style={{ marginRight: '10px', backgroundColor: '#063fbb', color: 'white' }} variant=\"contained\" ><b><Link to=\"/payment-coin\">Pay with GSCoin</Link></b></Button>\r\n          </div>\r\n        </Dialog>\r\n\r\n        <ul className=\"circles\">\r\n          {Array.from({ length: 10 }).map((_, index) => (\r\n              <li key={index}></li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default Index;","import React from 'react'\r\nimport PageHeader from '@layout/PageHeader';\r\nimport ListTournament from '@widgets/TournamentWidgets/TournamentList';\r\n\r\n\r\n\r\nconst TournamentList = () => {\r\n    return (<>\r\n\r\n            <PageHeader title=\"Tournament List\" />\r\n            <ListTournament   />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TournamentList"],"names":["Index","tournaments","setTournaments","useState","filteredTournaments","setFilteredTournaments","activeTournament","setActiveTournament","USER","useAuthContext","openDialog","setOpenDialog","payments","setPayments","searchTitle","setSearchTitle","searchActive","setSearchActive","isTournamentPaid","some","payment","tournament","_id","payment_status","useEffect","email","async","userId","axios","get","concat","data","console","log","response","error","message","fetchTournaments","fetchPayments","swiper","Swiper","effect","grabCursor","initialSlide","speed","loop","rotate","mousewheel","invert","on","slideChange","activeIndex","this","length","realIndex","destroy","_jsxs","children","className","_jsx","TextField","style","boxShadow","borderRadius","border","type","value","onChange","event","target","filtered","filter","title","toLowerCase","includes","placeholder","InputProps","endAdornment","InputAdornment","position","IoIosCloseCircle","onClick","handleClearSearch","cursor","color","fontSize","Button","handleSearchButtonClick","variant","_Fragment","startDay","startMonth","startYear","endDay","endMonth","endYear","Country","City","TournamentType","access","FriOrComp","marginRight","backgroundColor","disabled","handlePayedClick","Link","to","map","index","logo","src","alt","MdFavorite","rating","parseInt","toFixed","Dialog","open","onClose","padding","Array","from","_","TournamentList","PageHeader","ListTournament"],"sourceRoot":""}